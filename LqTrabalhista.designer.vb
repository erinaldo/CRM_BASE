'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Trabalhista")>  _
Partial Public Class LqTrabalhistaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSetoresClientes(instance As SetoresClientes)
    End Sub
  Partial Private Sub UpdateSetoresClientes(instance As SetoresClientes)
    End Sub
  Partial Private Sub DeleteSetoresClientes(instance As SetoresClientes)
    End Sub
  Partial Private Sub InsertFuncoesClientesSetores(instance As FuncoesClientesSetores)
    End Sub
  Partial Private Sub UpdateFuncoesClientesSetores(instance As FuncoesClientesSetores)
    End Sub
  Partial Private Sub DeleteFuncoesClientesSetores(instance As FuncoesClientesSetores)
    End Sub
  Partial Private Sub InsertFuncoesClientes(instance As FuncoesClientes)
    End Sub
  Partial Private Sub UpdateFuncoesClientes(instance As FuncoesClientes)
    End Sub
  Partial Private Sub DeleteFuncoesClientes(instance As FuncoesClientes)
    End Sub
  Partial Private Sub InsertRiscos(instance As Riscos)
    End Sub
  Partial Private Sub UpdateRiscos(instance As Riscos)
    End Sub
  Partial Private Sub DeleteRiscos(instance As Riscos)
    End Sub
  Partial Private Sub InsertESocial(instance As ESocial)
    End Sub
  Partial Private Sub UpdateESocial(instance As ESocial)
    End Sub
  Partial Private Sub DeleteESocial(instance As ESocial)
    End Sub
  Partial Private Sub InsertEventos_ESocial(instance As Eventos_ESocial)
    End Sub
  Partial Private Sub UpdateEventos_ESocial(instance As Eventos_ESocial)
    End Sub
  Partial Private Sub DeleteEventos_ESocial(instance As Eventos_ESocial)
    End Sub
  Partial Private Sub InsertColaboradoresCliente(instance As ColaboradoresCliente)
    End Sub
  Partial Private Sub UpdateColaboradoresCliente(instance As ColaboradoresCliente)
    End Sub
  Partial Private Sub DeleteColaboradoresCliente(instance As ColaboradoresCliente)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CRM_BASE.My.MySettings.Default.TrabalhistaConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property SetoresClientes() As System.Data.Linq.Table(Of SetoresClientes)
		Get
			Return Me.GetTable(Of SetoresClientes)
		End Get
	End Property
	
	Public ReadOnly Property FuncoesClientesSetores() As System.Data.Linq.Table(Of FuncoesClientesSetores)
		Get
			Return Me.GetTable(Of FuncoesClientesSetores)
		End Get
	End Property
	
	Public ReadOnly Property FuncoesClientes() As System.Data.Linq.Table(Of FuncoesClientes)
		Get
			Return Me.GetTable(Of FuncoesClientes)
		End Get
	End Property
	
	Public ReadOnly Property RiscosSetores() As System.Data.Linq.Table(Of RiscosSetores)
		Get
			Return Me.GetTable(Of RiscosSetores)
		End Get
	End Property
	
	Public ReadOnly Property Riscos() As System.Data.Linq.Table(Of Riscos)
		Get
			Return Me.GetTable(Of Riscos)
		End Get
	End Property
	
	Public ReadOnly Property ESocial() As System.Data.Linq.Table(Of ESocial)
		Get
			Return Me.GetTable(Of ESocial)
		End Get
	End Property
	
	Public ReadOnly Property Eventos_ESocial() As System.Data.Linq.Table(Of Eventos_ESocial)
		Get
			Return Me.GetTable(Of Eventos_ESocial)
		End Get
	End Property
	
	Public ReadOnly Property CategoriasTrabalhadores() As System.Data.Linq.Table(Of CategoriasTrabalhadores)
		Get
			Return Me.GetTable(Of CategoriasTrabalhadores)
		End Get
	End Property
	
	Public ReadOnly Property ColaboradoresCliente() As System.Data.Linq.Table(Of ColaboradoresCliente)
		Get
			Return Me.GetTable(Of ColaboradoresCliente)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSetorCliente")>  _
	Public Function AtualizaSetorCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetorCliente", DbType:="Int")> ByVal idSetorCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeSetor", DbType:="NText")> ByVal nomeSetor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSetorCliente, nomeSetor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereSetorCliente")>  _
	Public Function InsereSetorCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeSetor", DbType:="NText")> ByVal nomeSetor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CorSetor", DbType:="NText")> ByVal corSetor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, nomeSetor, corSetor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSetorIdClientetodos")>  _
	Public Function AtualizaSetorIdClientetodos(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaFuncoesSetor")>  _
	Public Function DeletaFuncoesSetor(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetorCliente", DbType:="Int")> ByVal idSetorCliente As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSetorCliente)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSetorCliente")>  _
	Public Function DeletaSetorCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetorCliente", DbType:="Int")> ByVal idSetorCliente As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSetorCliente)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereFuncaoCliente")>  _
	Public Function InsereFuncaoCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereFuncaoSetorCliente")>  _
	Public Function InsereFuncaoSetorCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFuncao", DbType:="Int")> ByVal idFuncao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetorCliente", DbType:="Int")> ByVal idSetorCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idFuncao, idCliente, idSetorCliente, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereRiscoSetor")>  _
	Public Function InsereRiscoSetor(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdRisco", DbType:="Int")> ByVal idRisco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetor", DbType:="Int")> ByVal idSetor As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idRisco, idSetor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereRisco")>  _
	Public Function InsereRisco(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Red", DbType:="NText")> ByVal red As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Green", DbType:="NText")> ByVal green As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Blue", DbType:="NText")> ByVal blue As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), descricao, red, green, blue)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaRiscoSetor")>  _
	Public Function DeletaRiscoSetor(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSetor", DbType:="Int")> ByVal idSetor As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSetor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaColaboradorCliente")>  _
	Public Function DeletaColaboradorCliente(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdColaborador", DbType:="Int")> ByVal idColaborador As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idColaborador)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereESocial")>  _
	Public Function InsereESocial(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdColaborador", DbType:="Int")> ByVal idColaborador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Evento", DbType:="NText")> ByVal evento As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataSolicitacao", DbType:="Date")> ByVal dataSolicitacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraSolicitacao", DbType:="Time")> ByVal horaSolicitacao As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataResposta", DbType:="Date")> ByVal dataResposta As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraResposta", DbType:="Time")> ByVal horaResposta As System.Nullable(Of System.TimeSpan)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, idColaborador, evento, dataSolicitacao, horaSolicitacao, dataResposta, horaResposta)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.EditaColaboradorCliente")>  _
	Public Function EditaColaboradorCliente( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdColaboradorCliente", DbType:="Int")> ByVal idColaboradorCliente As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeColaborador", DbType:="NText")> ByVal nomeColaborador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeFantasia", DbType:="NText")> ByVal nomeFantasia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Personalidade", DbType:="Bit")> ByVal personalidade As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DocColaborador", DbType:="NText")> ByVal docColaborador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RG_IE", DbType:="NText")> ByVal rG_IE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CEP", DbType:="NText")> ByVal cEP As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Num", DbType:="Int")> ByVal num As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cmpl", DbType:="NText")> ByVal cmpl As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Telefone", DbType:="NText")> ByVal telefone As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Celular", DbType:="NText")> ByVal celular As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Email", DbType:="NText")> ByVal email As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFuncao", DbType:="Int")> ByVal idFuncao As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DescricaoFuncao", DbType:="NText")> ByVal descricaoFuncao As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Remuneracao", DbType:="Money")> ByVal remuneracao As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataAdmissao", DbType:="Date")> ByVal dataAdmissao As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataDesligamento", DbType:="Date")> ByVal dataDesligamento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="GrupoTrab", DbType:="NText")> ByVal grupoTrab As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CatTrab", DbType:="NText")> ByVal catTrab As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idColaboradorCliente, nomeColaborador, nomeFantasia, personalidade, docColaborador, rG_IE, cEP, num, cmpl, telefone, celular, email, idFuncao, descricaoFuncao, remuneracao, dataAdmissao, dataDesligamento, grupoTrab, catTrab)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereColaboradorCliente")>  _
	Public Function InsereColaboradorCliente( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeColaborador", DbType:="NText")> ByVal nomeColaborador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeFantasia", DbType:="NText")> ByVal nomeFantasia As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Personalidade", DbType:="Bit")> ByVal personalidade As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DocColaborador", DbType:="NText")> ByVal docColaborador As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RG_IE", DbType:="NText")> ByVal rG_IE As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CEP", DbType:="NText")> ByVal cEP As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Num", DbType:="Int")> ByVal num As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cmpl", DbType:="NText")> ByVal cmpl As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Telefone", DbType:="NText")> ByVal telefone As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Celular", DbType:="NText")> ByVal celular As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Email", DbType:="NText")> ByVal email As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFuncao", DbType:="Int")> ByVal idFuncao As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DescricaoFuncao", DbType:="NText")> ByVal descricaoFuncao As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Remuneracao", DbType:="Money")> ByVal remuneracao As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataAdmissao", DbType:="Date")> ByVal dataAdmissao As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataDesligamento", DbType:="Date")> ByVal dataDesligamento As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="GrupoTrab", DbType:="NText")> ByVal grupoTrab As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CatTrab", DbType:="NText")> ByVal catTrab As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, nomeColaborador, nomeFantasia, personalidade, docColaborador, rG_IE, cEP, num, cmpl, telefone, celular, email, idFuncao, descricaoFuncao, remuneracao, dataAdmissao, dataDesligamento, grupoTrab, catTrab)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SetoresClientes")>  _
Partial Public Class SetoresClientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSetorCliente As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _NomeSetor As String
	
	Private _CorSetor As String
	
	Private _FuncoesClientesSetores As EntitySet(Of FuncoesClientesSetores)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSetorClienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSetorClienteChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnNomeSetorChanging(value As String)
    End Sub
    Partial Private Sub OnNomeSetorChanged()
    End Sub
    Partial Private Sub OnCorSetorChanging(value As String)
    End Sub
    Partial Private Sub OnCorSetorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FuncoesClientesSetores = New EntitySet(Of FuncoesClientesSetores)(AddressOf Me.attach_FuncoesClientesSetores, AddressOf Me.detach_FuncoesClientesSetores)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSetorCliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdSetorCliente() As Integer
		Get
			Return Me._IdSetorCliente
		End Get
		Set
			If ((Me._IdSetorCliente = value)  _
						= false) Then
				Me.OnIdSetorClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdSetorCliente = value
				Me.SendPropertyChanged("IdSetorCliente")
				Me.OnIdSetorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeSetor", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeSetor() As String
		Get
			Return Me._NomeSetor
		End Get
		Set
			If (String.Equals(Me._NomeSetor, value) = false) Then
				Me.OnNomeSetorChanging(value)
				Me.SendPropertyChanging
				Me._NomeSetor = value
				Me.SendPropertyChanged("NomeSetor")
				Me.OnNomeSetorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CorSetor", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CorSetor() As String
		Get
			Return Me._CorSetor
		End Get
		Set
			If (String.Equals(Me._CorSetor, value) = false) Then
				Me.OnCorSetorChanging(value)
				Me.SendPropertyChanging
				Me._CorSetor = value
				Me.SendPropertyChanged("CorSetor")
				Me.OnCorSetorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SetoresClientes_FuncoesClientesSetores", Storage:="_FuncoesClientesSetores", ThisKey:="IdSetorCliente", OtherKey:="IdSetorCliente")>  _
	Public Property FuncoesClientesSetores() As EntitySet(Of FuncoesClientesSetores)
		Get
			Return Me._FuncoesClientesSetores
		End Get
		Set
			Me._FuncoesClientesSetores.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FuncoesClientesSetores(ByVal entity As FuncoesClientesSetores)
		Me.SendPropertyChanging
		entity.SetoresClientes = Me
	End Sub
	
	Private Sub detach_FuncoesClientesSetores(ByVal entity As FuncoesClientesSetores)
		Me.SendPropertyChanging
		entity.SetoresClientes = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FuncoesClientesSetores")>  _
Partial Public Class FuncoesClientesSetores
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdFuncaoClienteSetor As Integer
	
	Private _IdFuncao As System.Nullable(Of Integer)
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _IdSetorCliente As System.Nullable(Of Integer)
	
	Private _Descricao As String
	
	Private _SetoresClientes As EntityRef(Of SetoresClientes)
	
	Private _FuncoesClientes As EntityRef(Of FuncoesClientes)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdFuncaoClienteSetorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdFuncaoClienteSetorChanged()
    End Sub
    Partial Private Sub OnIdFuncaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFuncaoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnIdSetorClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSetorClienteChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._SetoresClientes = CType(Nothing, EntityRef(Of SetoresClientes))
		Me._FuncoesClientes = CType(Nothing, EntityRef(Of FuncoesClientes))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFuncaoClienteSetor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdFuncaoClienteSetor() As Integer
		Get
			Return Me._IdFuncaoClienteSetor
		End Get
		Set
			If ((Me._IdFuncaoClienteSetor = value)  _
						= false) Then
				Me.OnIdFuncaoClienteSetorChanging(value)
				Me.SendPropertyChanging
				Me._IdFuncaoClienteSetor = value
				Me.SendPropertyChanged("IdFuncaoClienteSetor")
				Me.OnIdFuncaoClienteSetorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFuncao", DbType:="Int")>  _
	Public Property IdFuncao() As System.Nullable(Of Integer)
		Get
			Return Me._IdFuncao
		End Get
		Set
			If (Me._IdFuncao.Equals(value) = false) Then
				If Me._FuncoesClientes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdFuncaoChanging(value)
				Me.SendPropertyChanging
				Me._IdFuncao = value
				Me.SendPropertyChanged("IdFuncao")
				Me.OnIdFuncaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSetorCliente", DbType:="Int")>  _
	Public Property IdSetorCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdSetorCliente
		End Get
		Set
			If (Me._IdSetorCliente.Equals(value) = false) Then
				If Me._SetoresClientes.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSetorClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdSetorCliente = value
				Me.SendPropertyChanged("IdSetorCliente")
				Me.OnIdSetorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SetoresClientes_FuncoesClientesSetores", Storage:="_SetoresClientes", ThisKey:="IdSetorCliente", OtherKey:="IdSetorCliente", IsForeignKey:=true)>  _
	Public Property SetoresClientes() As SetoresClientes
		Get
			Return Me._SetoresClientes.Entity
		End Get
		Set
			Dim previousValue As SetoresClientes = Me._SetoresClientes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SetoresClientes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SetoresClientes.Entity = Nothing
					previousValue.FuncoesClientesSetores.Remove(Me)
				End If
				Me._SetoresClientes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FuncoesClientesSetores.Add(Me)
					Me._IdSetorCliente = value.IdSetorCliente
				Else
					Me._IdSetorCliente = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SetoresClientes")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FuncoesClientes_FuncoesClientesSetores", Storage:="_FuncoesClientes", ThisKey:="IdFuncao", OtherKey:="IdFuncaoCliente", IsForeignKey:=true)>  _
	Public Property FuncoesClientes() As FuncoesClientes
		Get
			Return Me._FuncoesClientes.Entity
		End Get
		Set
			Dim previousValue As FuncoesClientes = Me._FuncoesClientes.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FuncoesClientes.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FuncoesClientes.Entity = Nothing
					previousValue.FuncoesClientesSetores.Remove(Me)
				End If
				Me._FuncoesClientes.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FuncoesClientesSetores.Add(Me)
					Me._IdFuncao = value.IdFuncaoCliente
				Else
					Me._IdFuncao = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FuncoesClientes")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FuncoesClientes")>  _
Partial Public Class FuncoesClientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdFuncaoCliente As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _Descricao As String
	
	Private _FuncoesClientesSetores As EntitySet(Of FuncoesClientesSetores)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdFuncaoClienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdFuncaoClienteChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FuncoesClientesSetores = New EntitySet(Of FuncoesClientesSetores)(AddressOf Me.attach_FuncoesClientesSetores, AddressOf Me.detach_FuncoesClientesSetores)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFuncaoCliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdFuncaoCliente() As Integer
		Get
			Return Me._IdFuncaoCliente
		End Get
		Set
			If ((Me._IdFuncaoCliente = value)  _
						= false) Then
				Me.OnIdFuncaoClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdFuncaoCliente = value
				Me.SendPropertyChanged("IdFuncaoCliente")
				Me.OnIdFuncaoClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FuncoesClientes_FuncoesClientesSetores", Storage:="_FuncoesClientesSetores", ThisKey:="IdFuncaoCliente", OtherKey:="IdFuncao")>  _
	Public Property FuncoesClientesSetores() As EntitySet(Of FuncoesClientesSetores)
		Get
			Return Me._FuncoesClientesSetores
		End Get
		Set
			Me._FuncoesClientesSetores.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FuncoesClientesSetores(ByVal entity As FuncoesClientesSetores)
		Me.SendPropertyChanging
		entity.FuncoesClientes = Me
	End Sub
	
	Private Sub detach_FuncoesClientesSetores(ByVal entity As FuncoesClientesSetores)
		Me.SendPropertyChanging
		entity.FuncoesClientes = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RiscosSetores")>  _
Partial Public Class RiscosSetores
	
	Private _IdRiscoSetor As Integer
	
	Private _IdRisco As System.Nullable(Of Integer)
	
	Private _IdSetor As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRiscoSetor", AutoSync:=AutoSync.Always, DbType:="Int NOT NULL IDENTITY", IsDbGenerated:=true)>  _
	Public Property IdRiscoSetor() As Integer
		Get
			Return Me._IdRiscoSetor
		End Get
		Set
			If ((Me._IdRiscoSetor = value)  _
						= false) Then
				Me._IdRiscoSetor = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRisco", DbType:="Int")>  _
	Public Property IdRisco() As System.Nullable(Of Integer)
		Get
			Return Me._IdRisco
		End Get
		Set
			If (Me._IdRisco.Equals(value) = false) Then
				Me._IdRisco = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSetor", DbType:="Int")>  _
	Public Property IdSetor() As System.Nullable(Of Integer)
		Get
			Return Me._IdSetor
		End Get
		Set
			If (Me._IdSetor.Equals(value) = false) Then
				Me._IdSetor = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Riscos")>  _
Partial Public Class Riscos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdRisco As Integer
	
	Private _Descricao As String
	
	Private _Red As String
	
	Private _Green As String
	
	Private _Blue As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdRiscoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRiscoChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnRedChanging(value As String)
    End Sub
    Partial Private Sub OnRedChanged()
    End Sub
    Partial Private Sub OnGreenChanging(value As String)
    End Sub
    Partial Private Sub OnGreenChanged()
    End Sub
    Partial Private Sub OnBlueChanging(value As String)
    End Sub
    Partial Private Sub OnBlueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRisco", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdRisco() As Integer
		Get
			Return Me._IdRisco
		End Get
		Set
			If ((Me._IdRisco = value)  _
						= false) Then
				Me.OnIdRiscoChanging(value)
				Me.SendPropertyChanging
				Me._IdRisco = value
				Me.SendPropertyChanged("IdRisco")
				Me.OnIdRiscoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Red", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Red() As String
		Get
			Return Me._Red
		End Get
		Set
			If (String.Equals(Me._Red, value) = false) Then
				Me.OnRedChanging(value)
				Me.SendPropertyChanging
				Me._Red = value
				Me.SendPropertyChanged("Red")
				Me.OnRedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Green", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Green() As String
		Get
			Return Me._Green
		End Get
		Set
			If (String.Equals(Me._Green, value) = false) Then
				Me.OnGreenChanging(value)
				Me.SendPropertyChanging
				Me._Green = value
				Me.SendPropertyChanged("Green")
				Me.OnGreenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Blue", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Blue() As String
		Get
			Return Me._Blue
		End Get
		Set
			If (String.Equals(Me._Blue, value) = false) Then
				Me.OnBlueChanging(value)
				Me.SendPropertyChanging
				Me._Blue = value
				Me.SendPropertyChanged("Blue")
				Me.OnBlueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ESocial")>  _
Partial Public Class ESocial
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdESocial As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _IdColaborador As System.Nullable(Of Integer)
	
	Private _Evento As String
	
	Private _DataSolicitacao As System.Nullable(Of Date)
	
	Private _HoraSolicitacao As System.Nullable(Of System.TimeSpan)
	
	Private _DataResposta As System.Nullable(Of Date)
	
	Private _HoraResposta As System.Nullable(Of System.TimeSpan)
	
	Private _Eventos_ESocial As EntityRef(Of Eventos_ESocial)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdESocialChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdESocialChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnIdColaboradorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdColaboradorChanged()
    End Sub
    Partial Private Sub OnEventoChanging(value As String)
    End Sub
    Partial Private Sub OnEventoChanged()
    End Sub
    Partial Private Sub OnDataSolicitacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSolicitacaoChanged()
    End Sub
    Partial Private Sub OnHoraSolicitacaoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraSolicitacaoChanged()
    End Sub
    Partial Private Sub OnDataRespostaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataRespostaChanged()
    End Sub
    Partial Private Sub OnHoraRespostaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraRespostaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Eventos_ESocial = CType(Nothing, EntityRef(Of Eventos_ESocial))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdESocial", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdESocial() As Integer
		Get
			Return Me._IdESocial
		End Get
		Set
			If ((Me._IdESocial = value)  _
						= false) Then
				Me.OnIdESocialChanging(value)
				Me.SendPropertyChanging
				Me._IdESocial = value
				Me.SendPropertyChanged("IdESocial")
				Me.OnIdESocialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdColaborador", DbType:="Int")>  _
	Public Property IdColaborador() As System.Nullable(Of Integer)
		Get
			Return Me._IdColaborador
		End Get
		Set
			If (Me._IdColaborador.Equals(value) = false) Then
				Me.OnIdColaboradorChanging(value)
				Me.SendPropertyChanging
				Me._IdColaborador = value
				Me.SendPropertyChanged("IdColaborador")
				Me.OnIdColaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Evento", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Evento() As String
		Get
			Return Me._Evento
		End Get
		Set
			If (String.Equals(Me._Evento, value) = false) Then
				If Me._Eventos_ESocial.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnEventoChanging(value)
				Me.SendPropertyChanging
				Me._Evento = value
				Me.SendPropertyChanged("Evento")
				Me.OnEventoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSolicitacao", DbType:="Date")>  _
	Public Property DataSolicitacao() As System.Nullable(Of Date)
		Get
			Return Me._DataSolicitacao
		End Get
		Set
			If (Me._DataSolicitacao.Equals(value) = false) Then
				Me.OnDataSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._DataSolicitacao = value
				Me.SendPropertyChanged("DataSolicitacao")
				Me.OnDataSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraSolicitacao", DbType:="Time")>  _
	Public Property HoraSolicitacao() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraSolicitacao
		End Get
		Set
			If (Me._HoraSolicitacao.Equals(value) = false) Then
				Me.OnHoraSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._HoraSolicitacao = value
				Me.SendPropertyChanged("HoraSolicitacao")
				Me.OnHoraSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataResposta", DbType:="Date")>  _
	Public Property DataResposta() As System.Nullable(Of Date)
		Get
			Return Me._DataResposta
		End Get
		Set
			If (Me._DataResposta.Equals(value) = false) Then
				Me.OnDataRespostaChanging(value)
				Me.SendPropertyChanging
				Me._DataResposta = value
				Me.SendPropertyChanged("DataResposta")
				Me.OnDataRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraResposta", DbType:="Time")>  _
	Public Property HoraResposta() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraResposta
		End Get
		Set
			If (Me._HoraResposta.Equals(value) = false) Then
				Me.OnHoraRespostaChanging(value)
				Me.SendPropertyChanging
				Me._HoraResposta = value
				Me.SendPropertyChanged("HoraResposta")
				Me.OnHoraRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Eventos_ESocial_ESocial", Storage:="_Eventos_ESocial", ThisKey:="Evento", OtherKey:="Descricao", IsForeignKey:=true)>  _
	Public Property Eventos_ESocial() As Eventos_ESocial
		Get
			Return Me._Eventos_ESocial.Entity
		End Get
		Set
			Dim previousValue As Eventos_ESocial = Me._Eventos_ESocial.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Eventos_ESocial.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Eventos_ESocial.Entity = Nothing
					previousValue.ESocial.Remove(Me)
				End If
				Me._Eventos_ESocial.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ESocial.Add(Me)
					Me._Evento = value.Descricao
				Else
					Me._Evento = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Eventos_ESocial")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Eventos_ESocial")>  _
Partial Public Class Eventos_ESocial
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEvento As Integer
	
	Private _Descricao As String
	
	Private _GrupoPerfil As String
	
	Private _NomePerfil As String
	
	Private _Numero As System.Nullable(Of Integer)
	
	Private _Ativo As System.Nullable(Of Boolean)
	
	Private _Subs As System.Nullable(Of Integer)
	
	Private _ESocial As EntitySet(Of ESocial)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEventoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEventoChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnGrupoPerfilChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoPerfilChanged()
    End Sub
    Partial Private Sub OnNomePerfilChanging(value As String)
    End Sub
    Partial Private Sub OnNomePerfilChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnAtivoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnAtivoChanged()
    End Sub
    Partial Private Sub OnSubsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSubsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ESocial = New EntitySet(Of ESocial)(AddressOf Me.attach_ESocial, AddressOf Me.detach_ESocial)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEvento", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEvento() As Integer
		Get
			Return Me._IdEvento
		End Get
		Set
			If ((Me._IdEvento = value)  _
						= false) Then
				Me.OnIdEventoChanging(value)
				Me.SendPropertyChanging
				Me._IdEvento = value
				Me.SendPropertyChanged("IdEvento")
				Me.OnIdEventoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrupoPerfil", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property GrupoPerfil() As String
		Get
			Return Me._GrupoPerfil
		End Get
		Set
			If (String.Equals(Me._GrupoPerfil, value) = false) Then
				Me.OnGrupoPerfilChanging(value)
				Me.SendPropertyChanging
				Me._GrupoPerfil = value
				Me.SendPropertyChanged("GrupoPerfil")
				Me.OnGrupoPerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomePerfil", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomePerfil() As String
		Get
			Return Me._NomePerfil
		End Get
		Set
			If (String.Equals(Me._NomePerfil, value) = false) Then
				Me.OnNomePerfilChanging(value)
				Me.SendPropertyChanging
				Me._NomePerfil = value
				Me.SendPropertyChanged("NomePerfil")
				Me.OnNomePerfilChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Int")>  _
	Public Property Numero() As System.Nullable(Of Integer)
		Get
			Return Me._Numero
		End Get
		Set
			If (Me._Numero.Equals(value) = false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ativo", DbType:="Bit")>  _
	Public Property Ativo() As System.Nullable(Of Boolean)
		Get
			Return Me._Ativo
		End Get
		Set
			If (Me._Ativo.Equals(value) = false) Then
				Me.OnAtivoChanging(value)
				Me.SendPropertyChanging
				Me._Ativo = value
				Me.SendPropertyChanged("Ativo")
				Me.OnAtivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subs", DbType:="Int")>  _
	Public Property Subs() As System.Nullable(Of Integer)
		Get
			Return Me._Subs
		End Get
		Set
			If (Me._Subs.Equals(value) = false) Then
				Me.OnSubsChanging(value)
				Me.SendPropertyChanging
				Me._Subs = value
				Me.SendPropertyChanged("Subs")
				Me.OnSubsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Eventos_ESocial_ESocial", Storage:="_ESocial", ThisKey:="Descricao", OtherKey:="Evento")>  _
	Public Property ESocial() As EntitySet(Of ESocial)
		Get
			Return Me._ESocial
		End Get
		Set
			Me._ESocial.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ESocial(ByVal entity As ESocial)
		Me.SendPropertyChanging
		entity.Eventos_ESocial = Me
	End Sub
	
	Private Sub detach_ESocial(ByVal entity As ESocial)
		Me.SendPropertyChanging
		entity.Eventos_ESocial = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CategoriasTrabalhadores")>  _
Partial Public Class CategoriasTrabalhadores
	
	Private _Codigo As Integer
	
	Private _Grupo As String
	
	Private _Descricao As String
	
	Private _Status As System.Nullable(Of Boolean)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="Int NOT NULL")>  _
	Public Property Codigo() As Integer
		Get
			Return Me._Codigo
		End Get
		Set
			If ((Me._Codigo = value)  _
						= false) Then
				Me._Codigo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Grupo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Grupo() As String
		Get
			Return Me._Grupo
		End Get
		Set
			If (String.Equals(Me._Grupo, value) = false) Then
				Me._Grupo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me._Descricao = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me._Status = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ColaboradoresCliente")>  _
Partial Public Class ColaboradoresCliente
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdColaboradorCliente As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _NomeColaborador As String
	
	Private _NomeFantasia As String
	
	Private _Personalidade As System.Nullable(Of Boolean)
	
	Private _DocColaborador As String
	
	Private _RG_IE As String
	
	Private _CEP As String
	
	Private _Num As System.Nullable(Of Integer)
	
	Private _Cmpl As String
	
	Private _Telefone As String
	
	Private _Celular As String
	
	Private _Email As String
	
	Private _IdFuncao As System.Nullable(Of Integer)
	
	Private _DescricaoFuncao As String
	
	Private _Remuneracao As System.Nullable(Of Decimal)
	
	Private _DataAdmissao As System.Nullable(Of Date)
	
	Private _DataDesligamento As System.Nullable(Of Date)
	
	Private _GrupoTrab As String
	
	Private _CatTrab As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdColaboradorClienteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdColaboradorClienteChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnNomeColaboradorChanging(value As String)
    End Sub
    Partial Private Sub OnNomeColaboradorChanged()
    End Sub
    Partial Private Sub OnNomeFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnNomeFantasiaChanged()
    End Sub
    Partial Private Sub OnPersonalidadeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPersonalidadeChanged()
    End Sub
    Partial Private Sub OnDocColaboradorChanging(value As String)
    End Sub
    Partial Private Sub OnDocColaboradorChanged()
    End Sub
    Partial Private Sub OnRG_IEChanging(value As String)
    End Sub
    Partial Private Sub OnRG_IEChanged()
    End Sub
    Partial Private Sub OnCEPChanging(value As String)
    End Sub
    Partial Private Sub OnCEPChanged()
    End Sub
    Partial Private Sub OnNumChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumChanged()
    End Sub
    Partial Private Sub OnCmplChanging(value As String)
    End Sub
    Partial Private Sub OnCmplChanged()
    End Sub
    Partial Private Sub OnTelefoneChanging(value As String)
    End Sub
    Partial Private Sub OnTelefoneChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnIdFuncaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFuncaoChanged()
    End Sub
    Partial Private Sub OnDescricaoFuncaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoFuncaoChanged()
    End Sub
    Partial Private Sub OnRemuneracaoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnRemuneracaoChanged()
    End Sub
    Partial Private Sub OnDataAdmissaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataAdmissaoChanged()
    End Sub
    Partial Private Sub OnDataDesligamentoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataDesligamentoChanged()
    End Sub
    Partial Private Sub OnGrupoTrabChanging(value As String)
    End Sub
    Partial Private Sub OnGrupoTrabChanged()
    End Sub
    Partial Private Sub OnCatTrabChanging(value As String)
    End Sub
    Partial Private Sub OnCatTrabChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdColaboradorCliente", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdColaboradorCliente() As Integer
		Get
			Return Me._IdColaboradorCliente
		End Get
		Set
			If ((Me._IdColaboradorCliente = value)  _
						= false) Then
				Me.OnIdColaboradorClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdColaboradorCliente = value
				Me.SendPropertyChanged("IdColaboradorCliente")
				Me.OnIdColaboradorClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeColaborador", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeColaborador() As String
		Get
			Return Me._NomeColaborador
		End Get
		Set
			If (String.Equals(Me._NomeColaborador, value) = false) Then
				Me.OnNomeColaboradorChanging(value)
				Me.SendPropertyChanging
				Me._NomeColaborador = value
				Me.SendPropertyChanged("NomeColaborador")
				Me.OnNomeColaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeFantasia", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeFantasia() As String
		Get
			Return Me._NomeFantasia
		End Get
		Set
			If (String.Equals(Me._NomeFantasia, value) = false) Then
				Me.OnNomeFantasiaChanging(value)
				Me.SendPropertyChanging
				Me._NomeFantasia = value
				Me.SendPropertyChanged("NomeFantasia")
				Me.OnNomeFantasiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Personalidade", DbType:="Bit")>  _
	Public Property Personalidade() As System.Nullable(Of Boolean)
		Get
			Return Me._Personalidade
		End Get
		Set
			If (Me._Personalidade.Equals(value) = false) Then
				Me.OnPersonalidadeChanging(value)
				Me.SendPropertyChanging
				Me._Personalidade = value
				Me.SendPropertyChanged("Personalidade")
				Me.OnPersonalidadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DocColaborador", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DocColaborador() As String
		Get
			Return Me._DocColaborador
		End Get
		Set
			If (String.Equals(Me._DocColaborador, value) = false) Then
				Me.OnDocColaboradorChanging(value)
				Me.SendPropertyChanging
				Me._DocColaborador = value
				Me.SendPropertyChanged("DocColaborador")
				Me.OnDocColaboradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RG_IE", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RG_IE() As String
		Get
			Return Me._RG_IE
		End Get
		Set
			If (String.Equals(Me._RG_IE, value) = false) Then
				Me.OnRG_IEChanging(value)
				Me.SendPropertyChanging
				Me._RG_IE = value
				Me.SendPropertyChanged("RG_IE")
				Me.OnRG_IEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CEP", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CEP() As String
		Get
			Return Me._CEP
		End Get
		Set
			If (String.Equals(Me._CEP, value) = false) Then
				Me.OnCEPChanging(value)
				Me.SendPropertyChanging
				Me._CEP = value
				Me.SendPropertyChanged("CEP")
				Me.OnCEPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Num", DbType:="Int")>  _
	Public Property Num() As System.Nullable(Of Integer)
		Get
			Return Me._Num
		End Get
		Set
			If (Me._Num.Equals(value) = false) Then
				Me.OnNumChanging(value)
				Me.SendPropertyChanging
				Me._Num = value
				Me.SendPropertyChanged("Num")
				Me.OnNumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cmpl", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cmpl() As String
		Get
			Return Me._Cmpl
		End Get
		Set
			If (String.Equals(Me._Cmpl, value) = false) Then
				Me.OnCmplChanging(value)
				Me.SendPropertyChanging
				Me._Cmpl = value
				Me.SendPropertyChanged("Cmpl")
				Me.OnCmplChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefone", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Telefone() As String
		Get
			Return Me._Telefone
		End Get
		Set
			If (String.Equals(Me._Telefone, value) = false) Then
				Me.OnTelefoneChanging(value)
				Me.SendPropertyChanging
				Me._Telefone = value
				Me.SendPropertyChanged("Telefone")
				Me.OnTelefoneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Celular", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Celular() As String
		Get
			Return Me._Celular
		End Get
		Set
			If (String.Equals(Me._Celular, value) = false) Then
				Me.OnCelularChanging(value)
				Me.SendPropertyChanging
				Me._Celular = value
				Me.SendPropertyChanged("Celular")
				Me.OnCelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFuncao", DbType:="Int")>  _
	Public Property IdFuncao() As System.Nullable(Of Integer)
		Get
			Return Me._IdFuncao
		End Get
		Set
			If (Me._IdFuncao.Equals(value) = false) Then
				Me.OnIdFuncaoChanging(value)
				Me.SendPropertyChanging
				Me._IdFuncao = value
				Me.SendPropertyChanged("IdFuncao")
				Me.OnIdFuncaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescricaoFuncao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DescricaoFuncao() As String
		Get
			Return Me._DescricaoFuncao
		End Get
		Set
			If (String.Equals(Me._DescricaoFuncao, value) = false) Then
				Me.OnDescricaoFuncaoChanging(value)
				Me.SendPropertyChanging
				Me._DescricaoFuncao = value
				Me.SendPropertyChanged("DescricaoFuncao")
				Me.OnDescricaoFuncaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Remuneracao", DbType:="Money")>  _
	Public Property Remuneracao() As System.Nullable(Of Decimal)
		Get
			Return Me._Remuneracao
		End Get
		Set
			If (Me._Remuneracao.Equals(value) = false) Then
				Me.OnRemuneracaoChanging(value)
				Me.SendPropertyChanging
				Me._Remuneracao = value
				Me.SendPropertyChanged("Remuneracao")
				Me.OnRemuneracaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataAdmissao", DbType:="Date")>  _
	Public Property DataAdmissao() As System.Nullable(Of Date)
		Get
			Return Me._DataAdmissao
		End Get
		Set
			If (Me._DataAdmissao.Equals(value) = false) Then
				Me.OnDataAdmissaoChanging(value)
				Me.SendPropertyChanging
				Me._DataAdmissao = value
				Me.SendPropertyChanged("DataAdmissao")
				Me.OnDataAdmissaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataDesligamento", DbType:="Date")>  _
	Public Property DataDesligamento() As System.Nullable(Of Date)
		Get
			Return Me._DataDesligamento
		End Get
		Set
			If (Me._DataDesligamento.Equals(value) = false) Then
				Me.OnDataDesligamentoChanging(value)
				Me.SendPropertyChanging
				Me._DataDesligamento = value
				Me.SendPropertyChanged("DataDesligamento")
				Me.OnDataDesligamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GrupoTrab", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property GrupoTrab() As String
		Get
			Return Me._GrupoTrab
		End Get
		Set
			If (String.Equals(Me._GrupoTrab, value) = false) Then
				Me.OnGrupoTrabChanging(value)
				Me.SendPropertyChanging
				Me._GrupoTrab = value
				Me.SendPropertyChanged("GrupoTrab")
				Me.OnGrupoTrabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CatTrab", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CatTrab() As String
		Get
			Return Me._CatTrab
		End Get
		Set
			If (String.Equals(Me._CatTrab, value) = false) Then
				Me.OnCatTrabChanging(value)
				Me.SendPropertyChanging
				Me._CatTrab = value
				Me.SendPropertyChanged("CatTrab")
				Me.OnCatTrabChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
