<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>155, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAACm
        BwAAAk1TRnQBSQFMAwEBAAEQAQABEAEAARQBAAEoAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABUAMA
        ASgDAAEBAQABIAYAATL/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wCiAAMIAQsDMgHUAyUB4gMtAdkDGAEi
        Aw4BEwNCAYIDMwHRAykB3gMlAeIDJQHiAycB3wMrAUP/AA0AAxMBGgEOASoBSAH2ARMBQAF7AfQBEgEy
        AVMB8wMmAeEDFQHyAVIBWgFdAe0BmAGkAbAB7gGnAbYBwQH0AaUBswHAAfIBpQGyAb0B8QGcAakBswHu
        AUYCRwGo/wANAAMWAR4BBAErAVEB/AEBAUgBmAH/AQoBNQFlAfkBegGFAYwB8AG4AccB1AHzAdgB7QL/
        AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AUoBSwFMAbD/AA0AAxYBHwEEASsBUQH8AQEBSAGY
        Af8BCgE2AWUB+QGeAbABvAH8AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AY0BmQGj
        AfADQgGv/wANAAMWAR8BBAErAVEB/AEBAUgBmAH/AQoBNgFlAfkBngGwAb0B/AHYAe0C/wHYAe0C/wHY
        Ae0C/wHYAe0C/wHYAe0C/wHYAe0C/wG9Ac4B2wH7AVcBXQFgAfADIAEv/wAJAAMWAR8BBAErAVEB/AEB
        AUgBmAH/AQoBNQFlAfkBngGwAb0B/AHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHY
        Ae0C/wGQAZ4BpwH0Ay8BSv8ACQADFgEfAQQBKwFRAfwBAQFIAZgB/wEKATUBZQH5AZ4BsAG8AfwB2AHt
        Av8B2AHtAv8B2AHtAv8B2AHtAv8B2AHtAv8B2AHtAv8B2AHtAv8BTwFXAVkB8gMkATb/AAkAAxYBHwEE
        ASsBUQH8AQEBSAGYAf8BCgE2AWUB+QGeAbABvAH8AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/AdgB7QL/
        AdgB7QL/AdgB7QL/AY4BmgGkAe0DRgGl/wAJAAMWAR8BBAErAVEB/AEBAUgBmAH/AQoBNgFlAfkBngGw
        AbwB/AHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wFQAVEBUwHH
        /wAJAAMWAR8BBAErAVEB/AEBAUgBmAH/AQoBNQFlAfkBngGwAb0B/AHYAe0C/wHYAe0C/wHYAe0C/wHY
        Ae0C/wHYAe0C/wHYAe0C/wHYAe0C/wG7AckB2gH3Ay8B2wFDAkQBkQNDAYoDQAF7AwQBBfgAAxUBHQEE
        ASsBUQH8AQEBSAGYAf8BCgE1AWUB+QFTAV0BYgH2AYcBkwGaAfMB2AHtAv8B2AHtAv8B2AHtAv8B2AHt
        Av8B2AHtAv8B2AHtAv8BwAHVAeMB+QFuAXQBgQH1AW4BdAGBAfUBbgF0AYEB9QFTAVcBXQHuAzYBW/gA
        AxIBGAEEARcBLQH9AQQBKAFMAf0BBgEdATIB+wNEAasCPAE+AckBxQHYAecB+QHYAe0C/wHYAe0C/wHY
        Ae0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wHYAe0C/wG6AcoB1wH0A0IBgfgAAwMBBANC
        AYADQwGMA0MBhQMLAQ8DLQFHAXQBgAGHAfEB2AHtAv8B2AHtAv8BkAGcAacB7QFvAXYBfwHvAWwBeQF/
        AfIBbQF5AX8B8gFsAXkBfwHyAW0BeQF/AfIBbAF5AX8B8gFUAVoBYAHuAzcBXf8AEAABAQFAAkEBwgGz
        AcQB0wH2AdgB7QL/AaABsAG6AfUDIwHkA0QBlwNEAZcDRAGXA0MBkgNEAY4DQgGAAwQBBv8AEQADIgEy
        ATgBPAE+AesBwwHXAeQB+QHYAe0C/wFKAVEBVAHuAxsBJv8ALQADNwFeAToCPwHwAcQB2AHmAfkBrAG8
        AckB9gNDAaf/ADEAAzsBaQFCAUkBSgHvAdAB4gH0AfwBVwFcAWIB7wMcASj/ADEAA0MBgwF0AYABhwHv
        AaABrQG4AfQDNwFe/wAxAAMDAQQDPwHMAWEBZgFuAe8DLgFI/wA1AAMqAUADRAGhAwMBBP8A/wD/AP8A
        /wD/AP8A/wD/AP8A/wD/AP8AlQABQgFNAT4HAAE+AwABKAMAAVADAAEoAwABAQEAAQEFAAHgAQEWAAP/
        AQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHwCQAC/wHw
        CQABgAEDAfAJAAGAAQMB8AkAAYABAwHwCQABgAEDAfAJAAGAAQEB8AkAAYABAQHwCQABgAEBAfAJAAGA
        AQEB8AkAAYABAQHwCQABgAEAARAJAAGAAQABEAkAAYABAAEQCQABgAEAARAJAAH8AQABEAkAAf4BBwHw
        CQAB/wEHAfAJAAH/AYMB8AkAAf8BwwHwCQAB/wHDAfAJAAH/AeMB8AkAAv8B8AkAAv8B8AkAAv8B8AkA
        Av8B8AkAAv8B8AkAAv8B8AkAAv8B8AkAAv8B8AkAAv8B8AkAAv8B8AkACw==
</value>
  </data>
</root>