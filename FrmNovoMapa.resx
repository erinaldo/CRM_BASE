<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD6
        DAAAAk1TRnQBSQFMAgEBAwEAAUABAAFAAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAxoBJQGTAZEBiwH2AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGw
        Af8BxQG+AbAB/wNQAZ0QAAMcASgBcgFmAUwB/wFyAWYBTAH/AXIBZgFMAf8BcgFmAUwB/wFyAWYBTAH/
        AXIBZgFMAf8BcgFmAUwB/wJTAVIBqAH0AakBAAH/AXoBagFMAeQkAAMiATIDTgGZAVkBawFaAdsBMgGz
        AUAB+wEyAbMBQAH7AVkBawFaAdsDTgGZAyIBMlwAA18B0wGnAZ0BlwH7AxkBIxQAA1ABmwHFAb4BsAH/
        AxoBJAgAAWsBYAFTAfMDEQEXGAADIwE0AfQBqQEAAf8DLwFJAlIBUQGnAwUBBxQAAwcBCgFPAVEBTwGc
        ATkBxAFCAf4BMgHVATwB/wEyAdUBPAH/ATIB1QE8Af8BMgHVATwB/wEyAdUBPAH/ATIB1QE8Af8BOQHE
        AUIB/gFPAVEBTwGcAwcBClAAAXkBdwFyAeoDVQG1IAADCQEMAcUBvgGwAf8DGgEkBAABcgFmAUwB/yAA
        AWABXQFZAcoIAAJSAVEBpwMFAQcMAAMHAQoBWQFdAVkBwwE0AdYBPQH/ATQB1gE9Af8BNAHWAT0B/wFM
        AdcBVAH/AagB5AGsAf8BpgHjAakB/wFDAdYBSwH/ATQB1gE9Af8BNAHWAT0B/wE0AdYBPQH/AVkBXQFZ
        AcMDBwEKSAADSgGMAWQBYwFiAdYoAAMJAQwBxQG+AbAB/wQAAXIBZgFMAf8gAAMFAQcCUgFRAacIAAJS
        AVEBpwMFAQcIAAFPAVEBTwGcATYB1wE/Af8BNgHXAT8B/wE2AdcBPwH/ATYB1wE/Af8BmQHpAZ4J/wGF
        AeUBiwH/ATYB1wE/Af8BNgHXAT8B/wE2AdcBPwH/ATYB1wE/Af8BTwFRAU8BnEgAAcUBvgGwAf8IAAI/
        AUABbwEtATEB5QH/AzUBVwwAAjIBxAH7AS0BMQHlAf8IAANQAZsDUAGdAXIBZgFMAf8kAAMFAQcCUgFR
        AacIAAFXAlYBtgMFAQcDIwEzAT4ByAFHAf4BNwHYAUEB/wE3AdgBQQH/ATcB2AFBAf8BNwHYAUEB/wGc
        AesBoQn/AYgB5wGOAf8BNwHYAUEB/wE3AdgBQQH/ATcB2AFBAf8BNwHYAUEB/wE+AcgBRwH+AyMBM0AA
        AzYBWQJaAVkBvggAAysBQgEtATEB5QH/AS0BMQHlAf8DNQFXBAACMgHEAfsBLQExAeUB/wIyAcQB+wwA
        AcUBvgGwAf8BcgFmAUwB/ygAAwUBBwJSAVEBpwMkATYB9AGpAQAB/wH0AakBAAH/A04BmQE5AdgBQgH/
        ATkB2AFCAf8BOQHYAUIB/wE5AdgBQgH/ATkB2AFCAf8BnQHrAaEJ/wGJAecBjwH/ATkB2AFCAf8BOQHY
        AUIB/wE5AdgBQgH/ATkB2AFCAf8BOQHYAUIB/wNOAZlAAAFeAl0BywMoATwMAAM1AVcBLQExAeUB/wEt
        ATEB5QH/AjIBxAH7AS0BMQHlAf8CMgHEAfsQAAHFAb4BsAH/AXIBZgFMAf8IAAHFAb4BsAH/AcUBvgGw
        Af8BxQG+AbAB/wHFAb4BsAH/FAADBQEHAfQBqQEAAf8B9AGpAQAB/wH0AakBAAH/AVoBcAFaAdsBOgHZ
        AUQB/wFQAdkBWAH/AZAB4AGVAf8BkQHgAZYB/wGRAeABlgH/AcYB7wHJCf8BuwHsAb4B/wGRAeABlgH/
        AZEB4AGWAf8BjwHfAZQB/wFJAdgBUgH/AToB2QFEAf8BWgFwAVoB20AAAacBnQGXAfsDAgEDEAADNQFX
        AS0BMQHlAf8BLQExAeUB/wIyAcQB+xQAAcUBvgGwAf8BcgFmAUwB/zAAAwUBBwG+AZMBIQH4AxABFQFD
        Ab8BTAH7ATwB2gFGAf8BtgHvAbop/wGiAesBpwH/ATwB2gFGAf8BQwG/AUwB+0AAAX8BfQF5AesDEQEX
        EAACMgHEAfsBLQExAeUB/wEtATEB5QH/AS0BMQHlAf8DNQFXEAABxQG+AbAB/wFyAWYBTAH/CAABxQG+
        AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/
        CAACbQFSAfcIAAFEAcEBTgH7AT4B2wFHAf8BtwHxAbop/wGjAe0BqAH/AT4B2wFHAf8BRAHBAU4B+0AA
        A1ABmwNBAXIMAAIyAcQB+wEtATEB5QH/AjIBxAH7AzUBVwEtATEB5QH/AS0BMQHlAf8DNQFXDAABxQG+
        AbAB/wFyAWYBTAH/MAABcgFmAUwB/wgAAVoBcAFaAdsBPwHbAUkB/wFTAd8BWwH/AZEB6gGWAf8BkQHq
        AZcB/wGRAeoBlwH/AccB9AHKCf8BuwHyAb8B/wGRAeoBlwH/AZEB6gGXAf8BjwHpAZUB/wFMAd4BVQH/
        AT8B2wFJAf8BWgFwAVoB20AAAwoBDgG4AbUBqAH9CAADUAGeAS0BMQHlAf8CMgHEAfsIAAM1AVcBLQEx
        AeUB/wEtATEB5QH/CAADGQEjAZMBkQGLAfYBcgFmAUwB/wgAAcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/
        AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wgAAXIBZgFMAf8IAANOAZkBQQHc
        AUsB/wFBAdwBSwH/AUEB3AFLAf8BQQHcAUsB/wFBAdwBSwH/AaEB7QGmCf8BjgHpAZQB/wFBAdwBSwH/
        AUEB3AFLAf8BQQHcAUsB/wFBAdwBSwH/AUEB3AFLAf8DTgGZRAABpQGiAZwB+gMjATMEAAMBAQIDUAGe
        EAADKwFCAj8BQAFvCAABsgGtAZoB/AMaASUBcgFmAUwB/zAAAXIBZgFMAf8IAAMjATMBSQHPAVMB/gFC
        Ad0BTAH/AUIB3QFMAf8BQgHdAUwB/wFCAd0BTAH/AaEB7QGmCf8BjwHqAZUB/wFCAd0BTAH/AUIB3QFM
        Af8BQgHdAUwB/wFCAd0BTAH/AUkBzwFTAf4DIwEzRAADBwEJAcUBvgGwAf8DBAEFJAADVgG2A18B0wQA
        AXIBZgFMAf8IAAHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHF
        Ab4BsAH/AcUBvgGwAf8IAAFyAWYBTAH/DAABTwJRAZwBRAHeAU4B/wFEAd4BTgH/AUQB3gFOAf8BRAHe
        AU4B/wGhAe0Bpgn/AY4B6gGUAf8BRAHeAU4B/wFEAd4BTgH/AUQB3gFOAf8BRAHeAU4B/wFPAlEBnEwA
        AyEBMAHFAb4BsAH/AyMBMxwAAWQBYwFiAdYBeQF3AXIB6ggAAXIBZgFMAf8wAAFyAWYBTAH/DAADBwEK
        AVkBXQFZAcMBRgHeAU8B/wFGAd4BTwH/AUYB3gFPAf8BWQHiAWIB/wGtAfABsgH/AasB8AGvAf8BUgHh
        AVsB/wFGAd4BTwH/AUYB3gFPAf8BRgHeAU8B/wFZAV0BWQHDAwcBClAAAwcBCQGlAaIBnAH6AbgBtQGo
        Af0DQQFyAxABFQMCAQMDJwE6AloBWQG+AcUBvgGwAf8DSgGMDAACVQFUAbADVAGvKAADEQEXAXIBZgFM
        Af8QAAMHAQoBTwJRAZwBTgHRAVgB/gFHAd8BUQH/AUcB3wFRAf8BRwHfAVEB/wFHAd8BUQH/AUcB3wFR
        Af8BRwHfAVEB/wFOAdEBWAH+AU8CUQGcAwcBClwAAwoBDgNQAZsBfwF9AXkB6wGnAZ0BlwH7AV4CXQHI
        AzYBWRgAAlUBVAGwAXIBZgFMAf8BcgFmAUwB/wFyAWYBTAH/AXIBZgFMAf8BcgFmAUwB/wFyAWYBTAH/
        AXIBZgFMAf8BcgFmAUwB/wFyAWYBTAH/AXIBZgFMAf8BawFiAVMB8wMcASgYAAMjATMDTgGZAVoBcAFa
        AdsBTwHFAVkB+wFPAcUBWQH7AVoBcAFaAdsDTgGZAyMBM1AAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAHwAQ8BAAEfAfABDwIAAuMBPwEHAcABAwIAAc8B8QF/AbMBgAEBAgABnwH5
        AX8BmQGAAQECAAGxAcwBfwHMBAABMAGOAX8B4AQAATgBHgFhAfAEAAE8AT4BfwH4BAABPAEeAWABGwQA
        ATgBDgF/AfsEAAExAYwBYAEbBAABkwHMAX8B+wQAAY8B+QFgARsBgAEBAgABxwHzAX8B+wGAAQECAAHg
        AQcBPwHzAcABAwIAAfgBHwGAAQMB8AEPAgAL
</value>
  </data>
</root>