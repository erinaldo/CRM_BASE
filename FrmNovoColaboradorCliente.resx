<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ImageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="ImageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        DAAAAk1TRnQBSQFMAgEBAwEAAeABAAHgAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABECIAAxoBJQNiAfYBxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHF
        Ab4BsAH/A1ABnRAAAxwBKAFeAVIBOAH/AV4BUgE4Af8BXgFSATgB/wFeAVIBOAH/AV4BUgE4Af8BXgFS
        ATgB/wFeAVIBOAH/AlMBUgGoAfQBqQEAAf8CYQFaAeQkAAMiATIDTgGZAVoBXwFaAdsBMgGMAUAB+wEy
        AYwBQAH7AVoBXwFaAdsDTgGZAyIBMlwAA10B0wGJAYYBgwH7AxkBIxQAA1ABmwHFAb4BsAH/AxoBJAgA
        Al8BUwHzAxEBFxgAAyMBNAH0AakBAAH/Ay8BSQJSAVEBpwMFAQcUAAMHAQoBTwFRAU8BnAE5AZwBQgH+
        AR4B1QEoAf8BHgHVASgB/wEeAdUBKAH/AR4B1QEoAf8BHgHVASgB/wEeAdUBKAH/ATkBnAFCAf4BTwFR
        AU8BnAMHAQpQAANcAeoDVQG1IAADCQEMAcUBvgGwAf8DGgEkBAABXgFSATgB/yAAAl0BWgHKCAACUgFR
        AacDBQEHDAADBwEKAVkBWwFZAcMBIAHWASkB/wEgAdYBKQH/ASAB1gEpAf8BOAHXAUAB/wGoAeQBrAH/
        AaYB4wGpAf8BLwHWATcB/wEgAdYBKQH/ASAB1gEpAf8BIAHWASkB/wFZAVsBWQHDAwcBCkgAA0oBjANg
        AdYoAAMJAQwBxQG+AbAB/wQAAV4BUgE4Af8gAAMFAQcCUgFRAacIAAJSAVEBpwMFAQcIAAFPAVEBTwGc
        ASIB1wErAf8BIgHXASsB/wEiAdcBKwH/ASIB1wErAf8BmQHpAZ4J/wGFAeUBiwH/ASIB1wErAf8BIgHX
        ASsB/wEiAdcBKwH/ASIB1wErAf8BTwFRAU8BnEgAAcUBvgGwAf8IAAI/AUABbwEZAR0B5QH/AzUBVwwA
        AjIBkAH7ARkBHQHlAf8IAANQAZsDUAGdAV4BUgE4Af8kAAMFAQcCUgFRAacIAANWAbYDBQEHAyMBMwE+
        AaABRwH+ASMB2AEtAf8BIwHYAS0B/wEjAdgBLQH/ASMB2AEtAf8BnAHrAaEJ/wGIAecBjgH/ASMB2AEt
        Af8BIwHYAS0B/wEjAdgBLQH/ASMB2AEtAf8BPgGgAUcB/gMjATNAAAM2BFkBvggAAysBQgEZAR0B5QH/
        ARkBHQHlAf8DNQFXBAACMgGQAfsBGQEdAeUB/wIyAZAB+wwAAcUBvgGwAf8BXgFSATgB/ygAAwUBBwJS
        AVEBpwMkATYB9AGpAQAB/wH0AakBAAH/A04BmQElAdgBLgH/ASUB2AEuAf8BJQHYAS4B/wElAdgBLgH/
        ASUB2AEuAf8BnQHrAaEJ/wGJAecBjwH/ASUB2AEuAf8BJQHYAS4B/wElAdgBLgH/ASUB2AEuAf8BJQHY
        AS4B/wNOAZlAAANbAcsDKAE8DAADNQFXARkBHQHlAf8BGQEdAeUB/wIyAZAB+wEZAR0B5QH/AjIBkAH7
        EAABxQG+AbAB/wFeAVIBOAH/CAABxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/xQAAwUBBwH0
        AakBAAH/AfQBqQEAAf8B9AGpAQAB/wFaAV8BWgHbASYB2QEwAf8BPAHZAUQB/wGQAeABlQH/AZEB4AGW
        Af8BkQHgAZYB/wHGAe8ByQn/AbsB7AG+Af8BkQHgAZYB/wGRAeABlgH/AY8B3wGUAf8BNQHYAT4B/wEm
        AdkBMAH/AVoBXwFaAdtAAAGJAYYBgwH7AwIBAxAAAzUBVwEZAR0B5QH/ARkBHQHlAf8CMgGQAfsUAAHF
        Ab4BsAH/AV4BUgE4Af8wAAMFAQcBfgFyAT4B+AMQARUBQwGPAUwB+wEoAdoBMgH/AbYB7wG6Kf8BogHr
        AacB/wEoAdoBMgH/AUMBjwFMAftAAANgAesDEQEXEAACMgGQAfsBGQEdAeUB/wEZAR0B5QH/ARkBHQHl
        Af8DNQFXEAABxQG+AbAB/wFeAVIBOAH/CAABxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHF
        Ab4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/CAACbQFSAfcIAAFEAY8BTgH7ASoB2wEzAf8BtwHx
        Abop/wGjAe0BqAH/ASoB2wEzAf8BRAGPAU4B+0AAA1ABmwNBAXIMAAIyAZAB+wEZAR0B5QH/AjIBkAH7
        AzUBVwEZAR0B5QH/ARkBHQHlAf8DNQFXDAABxQG+AbAB/wFeAVIBOAH/MAABXgFSATgB/wgAAVoBXwFa
        AdsBKwHbATUB/wE/Ad8BRwH/AZEB6gGWAf8BkQHqAZcB/wGRAeoBlwH/AccB9AHKCf8BuwHyAb8B/wGR
        AeoBlwH/AZEB6gGXAf8BjwHpAZUB/wE4Ad4BQQH/ASsB2wE1Af8BWgFfAVoB20AAAwoBDgOoAf0IAANQ
        AZ4BGQEdAeUB/wIyAZAB+wgAAzUBVwEZAR0B5QH/ARkBHQHlAf8IAAMZASMDYgH2AV4BUgE4Af8IAAHF
        Ab4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/AcUBvgGw
        Af8IAAFeAVIBOAH/CAADTgGZAS0B3AE3Af8BLQHcATcB/wEtAdwBNwH/AS0B3AE3Af8BLQHcATcB/wGh
        Ae0Bpgn/AY4B6QGUAf8BLQHcATcB/wEtAdwBNwH/AS0B3AE3Af8BLQHcATcB/wEtAdwBNwH/A04BmUQA
        AXkBeAF1AfoDIwEzBAADAQECA1ABnhAAAysBQgI/AUABbwgAAX0BewF0AfwDGgElAV4BUgE4Af8wAAFe
        AVIBOAH/CAADIwEzAUkBpwFTAf4BLgHdATgB/wEuAd0BOAH/AS4B3QE4Af8BLgHdATgB/wGhAe0Bpgn/
        AY8B6gGVAf8BLgHdATgB/wEuAd0BOAH/AS4B3QE4Af8BLgHdATgB/wFJAacBUwH+AyMBM0QAAwcBCQHF
        Ab4BsAH/AwQBBSQAA1YBtgNdAdMEAAFeAVIBOAH/CAABxQG+AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+
        AbAB/wHFAb4BsAH/AcUBvgGwAf8BxQG+AbAB/wHFAb4BsAH/CAABXgFSATgB/wwAAU8CUQGcATAB3gE6
        Af8BMAHeAToB/wEwAd4BOgH/ATAB3gE6Af8BoQHtAaYJ/wGOAeoBlAH/ATAB3gE6Af8BMAHeAToB/wEw
        Ad4BOgH/ATAB3gE6Af8BTwJRAZxMAAMhATABxQG+AbAB/wMjATMcAANgAdYDXAHqCAABXgFSATgB/zAA
        AV4BUgE4Af8MAAMHAQoBWQFbAVkBwwEyAd4BOwH/ATIB3gE7Af8BMgHeATsB/wFFAeIBTgH/Aa0B8AGy
        Af8BqwHwAa8B/wE+AeEBRwH/ATIB3gE7Af8BMgHeATsB/wEyAd4BOwH/AVkBWwFZAcMDBwEKUAADBwEJ
        AXkBeAF1AfoDqAH9A0EBcgMQARUDAgEDAycBOgNZAb4BxQG+AbAB/wNKAYwMAAJVAVQBsANUAa8oAAMR
        ARcBXgFSATgB/xAAAwcBCgFPAlEBnAFOAakBWAH+ATMB3wE9Af8BMwHfAT0B/wEzAd8BPQH/ATMB3wE9
        Af8BMwHfAT0B/wEzAd8BPQH/AU4BqQFYAf4BTwJRAZwDBwEKXAADCgEOA1ABmwNgAesBiQGGAYMB+wNb
        AcgDNgFZGAACVQFUAbABXgFSATgB/wFeAVIBOAH/AV4BUgE4Af8BXgFSATgB/wFeAVIBOAH/AV4BUgE4
        Af8BXgFSATgB/wFeAVIBOAH/AV4BUgE4Af8BXgFSATgB/wJfAVMB8wMcASgYAAMjATMDTgGZAVoBXwFa
        AdsBTwGRAVkB+wFPAZEBWQH7AVoBXwFaAdsDTgGZAyMBM1AAAUIBTQE+BwABPgMAASgDAAFAAwABEAMA
        AQEBAAEBBQABgBcAA/8BAAHwAQ8BAAEfAfABDwIAAuMBPwEHAcABAwIAAc8B8QF/AbMBgAEBAgABnwH5
        AX8BmQGAAQECAAGxAcwBfwHMBAABMAGOAX8B4AQAATgBHgFhAfAEAAE8AT4BfwH4BAABPAEeAWABGwQA
        ATgBDgF/AfsEAAExAYwBYAEbBAABkwHMAX8B+wQAAY8B+QFgARsBgAEBAgABxwHzAX8B+wGAAQECAAHg
        AQcBPwHzAcABAwIAAfgBHwGAAQMB8AEPAgAL
</value>
  </data>
</root>