'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Oficina")>  _
Partial Public Class LqOficinaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertVeiculos(instance As Veiculos)
    End Sub
  Partial Private Sub UpdateVeiculos(instance As Veiculos)
    End Sub
  Partial Private Sub DeleteVeiculos(instance As Veiculos)
    End Sub
  Partial Private Sub InsertModelos(instance As Modelos)
    End Sub
  Partial Private Sub UpdateModelos(instance As Modelos)
    End Sub
  Partial Private Sub DeleteModelos(instance As Modelos)
    End Sub
  Partial Private Sub InsertCorModelo(instance As CorModelo)
    End Sub
  Partial Private Sub UpdateCorModelo(instance As CorModelo)
    End Sub
  Partial Private Sub DeleteCorModelo(instance As CorModelo)
    End Sub
  Partial Private Sub InsertFabricantesVeiculo(instance As FabricantesVeiculo)
    End Sub
  Partial Private Sub UpdateFabricantesVeiculo(instance As FabricantesVeiculo)
    End Sub
  Partial Private Sub DeleteFabricantesVeiculo(instance As FabricantesVeiculo)
    End Sub
  Partial Private Sub InsertCombustivelVeiculo(instance As CombustivelVeiculo)
    End Sub
  Partial Private Sub UpdateCombustivelVeiculo(instance As CombustivelVeiculo)
    End Sub
  Partial Private Sub DeleteCombustivelVeiculo(instance As CombustivelVeiculo)
    End Sub
  Partial Private Sub InsertVersaoModelos(instance As VersaoModelos)
    End Sub
  Partial Private Sub UpdateVersaoModelos(instance As VersaoModelos)
    End Sub
  Partial Private Sub DeleteVersaoModelos(instance As VersaoModelos)
    End Sub
  Partial Private Sub InsertCambio(instance As Cambio)
    End Sub
  Partial Private Sub UpdateCambio(instance As Cambio)
    End Sub
  Partial Private Sub DeleteCambio(instance As Cambio)
    End Sub
  Partial Private Sub InsertVistorias(instance As Vistorias)
    End Sub
  Partial Private Sub UpdateVistorias(instance As Vistorias)
    End Sub
  Partial Private Sub DeleteVistorias(instance As Vistorias)
    End Sub
  Partial Private Sub InsertCheklist(instance As Cheklist)
    End Sub
  Partial Private Sub UpdateCheklist(instance As Cheklist)
    End Sub
  Partial Private Sub DeleteCheklist(instance As Cheklist)
    End Sub
  Partial Private Sub InsertItemCheklist(instance As ItemCheklist)
    End Sub
  Partial Private Sub UpdateItemCheklist(instance As ItemCheklist)
    End Sub
  Partial Private Sub DeleteItemCheklist(instance As ItemCheklist)
    End Sub
  Partial Private Sub InsertProcessosChecklist(instance As ProcessosChecklist)
    End Sub
  Partial Private Sub UpdateProcessosChecklist(instance As ProcessosChecklist)
    End Sub
  Partial Private Sub DeleteProcessosChecklist(instance As ProcessosChecklist)
    End Sub
  Partial Private Sub InsertEtapasChecklist(instance As EtapasChecklist)
    End Sub
  Partial Private Sub UpdateEtapasChecklist(instance As EtapasChecklist)
    End Sub
  Partial Private Sub DeleteEtapasChecklist(instance As EtapasChecklist)
    End Sub
  Partial Private Sub InsertPerguntasChecklist(instance As PerguntasChecklist)
    End Sub
  Partial Private Sub UpdatePerguntasChecklist(instance As PerguntasChecklist)
    End Sub
  Partial Private Sub DeletePerguntasChecklist(instance As PerguntasChecklist)
    End Sub
  Partial Private Sub InsertRespostasChecklist(instance As RespostasChecklist)
    End Sub
  Partial Private Sub UpdateRespostasChecklist(instance As RespostasChecklist)
    End Sub
  Partial Private Sub DeleteRespostasChecklist(instance As RespostasChecklist)
    End Sub
  Partial Private Sub InsertRespostasCheklistUsuario(instance As RespostasCheklistUsuario)
    End Sub
  Partial Private Sub UpdateRespostasCheklistUsuario(instance As RespostasCheklistUsuario)
    End Sub
  Partial Private Sub DeleteRespostasCheklistUsuario(instance As RespostasCheklistUsuario)
    End Sub
  Partial Private Sub InsertImagemRespostaCklist(instance As ImagemRespostaCklist)
    End Sub
  Partial Private Sub UpdateImagemRespostaCklist(instance As ImagemRespostaCklist)
    End Sub
  Partial Private Sub DeleteImagemRespostaCklist(instance As ImagemRespostaCklist)
    End Sub
  Partial Private Sub InsertEntradaVeiculo(instance As EntradaVeiculo)
    End Sub
  Partial Private Sub UpdateEntradaVeiculo(instance As EntradaVeiculo)
    End Sub
  Partial Private Sub DeleteEntradaVeiculo(instance As EntradaVeiculo)
    End Sub
  Partial Private Sub InsertPrestadores_Entrega(instance As Prestadores_Entrega)
    End Sub
  Partial Private Sub UpdatePrestadores_Entrega(instance As Prestadores_Entrega)
    End Sub
  Partial Private Sub DeletePrestadores_Entrega(instance As Prestadores_Entrega)
    End Sub
  Partial Private Sub InsertMarcasImagens(instance As MarcasImagens)
    End Sub
  Partial Private Sub UpdateMarcasImagens(instance As MarcasImagens)
    End Sub
  Partial Private Sub DeleteMarcasImagens(instance As MarcasImagens)
    End Sub
  Partial Private Sub InsertSolicitacaoCadastroPeca(instance As SolicitacaoCadastroPeca)
    End Sub
  Partial Private Sub UpdateSolicitacaoCadastroPeca(instance As SolicitacaoCadastroPeca)
    End Sub
  Partial Private Sub DeleteSolicitacaoCadastroPeca(instance As SolicitacaoCadastroPeca)
    End Sub
  Partial Private Sub InsertSoluçõesVistoria(instance As SoluçõesVistoria)
    End Sub
  Partial Private Sub UpdateSoluçõesVistoria(instance As SoluçõesVistoria)
    End Sub
  Partial Private Sub DeleteSoluçõesVistoria(instance As SoluçõesVistoria)
    End Sub
  Partial Private Sub InsertItensSoluçãoN(instance As ItensSoluçãoN)
    End Sub
  Partial Private Sub UpdateItensSoluçãoN(instance As ItensSoluçãoN)
    End Sub
  Partial Private Sub DeleteItensSoluçãoN(instance As ItensSoluçãoN)
    End Sub
  Partial Private Sub InsertAssociaçãoPeçaModelo(instance As AssociaçãoPeçaModelo)
    End Sub
  Partial Private Sub UpdateAssociaçãoPeçaModelo(instance As AssociaçãoPeçaModelo)
    End Sub
  Partial Private Sub DeleteAssociaçãoPeçaModelo(instance As AssociaçãoPeçaModelo)
    End Sub
  Partial Private Sub InsertVinculoProdutoModelo(instance As VinculoProdutoModelo)
    End Sub
  Partial Private Sub UpdateVinculoProdutoModelo(instance As VinculoProdutoModelo)
    End Sub
  Partial Private Sub DeleteVinculoProdutoModelo(instance As VinculoProdutoModelo)
    End Sub
  Partial Private Sub InsertSeguradoras(instance As Seguradoras)
    End Sub
  Partial Private Sub UpdateSeguradoras(instance As Seguradoras)
    End Sub
  Partial Private Sub DeleteSeguradoras(instance As Seguradoras)
    End Sub
  Partial Private Sub InsertItemObgSeguradora(instance As ItemObgSeguradora)
    End Sub
  Partial Private Sub UpdateItemObgSeguradora(instance As ItemObgSeguradora)
    End Sub
  Partial Private Sub DeleteItemObgSeguradora(instance As ItemObgSeguradora)
    End Sub
  Partial Private Sub InsertSeguradora_Entrada(instance As Seguradora_Entrada)
    End Sub
  Partial Private Sub UpdateSeguradora_Entrada(instance As Seguradora_Entrada)
    End Sub
  Partial Private Sub DeleteSeguradora_Entrada(instance As Seguradora_Entrada)
    End Sub
  Partial Private Sub InsertReparoVeiculo(instance As ReparoVeiculo)
    End Sub
  Partial Private Sub UpdateReparoVeiculo(instance As ReparoVeiculo)
    End Sub
  Partial Private Sub DeleteReparoVeiculo(instance As ReparoVeiculo)
    End Sub
  Partial Private Sub InsertItemsCatOficina(instance As ItemsCatOficina)
    End Sub
  Partial Private Sub UpdateItemsCatOficina(instance As ItemsCatOficina)
    End Sub
  Partial Private Sub DeleteItemsCatOficina(instance As ItemsCatOficina)
    End Sub
  Partial Private Sub InsertSubItemCat(instance As SubItemCat)
    End Sub
  Partial Private Sub UpdateSubItemCat(instance As SubItemCat)
    End Sub
  Partial Private Sub DeleteSubItemCat(instance As SubItemCat)
    End Sub
  Partial Private Sub InsertAvariasFerramentas(instance As AvariasFerramentas)
    End Sub
  Partial Private Sub UpdateAvariasFerramentas(instance As AvariasFerramentas)
    End Sub
  Partial Private Sub DeleteAvariasFerramentas(instance As AvariasFerramentas)
    End Sub
  Partial Private Sub InsertVinculoAvariaSubCat(instance As VinculoAvariaSubCat)
    End Sub
  Partial Private Sub UpdateVinculoAvariaSubCat(instance As VinculoAvariaSubCat)
    End Sub
  Partial Private Sub DeleteVinculoAvariaSubCat(instance As VinculoAvariaSubCat)
    End Sub
  Partial Private Sub InsertImagemVeiculosColetado(instance As ImagemVeiculosColetado)
    End Sub
  Partial Private Sub UpdateImagemVeiculosColetado(instance As ImagemVeiculosColetado)
    End Sub
  Partial Private Sub DeleteImagemVeiculosColetado(instance As ImagemVeiculosColetado)
    End Sub
  Partial Private Sub InsertLaudosTecnicos(instance As LaudosTecnicos)
    End Sub
  Partial Private Sub UpdateLaudosTecnicos(instance As LaudosTecnicos)
    End Sub
  Partial Private Sub DeleteLaudosTecnicos(instance As LaudosTecnicos)
    End Sub
  Partial Private Sub InsertItemLaudosTecnicos(instance As ItemLaudosTecnicos)
    End Sub
  Partial Private Sub UpdateItemLaudosTecnicos(instance As ItemLaudosTecnicos)
    End Sub
  Partial Private Sub DeleteItemLaudosTecnicos(instance As ItemLaudosTecnicos)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CRM_BASE.My.MySettings.Default.OficinaConnectionString3, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Veiculos() As System.Data.Linq.Table(Of Veiculos)
		Get
			Return Me.GetTable(Of Veiculos)
		End Get
	End Property
	
	Public ReadOnly Property Modelos() As System.Data.Linq.Table(Of Modelos)
		Get
			Return Me.GetTable(Of Modelos)
		End Get
	End Property
	
	Public ReadOnly Property CorModelo() As System.Data.Linq.Table(Of CorModelo)
		Get
			Return Me.GetTable(Of CorModelo)
		End Get
	End Property
	
	Public ReadOnly Property FabricantesVeiculo() As System.Data.Linq.Table(Of FabricantesVeiculo)
		Get
			Return Me.GetTable(Of FabricantesVeiculo)
		End Get
	End Property
	
	Public ReadOnly Property CombustivelVeiculo() As System.Data.Linq.Table(Of CombustivelVeiculo)
		Get
			Return Me.GetTable(Of CombustivelVeiculo)
		End Get
	End Property
	
	Public ReadOnly Property VersaoModelos() As System.Data.Linq.Table(Of VersaoModelos)
		Get
			Return Me.GetTable(Of VersaoModelos)
		End Get
	End Property
	
	Public ReadOnly Property Cambio() As System.Data.Linq.Table(Of Cambio)
		Get
			Return Me.GetTable(Of Cambio)
		End Get
	End Property
	
	Public ReadOnly Property Vistorias() As System.Data.Linq.Table(Of Vistorias)
		Get
			Return Me.GetTable(Of Vistorias)
		End Get
	End Property
	
	Public ReadOnly Property Cheklist() As System.Data.Linq.Table(Of Cheklist)
		Get
			Return Me.GetTable(Of Cheklist)
		End Get
	End Property
	
	Public ReadOnly Property ItemCheklist() As System.Data.Linq.Table(Of ItemCheklist)
		Get
			Return Me.GetTable(Of ItemCheklist)
		End Get
	End Property
	
	Public ReadOnly Property ProcessosChecklist() As System.Data.Linq.Table(Of ProcessosChecklist)
		Get
			Return Me.GetTable(Of ProcessosChecklist)
		End Get
	End Property
	
	Public ReadOnly Property EtapasChecklist() As System.Data.Linq.Table(Of EtapasChecklist)
		Get
			Return Me.GetTable(Of EtapasChecklist)
		End Get
	End Property
	
	Public ReadOnly Property PerguntasChecklist() As System.Data.Linq.Table(Of PerguntasChecklist)
		Get
			Return Me.GetTable(Of PerguntasChecklist)
		End Get
	End Property
	
	Public ReadOnly Property RespostasChecklist() As System.Data.Linq.Table(Of RespostasChecklist)
		Get
			Return Me.GetTable(Of RespostasChecklist)
		End Get
	End Property
	
	Public ReadOnly Property RespostasCheklistUsuario() As System.Data.Linq.Table(Of RespostasCheklistUsuario)
		Get
			Return Me.GetTable(Of RespostasCheklistUsuario)
		End Get
	End Property
	
	Public ReadOnly Property ImagemRespostaCklist() As System.Data.Linq.Table(Of ImagemRespostaCklist)
		Get
			Return Me.GetTable(Of ImagemRespostaCklist)
		End Get
	End Property
	
	Public ReadOnly Property EntradaVeiculo() As System.Data.Linq.Table(Of EntradaVeiculo)
		Get
			Return Me.GetTable(Of EntradaVeiculo)
		End Get
	End Property
	
	Public ReadOnly Property Prestadores_Entrega() As System.Data.Linq.Table(Of Prestadores_Entrega)
		Get
			Return Me.GetTable(Of Prestadores_Entrega)
		End Get
	End Property
	
	Public ReadOnly Property MarcasImagens() As System.Data.Linq.Table(Of MarcasImagens)
		Get
			Return Me.GetTable(Of MarcasImagens)
		End Get
	End Property
	
	Public ReadOnly Property SolicitacaoCadastroPeca() As System.Data.Linq.Table(Of SolicitacaoCadastroPeca)
		Get
			Return Me.GetTable(Of SolicitacaoCadastroPeca)
		End Get
	End Property
	
	Public ReadOnly Property SoluçõesVistoria() As System.Data.Linq.Table(Of SoluçõesVistoria)
		Get
			Return Me.GetTable(Of SoluçõesVistoria)
		End Get
	End Property
	
	Public ReadOnly Property ItensSoluçãoN() As System.Data.Linq.Table(Of ItensSoluçãoN)
		Get
			Return Me.GetTable(Of ItensSoluçãoN)
		End Get
	End Property
	
	Public ReadOnly Property AssociaçãoPeçaModelo() As System.Data.Linq.Table(Of AssociaçãoPeçaModelo)
		Get
			Return Me.GetTable(Of AssociaçãoPeçaModelo)
		End Get
	End Property
	
	Public ReadOnly Property VinculoProdutoModelo() As System.Data.Linq.Table(Of VinculoProdutoModelo)
		Get
			Return Me.GetTable(Of VinculoProdutoModelo)
		End Get
	End Property
	
	Public ReadOnly Property Seguradoras() As System.Data.Linq.Table(Of Seguradoras)
		Get
			Return Me.GetTable(Of Seguradoras)
		End Get
	End Property
	
	Public ReadOnly Property ItemObgSeguradora() As System.Data.Linq.Table(Of ItemObgSeguradora)
		Get
			Return Me.GetTable(Of ItemObgSeguradora)
		End Get
	End Property
	
	Public ReadOnly Property Seguradora_Entrada() As System.Data.Linq.Table(Of Seguradora_Entrada)
		Get
			Return Me.GetTable(Of Seguradora_Entrada)
		End Get
	End Property
	
	Public ReadOnly Property ReparoVeiculo() As System.Data.Linq.Table(Of ReparoVeiculo)
		Get
			Return Me.GetTable(Of ReparoVeiculo)
		End Get
	End Property
	
	Public ReadOnly Property ItemsCatOficina() As System.Data.Linq.Table(Of ItemsCatOficina)
		Get
			Return Me.GetTable(Of ItemsCatOficina)
		End Get
	End Property
	
	Public ReadOnly Property SubItemCat() As System.Data.Linq.Table(Of SubItemCat)
		Get
			Return Me.GetTable(Of SubItemCat)
		End Get
	End Property
	
	Public ReadOnly Property AvariasFerramentas() As System.Data.Linq.Table(Of AvariasFerramentas)
		Get
			Return Me.GetTable(Of AvariasFerramentas)
		End Get
	End Property
	
	Public ReadOnly Property VinculoAvariaSubCat() As System.Data.Linq.Table(Of VinculoAvariaSubCat)
		Get
			Return Me.GetTable(Of VinculoAvariaSubCat)
		End Get
	End Property
	
	Public ReadOnly Property ImagemVeiculosColetado() As System.Data.Linq.Table(Of ImagemVeiculosColetado)
		Get
			Return Me.GetTable(Of ImagemVeiculosColetado)
		End Get
	End Property
	
	Public ReadOnly Property LaudosTecnicos() As System.Data.Linq.Table(Of LaudosTecnicos)
		Get
			Return Me.GetTable(Of LaudosTecnicos)
		End Get
	End Property
	
	Public ReadOnly Property ItemLaudosTecnicos() As System.Data.Linq.Table(Of ItemLaudosTecnicos)
		Get
			Return Me.GetTable(Of ItemLaudosTecnicos)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaEncerraVistoriaVeiculo")>  _
	Public Function AtualizaEncerraVistoriaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Time")> ByVal horaVistoria As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataVistoria", DbType:="Date")> ByVal dataVistoria As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Concluido", DbType:="Bit")> ByVal concluido As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso, horaVistoria, dataVistoria, concluido)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.RemoveSolucaoSemTriagem")>  _
	Public Function RemoveSolucaoSemTriagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolucao", DbType:="Int")> ByVal idSolucao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolucao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaIDEtapaProcessoPerguntaEtapahecklist")>  _
	Public Function AtualizaIDEtapaProcessoPerguntaEtapahecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPerguntaChecklist", DbType:="Int")> ByVal idPerguntaChecklist As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEtapaProcesso", DbType:="Int")> ByVal idEtapaProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idPerguntaChecklist, idEtapaProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaInicioVistoriaVeiculo")>  _
	Public Function AtualizaInicioVistoriaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Time")> ByVal horaInicio As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataInicio", DbType:="Date")> ByVal dataInicio As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Recebida", DbType:="Bit")> ByVal recebida As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso, horaInicio, dataInicio, recebida)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaItemSolucaoN")>  _
	Public Function AtualizaItemSolucaoN(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolitacao", DbType:="Int")> ByVal idSolitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodCad", DbType:="Int")> ByVal idCodCad As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolitacao, idCodCad)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaPosicaoChecklist")>  _
	Public Function AtualizaPosicaoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdChecklist", DbType:="Int")> ByVal idChecklist As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idChecklist, posicao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaRecebimentoPeloTecnicoNovaVistoriaVeiculo")>  _
	Public Function AtualizaRecebimentoPeloTecnicoNovaVistoriaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculo", DbType:="Int")> ByVal idVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdTecnico", DbType:="Int")> ByVal idTecnico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Recebida", DbType:="Bit")> ByVal recebida As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraInicioVistorria", DbType:="Time")> ByVal horaInicioVistorria As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DatainicioVistoria", DbType:="Date")> ByVal datainicioVistoria As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idVeiculo, idTecnico, recebida, horaInicioVistorria, datainicioVistoria)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSolicitacaoPeca")>  _
	Public Function AtualizaSolicitacaoPeca(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolitacao", DbType:="Int")> ByVal idSolitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodCad", DbType:="Int")> ByVal idCodCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PartNumber", DbType:="NText")> ByVal partNumber As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolitacao, idCodCad, partNumber)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaTipoRespostaPerguntaEtapahecklist")>  _
	Public Function AtualizaTipoRespostaPerguntaEtapahecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPerguntaChecklist", DbType:="Int")> ByVal idPerguntaChecklist As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoREsposta", DbType:="Int")> ByVal tipoREsposta As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idPerguntaChecklist, tipoREsposta)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaVistoriaPeloTecnico_NovaVistoriaVeiculo")>  _
	Public Function AtualizaVistoriaPeloTecnico_NovaVistoriaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculo", DbType:="Int")> ByVal idVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Concluido", DbType:="Bit")> ByVal concluido As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraVistoria", DbType:="Time")> ByVal horaVistoria As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataVistoria", DbType:="Date")> ByVal dataVistoria As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idVeiculo, concluido, horaVistoria, dataVistoria)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaRespostasCheklist")>  _
	Public Function DeletaRespostasCheklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSolucaoItemMarcaDesmonte")>  _
	Public Function DeletaSolucaoItemMarcaDesmonte(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolucao", DbType:="Int")> ByVal idSolucao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacao, idSolucao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSolucaoProdutomMarcaDesmonte")>  _
	Public Function DeletaSolucaoProdutomMarcaDesmonte(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolucao", DbType:="Int")> ByVal idSolucao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProduto, idSolucao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereAssociacaoPecaModelo")>  _
	Public Function InsereAssociacaoPecaModelo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodProd", DbType:="Int")> ByVal idCodProd As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdModeloVeic", DbType:="Int")> ByVal idModeloVeic As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCodProd, idSolicitacaoCad, idModeloVeic)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereCambioVeiculo")>  _
	Public Function InsereCambioVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cambio", DbType:="NText")> ByVal cambio As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cambio)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereCombustivelVeiculo")>  _
	Public Function InsereCombustivelVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Combustivel", DbType:="NText")> ByVal combustivel As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), combustivel)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereCorFabricante")>  _
	Public Function InsereCorFabricante(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idmodelo", DbType:="Int")> ByVal idmodelo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cor", DbType:="NText")> ByVal cor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idmodelo, cor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereEntradaVeiculo")>  _
	Public Function InsereEntradaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculo", DbType:="Int")> ByVal idVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Placa", DbType:="NText")> ByVal placa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataEntrada", DbType:="Date")> ByVal dataEntrada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraEntrada", DbType:="Time")> ByVal horaEntrada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdTEcnicoEntrada", DbType:="Int")> ByVal idTEcnicoEntrada As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoEntrada", DbType:="Int")> ByVal tipoEntrada As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPrestador", DbType:="Int")> ByVal idPrestador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idVeiculo, idCliente, placa, dataEntrada, horaEntrada, idTEcnicoEntrada, tipoEntrada, idPrestador, idProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereFabricanteModelo")>  _
	Public Function InsereFabricanteModelo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Fabricante", DbType:="NText")> ByVal fabricante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Image")> ByVal logomarca As System.Data.Linq.Binary) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), fabricante, logomarca)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaCategoriaChecklist")>  _
	Public Function InsereNovaCategoriaChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdChecklist", DbType:="Int")> ByVal idChecklist As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), posicao, idChecklist, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaEtapaProcessoChecklist")>  _
	Public Function InsereNovaEtapaProcessoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Titulo", DbType:="NText")> ByVal titulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="Int")> ByVal tipo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso, titulo, descricao, tipo, posicao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaPerguntaEtapaProcessoChecklist")>  _
	Public Function InsereNovaPerguntaEtapaProcessoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEtapaProcesso", DbType:="Int")> ByVal idEtapaProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Titulo", DbType:="NText")> ByVal titulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoResposta", DbType:="Int")> ByVal tipoResposta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ExigeImagem", DbType:="Bit")> ByVal exigeImagem As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idEtapaProcesso, titulo, tipoResposta, posicao, exigeImagem)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaRespostaPerguntaProcessoChecklist")>  _
	Public Function InsereNovaRespostaPerguntaProcessoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPerguntaEtapa", DbType:="Int")> ByVal idPerguntaEtapa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ExigeImagem", DbType:="Bit")> ByVal exigeImagem As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idPerguntaEtapa, exigeImagem, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaVistoriaVeiculo")>  _
	Public Function InsereNovaVistoriaVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculo", DbType:="Int")> ByVal idVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataVistoria", DbType:="Date")> ByVal dataVistoria As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraVistoria", DbType:="Time")> ByVal horaVistoria As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdTecnico", DbType:="Int")> ByVal idTecnico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Recebida", DbType:="Bit")> ByVal recebida As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataSolicitacao", DbType:="Date")> ByVal dataSolicitacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraSolicitacao", DbType:="Time")> ByVal horaSolicitacao As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitante", DbType:="Int")> ByVal idSolicitante As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Concluido", DbType:="Bit")> ByVal concluido As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal nivelReq As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraInicioVistorria", DbType:="Time")> ByVal horaInicioVistorria As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DatainicioVistoria", DbType:="Date")> ByVal datainicioVistoria As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idVeiculo, idCliente, dataVistoria, horaVistoria, idTecnico, recebida, dataSolicitacao, horaSolicitacao, idSolicitante, concluido, nivelReq, horaInicioVistorria, datainicioVistoria)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoChecklist")>  _
	Public Function InsereNovoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCriador", DbType:="Int")> ByVal idCriador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataCriacao", DbType:="Date")> ByVal dataCriacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Nivel_Req", DbType:="Int")> ByVal nivel_Req As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Titulo", DbType:="NText")> ByVal titulo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCriador, dataCriacao, status, nivel_Req, posicao, titulo)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoProcessoChecklist")>  _
	Public Function InsereNovoProcessoChecklist(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItem", DbType:="Int")> ByVal idItem As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Posicao", DbType:="Int")> ByVal posicao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idItem, posicao, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InserePrestadorEntrega")>  _
	Public Function InserePrestadorEntrega(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeCompleto", DbType:="NText")> ByVal nomeCompleto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Placa", DbType:="NText")> ByVal placa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoEntregador", DbType:="NText")> ByVal tipoEntregador As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Rg", DbType:="NText")> ByVal rg As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPrestJv", DbType:="Int")> ByVal idPrestJv As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Email", DbType:="NText")> ByVal email As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CelularN", DbType:="NText")> ByVal celularN As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), nomeCompleto, placa, tipoEntregador, rg, idPrestJv, email, celularN)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereRespostaCheklistUsuario")>  _
	Public Function InsereRespostaCheklistUsuario(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPergunta", DbType:="Int")> ByVal idPergunta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdResposta", DbType:="Int")> ByVal idResposta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idPergunta, idResposta, descricao, idProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereSolucaoVistoria")>  _
	Public Function InsereSolucaoVistoria(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdResposta", DbType:="Int")> ByVal idResposta As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idtecnico", DbType:="Int")> ByVal idtecnico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataInicio", DbType:="Date")> ByVal dataInicio As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraIniio", DbType:="Time")> ByVal horaIniio As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataFim", DbType:="Date")> ByVal dataFim As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraFim", DbType:="Time")> ByVal horaFim As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdMarca", DbType:="Int")> ByVal idMarca As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idResposta, idtecnico, dataInicio, horaIniio, dataFim, horaFim, status, idProcesso, idMarca)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereVersaoModeloVeiculo")>  _
	Public Function InsereVersaoModeloVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdModelo", DbType:="Int")> ByVal idModelo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Versao", DbType:="NText")> ByVal versao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Potencia", DbType:="Money")> ByVal potencia As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cilindrada", DbType:="Int")> ByVal cilindrada As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCombustivel", DbType:="Int")> ByVal idCombustivel As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Combustivel", DbType:="NText")> ByVal combustivel As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AnoMod", DbType:="Int")> ByVal anoMod As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AnoFab", DbType:="Int")> ByVal anoFab As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCambio", DbType:="Int")> ByVal idCambio As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cambio", DbType:="NText")> ByVal cambio As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idModelo, versao, potencia, cilindrada, idCombustivel, combustivel, anoMod, anoFab, idCambio, cambio)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoVinculoProdutoModelo")>  _
	Public Function InsereNovoVinculoProdutoModelo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdModeloVeic", DbType:="Int")> ByVal idModeloVeic As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVersaoVeiculo", DbType:="Int")> ByVal idVersaoVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AnoMod", DbType:="Int")> ByVal anoMod As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AnoFab", DbType:="Int")> ByVal anoFab As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Motor", DbType:="Money")> ByVal motor As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Potencia", DbType:="Int")> ByVal potencia As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProduto, idSolicitacaoCad, idModeloVeic, idVersaoVeiculo, anoMod, anoFab, motor, potencia)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereMarcaImagem")>  _
	Public Function InsereMarcaImagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdImagem", DbType:="Int")> ByVal idImagem As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="X", DbType:="Money")> ByVal x As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Y", DbType:="Money")> ByVal y As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cor", DbType:="NText")> ByVal cor As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idImagem, descricao, x, y, idProcesso, cor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereItemSolucao")>  _
	Public Function InsereItemSolucao(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="Bit")> ByVal tipo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qt", DbType:="Int")> ByVal qt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NecessitaInicio", DbType:="Bit")> ByVal necessitaInicio As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolucao", DbType:="Int")> ByVal idSolucao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProduto, tipo, idSolicitacao, qt, necessitaInicio, idSolucao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaMarcasImagem")>  _
	Public Function DeletaMarcasImagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idimagem", DbType:="Int")> ByVal idimagem As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idimagem)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSolucaoMarcaImagem")>  _
	Public Function DeletaSolucaoMarcaImagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSItemolucaoMarcaImagem")>  _
	Public Function DeletaSItemolucaoMarcaImagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProcesso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoParceiro")>  _
	Public Function InsereNovoParceiro(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CNPJ", DbType:="NChar(14)")> ByVal cNPJ As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IE", DbType:="NText")> ByVal iE As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="RazaoSocial", DbType:="NText")> ByVal razaoSocial As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeFantasia", DbType:="NText")> ByVal nomeFantasia As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEndereco", DbType:="Int")> ByVal idEndereco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Numero", DbType:="Int")> ByVal numero As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Clmp", DbType:="NText")> ByVal clmp As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Fechamento", DbType:="Int")> ByVal fechamento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="NText")> ByVal tipo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cNPJ, iE, razaoSocial, nomeFantasia, idEndereco, numero, clmp, fechamento, tipo)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoItemParceiro")>  _
	Public Function InsereNovoItemParceiro(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="Int")> ByVal tipo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCadSeguradora", DbType:="Int")> ByVal idCadSeguradora As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), descricao, tipo, idCadSeguradora)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaSeguradora_Entrada")>  _
	Public Function InsereNovaSeguradora_Entrada(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSeguradora", DbType:="Int")> ByVal idSeguradora As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataEntrada", DbType:="Date")> ByVal dataEntrada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraEntrada", DbType:="Time")> ByVal horaEntrada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NumSinistro", DbType:="NText")> ByVal numSinistro As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="VlrFranquia", DbType:="Money")> ByVal vlrFranquia As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, idSeguradora, dataEntrada, horaEntrada, numSinistro, vlrFranquia)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSolicitacaoVinculoProduto")>  _
	Public Function AtualizaSolicitacaoVinculoProduto(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCotacao", DbType:="Int")> ByVal idCotacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idproduto", DbType:="Int")> ByVal idproduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idsolicitacao", DbType:="Int")> ByVal idsolicitacao As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCotacao, idproduto, idsolicitacao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereImagemRespostaCheklistUsuario")>  _
	Public Function InsereImagemRespostaCheklistUsuario(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdRespostaUsuario", DbType:="Int")> ByVal idRespostaUsuario As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Imagem", DbType:="Image")> ByVal imagem As System.Data.Linq.Binary, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Titulo", DbType:="NText")> ByVal titulo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProcesso", DbType:="Int")> ByVal idProcesso As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCategoria", DbType:="Int")> ByVal idCategoria As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSubCategoria", DbType:="Int")> ByVal idSubCategoria As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Miniatura", DbType:="Image")> ByVal miniatura As System.Data.Linq.Binary) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idRespostaUsuario, imagem, titulo, idProcesso, idCategoria, idSubCategoria, miniatura)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSolicitacaoAssociacaoPecaProduto")>  _
	Public Function AtualizaSolicitacaoAssociacaoPecaProduto(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodProd", DbType:="Int")> ByVal idCodProd As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacaoCad, idCodProd)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoReparoVeiculo")>  _
	Public Function InsereNovoReparoVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolucao", DbType:="Int")> ByVal idSolucao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItem", DbType:="Int")> ByVal idItem As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="Bit")> ByVal tipo As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataInicio", DbType:="Date")> ByVal dataInicio As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraInicio", DbType:="Time")> ByVal horaInicio As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataFim", DbType:="Date")> ByVal dataFim As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraFim", DbType:="Time")> ByVal horaFim As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdTecnico", DbType:="Int")> ByVal idTecnico As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolucao, idItem, idSolicitacaoCad, tipo, dataInicio, horaInicio, dataFim, horaFim, idTecnico)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereCatOficina")>  _
	Public Function InsereCatOficina(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItemCatOficina", DbType:="Int")> ByVal idItemCatOficina As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCategoria", DbType:="Int")> ByVal idCategoria As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Categoria", DbType:="NText")> ByVal categoria As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSubCategoria", DbType:="Int")> ByVal idSubCategoria As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="SubCategoria", DbType:="NText")> ByVal subCategoria As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Item", DbType:="NText")> ByVal item As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Tipo", DbType:="Bit")> ByVal tipo As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idItemCatOficina, idCategoria, categoria, idSubCategoria, subCategoria, item, tipo)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereSubItemCatPeca")>  _
	Public Function InsereSubItemCatPeca(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItem", DbType:="Int")> ByVal idItem As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idItem, descricao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoVeiculo")>  _
	Public Function InsereNovoVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Placa", DbType:="NText")> ByVal placa As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFabricante", DbType:="Int")> ByVal idFabricante As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Fabricante", DbType:="NText")> ByVal fabricante As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdModelo", DbType:="Int")> ByVal idModelo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Modelo", DbType:="NText")> ByVal modelo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVersao", DbType:="Int")> ByVal idVersao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Versao", DbType:="NText")> ByVal versao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Renavan", DbType:="NText")> ByVal renavan As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Chassi", DbType:="NText")> ByVal chassi As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Anofab", DbType:="Int")> ByVal anofab As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Anomod", DbType:="Int")> ByVal anomod As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idcor", DbType:="Int")> ByVal idcor As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Cor", DbType:="NText")> ByVal cor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculoExt", DbType:="Int")> ByVal idVeiculoExt As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idCliente, placa, idFabricante, fabricante, idModelo, modelo, idVersao, versao, renavan, chassi, anofab, anomod, idcor, cor, idVeiculoExt)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereImagemColetada")>  _
	Public Function InsereImagemColetada(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImagemColetadoUrl", DbType:="NText")> ByVal imagemColetadoUrl As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImagemColetado", DbType:="Image")> ByVal imagemColetado As System.Data.Linq.Binary, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImagemColetadoUrlFim", DbType:="NText")> ByVal imagemColetadoUrlFim As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImagemColetadoFim", DbType:="Image")> ByVal imagemColetadoFim As System.Data.Linq.Binary, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVeiculo", DbType:="Int")> ByVal idVeiculo As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCliente", DbType:="Int")> ByVal idCliente As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal idImagemColetadaExt As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), descricao, imagemColetadoUrl, imagemColetado, imagemColetadoUrlFim, imagemColetadoFim, idVeiculo, idSolicitacao, idCliente, idImagemColetadaExt)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaNfLaudo")>  _
	Public Function AtualizaNfLaudo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItemExt", DbType:="Int")> ByVal idItemExt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NumNf", DbType:="NText")> ByVal numNf As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idItemExt, numNf)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaItemLaudoStatus")>  _
	Public Function AtualizaItemLaudoStatus(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItemExt", DbType:="Int")> ByVal idItemExt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Int")> ByVal status As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idItemExt, status)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoItemLaudoTecnico")>  _
	Public Function InsereNovoItemLaudoTecnico(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdLaudoTecnico", DbType:="Int")> ByVal idLaudoTecnico As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DescricaoItem", DbType:="NText")> ByVal descricaoItem As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Int")> ByVal status As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ChaveOficina", DbType:="NText")> ByVal chaveOficina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ChavePrestador", DbType:="NText")> ByVal chavePrestador As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImgPcUsadaUrl", DbType:="NText")> ByVal imgPcUsadaUrl As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ImgPcNovaUrl", DbType:="NText")> ByVal imgPcNovaUrl As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdItemExt", DbType:="Int")> ByVal idItemExt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NumNf", DbType:="NText")> ByVal numNf As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NumItemNF", DbType:="Int")> ByVal numItemNF As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFornecedor", DbType:="Int")> ByVal idFornecedor As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idLaudoTecnico, descricaoItem, status, chaveOficina, chavePrestador, imgPcUsadaUrl, imgPcNovaUrl, idItemExt, numNf, numItemNF, idFornecedor)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoLaudoTecnico")>  _
	Public Function InsereNovoLaudoTecnico(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ChaveOficina", DbType:="NText")> ByVal chaveOficina As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeCompleto", DbType:="NText")> ByVal nomeCompleto As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="CpfCnpj", DbType:="NText")> ByVal cpfCnpj As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataEntrada", DbType:="Date")> ByVal dataEntrada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraEntrada", DbType:="Time")> ByVal horaEntrada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataSolicitacao", DbType:="Date")> ByVal dataSolicitacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraSolicitacao", DbType:="Time")> ByVal horaSolicitacao As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataEntrega", DbType:="Date")> ByVal dataEntrega As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraEntrega", DbType:="Time")> ByVal horaEntrega As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Faturado", DbType:="Bit")> ByVal faturado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFaturamento", DbType:="Int")> ByVal idFaturamento As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdLaudoExt", DbType:="Int")> ByVal idLaudoExt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PlacaVeiculo", DbType:="NText")> ByVal placaVeiculo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ModeloVeiculo", DbType:="NText")> ByVal modeloVeiculo As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), chaveOficina, nomeCompleto, cpfCnpj, dataEntrada, horaEntrada, dataSolicitacao, horaSolicitacao, dataEntrega, horaEntrega, status, faturado, idFaturamento, idLaudoExt, placaVeiculo, modeloVeiculo)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereSolicitacaoCadastroPeca")>  _
	Public Function InsereSolicitacaoCadastroPeca( _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="PartNumber", DbType:="NText")> ByVal partNumber As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Descricao", DbType:="NText")> ByVal descricao As String,  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitante", DbType:="Int")> ByVal idSolicitante As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataSol", DbType:="Date")> ByVal dataSol As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraSol", DbType:="Time")> ByVal horaSol As System.Nullable(Of System.TimeSpan),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdRespCadastro", DbType:="Int")> ByVal idRespCadastro As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataCad", DbType:="Date")> ByVal dataCad As System.Nullable(Of Date),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraCad", DbType:="Time")> ByVal horaCad As System.Nullable(Of System.TimeSpan),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodCad", DbType:="Int")> ByVal idCodCad As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCategoria", DbType:="Int")> ByVal idCategoria As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSubCategoria", DbType:="Int")> ByVal idSubCategoria As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdModelo", DbType:="Int")> ByVal idModelo As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdVersao", DbType:="Int")> ByVal idVersao As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodExt", DbType:="Int")> ByVal idCodExt As System.Nullable(Of Integer),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Markup", DbType:="Money")> ByVal markup As System.Nullable(Of Decimal),  _
				<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Fabricante", DbType:="NText")> ByVal fabricante As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), partNumber, descricao, idSolicitante, dataSol, horaSol, status, idRespCadastro, dataCad, horaCad, idCodCad, idCategoria, idSubCategoria, idModelo, idVersao, idCodExt, markup, fabricante)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaIMkpSolicitacaoCadPeca")>  _
	Public Function AtualizaIMkpSolicitacaoCadPeca(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCadastro", DbType:="Int")> ByVal idSolicitacaoCadastro As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Markup", DbType:="Money")> ByVal markup As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacaoCadastro, markup)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaLaudoStatus_interno")>  _
	Public Function AtualizaLaudoStatus_interno(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdLaudoExt", DbType:="Int")> ByVal idLaudoExt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Int")> ByVal status As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idLaudoExt, status)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaAssociacaoPecaModelo")>  _
	Public Function DeletaAssociacaoPecaModelo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdAssociacaoPecaModelo", DbType:="Int")> ByVal idAssociacaoPecaModelo As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idAssociacaoPecaModelo)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereModeloVeiculo")>  _
	Public Function InsereModeloVeiculo(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFabricante", DbType:="Int")> ByVal idFabricante As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Modelo", DbType:="NText")> ByVal modelo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="AnoModelo", DbType:="NText")> ByVal anoModelo As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Combustivel", DbType:="NText")> ByVal combustivel As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idFabricante, modelo, anoModelo, combustivel)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Veiculos")>  _
Partial Public Class Veiculos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdVeiculo As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _Placa As String
	
	Private _IdFabricante As System.Nullable(Of Integer)
	
	Private _Fabricante As String
	
	Private _IdModelo As System.Nullable(Of Integer)
	
	Private _Modelo As String
	
	Private _IdVersao As System.Nullable(Of Integer)
	
	Private _Versao As String
	
	Private _Renavan As String
	
	Private _Chassi As String
	
	Private _AnoFab As System.Nullable(Of Integer)
	
	Private _AnoMod As System.Nullable(Of Integer)
	
	Private _IdCor As System.Nullable(Of Integer)
	
	Private _Cor As String
	
	Private _IdVeiculoExt As Integer
	
	Private _Vistorias As EntitySet(Of Vistorias)
	
	Private _EntradaVeiculo As EntitySet(Of EntradaVeiculo)
	
	Private _Modelos As EntityRef(Of Modelos)
	
	Private _FabricantesVeiculo As EntityRef(Of FabricantesVeiculo)
	
	Private _CorModelo As EntityRef(Of CorModelo)
	
	Private _VersaoModelos As EntityRef(Of VersaoModelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdVeiculoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVeiculoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnPlacaChanging(value As String)
    End Sub
    Partial Private Sub OnPlacaChanged()
    End Sub
    Partial Private Sub OnIdFabricanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFabricanteChanged()
    End Sub
    Partial Private Sub OnFabricanteChanging(value As String)
    End Sub
    Partial Private Sub OnFabricanteChanged()
    End Sub
    Partial Private Sub OnIdModeloChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdModeloChanged()
    End Sub
    Partial Private Sub OnModeloChanging(value As String)
    End Sub
    Partial Private Sub OnModeloChanged()
    End Sub
    Partial Private Sub OnIdVersaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdVersaoChanged()
    End Sub
    Partial Private Sub OnVersaoChanging(value As String)
    End Sub
    Partial Private Sub OnVersaoChanged()
    End Sub
    Partial Private Sub OnRenavanChanging(value As String)
    End Sub
    Partial Private Sub OnRenavanChanged()
    End Sub
    Partial Private Sub OnChassiChanging(value As String)
    End Sub
    Partial Private Sub OnChassiChanged()
    End Sub
    Partial Private Sub OnAnoFabChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoFabChanged()
    End Sub
    Partial Private Sub OnAnoModChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoModChanged()
    End Sub
    Partial Private Sub OnIdCorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCorChanged()
    End Sub
    Partial Private Sub OnCorChanging(value As String)
    End Sub
    Partial Private Sub OnCorChanged()
    End Sub
    Partial Private Sub OnIdVeiculoExtChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVeiculoExtChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Vistorias = New EntitySet(Of Vistorias)(AddressOf Me.attach_Vistorias, AddressOf Me.detach_Vistorias)
		Me._EntradaVeiculo = New EntitySet(Of EntradaVeiculo)(AddressOf Me.attach_EntradaVeiculo, AddressOf Me.detach_EntradaVeiculo)
		Me._Modelos = CType(Nothing, EntityRef(Of Modelos))
		Me._FabricantesVeiculo = CType(Nothing, EntityRef(Of FabricantesVeiculo))
		Me._CorModelo = CType(Nothing, EntityRef(Of CorModelo))
		Me._VersaoModelos = CType(Nothing, EntityRef(Of VersaoModelos))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVeiculo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdVeiculo() As Integer
		Get
			Return Me._IdVeiculo
		End Get
		Set
			If ((Me._IdVeiculo = value)  _
						= false) Then
				Me.OnIdVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVeiculo = value
				Me.SendPropertyChanged("IdVeiculo")
				Me.OnIdVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Placa", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Placa() As String
		Get
			Return Me._Placa
		End Get
		Set
			If (String.Equals(Me._Placa, value) = false) Then
				Me.OnPlacaChanging(value)
				Me.SendPropertyChanging
				Me._Placa = value
				Me.SendPropertyChanged("Placa")
				Me.OnPlacaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFabricante", DbType:="Int")>  _
	Public Property IdFabricante() As System.Nullable(Of Integer)
		Get
			Return Me._IdFabricante
		End Get
		Set
			If (Me._IdFabricante.Equals(value) = false) Then
				If Me._FabricantesVeiculo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdFabricanteChanging(value)
				Me.SendPropertyChanging
				Me._IdFabricante = value
				Me.SendPropertyChanged("IdFabricante")
				Me.OnIdFabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fabricante", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Fabricante() As String
		Get
			Return Me._Fabricante
		End Get
		Set
			If (String.Equals(Me._Fabricante, value) = false) Then
				Me.OnFabricanteChanging(value)
				Me.SendPropertyChanging
				Me._Fabricante = value
				Me.SendPropertyChanged("Fabricante")
				Me.OnFabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModelo", DbType:="Int")>  _
	Public Property IdModelo() As System.Nullable(Of Integer)
		Get
			Return Me._IdModelo
		End Get
		Set
			If (Me._IdModelo.Equals(value) = false) Then
				If Me._Modelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdModelo = value
				Me.SendPropertyChanged("IdModelo")
				Me.OnIdModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Modelo() As String
		Get
			Return Me._Modelo
		End Get
		Set
			If (String.Equals(Me._Modelo, value) = false) Then
				Me.OnModeloChanging(value)
				Me.SendPropertyChanging
				Me._Modelo = value
				Me.SendPropertyChanged("Modelo")
				Me.OnModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVersao", DbType:="Int")>  _
	Public Property IdVersao() As System.Nullable(Of Integer)
		Get
			Return Me._IdVersao
		End Get
		Set
			If (Me._IdVersao.Equals(value) = false) Then
				If Me._VersaoModelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdVersaoChanging(value)
				Me.SendPropertyChanging
				Me._IdVersao = value
				Me.SendPropertyChanged("IdVersao")
				Me.OnIdVersaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Versao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Versao() As String
		Get
			Return Me._Versao
		End Get
		Set
			If (String.Equals(Me._Versao, value) = false) Then
				Me.OnVersaoChanging(value)
				Me.SendPropertyChanging
				Me._Versao = value
				Me.SendPropertyChanged("Versao")
				Me.OnVersaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Renavan", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Renavan() As String
		Get
			Return Me._Renavan
		End Get
		Set
			If (String.Equals(Me._Renavan, value) = false) Then
				Me.OnRenavanChanging(value)
				Me.SendPropertyChanging
				Me._Renavan = value
				Me.SendPropertyChanged("Renavan")
				Me.OnRenavanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Chassi", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Chassi() As String
		Get
			Return Me._Chassi
		End Get
		Set
			If (String.Equals(Me._Chassi, value) = false) Then
				Me.OnChassiChanging(value)
				Me.SendPropertyChanging
				Me._Chassi = value
				Me.SendPropertyChanged("Chassi")
				Me.OnChassiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoFab", DbType:="Int")>  _
	Public Property AnoFab() As System.Nullable(Of Integer)
		Get
			Return Me._AnoFab
		End Get
		Set
			If (Me._AnoFab.Equals(value) = false) Then
				Me.OnAnoFabChanging(value)
				Me.SendPropertyChanging
				Me._AnoFab = value
				Me.SendPropertyChanged("AnoFab")
				Me.OnAnoFabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoMod", DbType:="Int")>  _
	Public Property AnoMod() As System.Nullable(Of Integer)
		Get
			Return Me._AnoMod
		End Get
		Set
			If (Me._AnoMod.Equals(value) = false) Then
				Me.OnAnoModChanging(value)
				Me.SendPropertyChanging
				Me._AnoMod = value
				Me.SendPropertyChanged("AnoMod")
				Me.OnAnoModChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCor", DbType:="Int")>  _
	Public Property IdCor() As System.Nullable(Of Integer)
		Get
			Return Me._IdCor
		End Get
		Set
			If (Me._IdCor.Equals(value) = false) Then
				If Me._CorModelo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdCorChanging(value)
				Me.SendPropertyChanging
				Me._IdCor = value
				Me.SendPropertyChanged("IdCor")
				Me.OnIdCorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cor", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cor() As String
		Get
			Return Me._Cor
		End Get
		Set
			If (String.Equals(Me._Cor, value) = false) Then
				Me.OnCorChanging(value)
				Me.SendPropertyChanging
				Me._Cor = value
				Me.SendPropertyChanged("Cor")
				Me.OnCorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVeiculoExt", DbType:="int")>  _
	Public Property IdVeiculoExt() As Integer
		Get
			Return Me._IdVeiculoExt
		End Get
		Set
			If ((Me._IdVeiculoExt = value)  _
						= false) Then
				Me.OnIdVeiculoExtChanging(value)
				Me.SendPropertyChanging
				Me._IdVeiculoExt = value
				Me.SendPropertyChanged("IdVeiculoExt")
				Me.OnIdVeiculoExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Veiculos_Vistorias", Storage:="_Vistorias", ThisKey:="IdVeiculo", OtherKey:="IdVeiculo")>  _
	Public Property Vistorias() As EntitySet(Of Vistorias)
		Get
			Return Me._Vistorias
		End Get
		Set
			Me._Vistorias.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Veiculos_EntradaVeiculo", Storage:="_EntradaVeiculo", ThisKey:="IdVeiculo", OtherKey:="IdVeiculo")>  _
	Public Property EntradaVeiculo() As EntitySet(Of EntradaVeiculo)
		Get
			Return Me._EntradaVeiculo
		End Get
		Set
			Me._EntradaVeiculo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_Veiculos", Storage:="_Modelos", ThisKey:="IdModelo", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos() As Modelos
		Get
			Return Me._Modelos.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos.Entity = Nothing
					previousValue.Veiculos.Remove(Me)
				End If
				Me._Modelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Veiculos.Add(Me)
					Me._IdModelo = value.IdModelo
				Else
					Me._IdModelo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FabricantesVeiculo_Veiculos", Storage:="_FabricantesVeiculo", ThisKey:="IdFabricante", OtherKey:="Idfabricante", IsForeignKey:=true)>  _
	Public Property FabricantesVeiculo() As FabricantesVeiculo
		Get
			Return Me._FabricantesVeiculo.Entity
		End Get
		Set
			Dim previousValue As FabricantesVeiculo = Me._FabricantesVeiculo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FabricantesVeiculo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FabricantesVeiculo.Entity = Nothing
					previousValue.Veiculos.Remove(Me)
				End If
				Me._FabricantesVeiculo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Veiculos.Add(Me)
					Me._IdFabricante = value.Idfabricante
				Else
					Me._IdFabricante = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FabricantesVeiculo")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CorModelo_Veiculos", Storage:="_CorModelo", ThisKey:="IdCor", OtherKey:="IdCor", IsForeignKey:=true)>  _
	Public Property CorModelo() As CorModelo
		Get
			Return Me._CorModelo.Entity
		End Get
		Set
			Dim previousValue As CorModelo = Me._CorModelo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CorModelo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CorModelo.Entity = Nothing
					previousValue.Veiculos.Remove(Me)
				End If
				Me._CorModelo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Veiculos.Add(Me)
					Me._IdCor = value.IdCor
				Else
					Me._IdCor = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("CorModelo")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VersaoModelos_Veiculos", Storage:="_VersaoModelos", ThisKey:="IdVersao", OtherKey:="Idversao", IsForeignKey:=true)>  _
	Public Property VersaoModelos() As VersaoModelos
		Get
			Return Me._VersaoModelos.Entity
		End Get
		Set
			Dim previousValue As VersaoModelos = Me._VersaoModelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._VersaoModelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._VersaoModelos.Entity = Nothing
					previousValue.Veiculos.Remove(Me)
				End If
				Me._VersaoModelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Veiculos.Add(Me)
					Me._IdVersao = value.Idversao
				Else
					Me._IdVersao = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("VersaoModelos")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Vistorias(ByVal entity As Vistorias)
		Me.SendPropertyChanging
		entity.Veiculos = Me
	End Sub
	
	Private Sub detach_Vistorias(ByVal entity As Vistorias)
		Me.SendPropertyChanging
		entity.Veiculos = Nothing
	End Sub
	
	Private Sub attach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Veiculos = Me
	End Sub
	
	Private Sub detach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Veiculos = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Modelos")>  _
Partial Public Class Modelos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdModelo As Integer
	
	Private _IdFabricante As System.Nullable(Of Integer)
	
	Private _Modelo As String
	
	Private _AnoModelo As String
	
	Private _Combustivel As String
	
	Private _Veiculos As EntitySet(Of Veiculos)
	
	Private _CorModelo As EntitySet(Of CorModelo)
	
	Private _VersaoModelos As EntitySet(Of VersaoModelos)
	
	Private _AssociaçãoPeçaModelo As EntitySet(Of AssociaçãoPeçaModelo)
	
	Private _VinculoProdutoModelo As EntitySet(Of VinculoProdutoModelo)
	
	Private _VinculoProdutoModelo1 As EntitySet(Of VinculoProdutoModelo)
	
	Private _FabricantesVeiculo As EntityRef(Of FabricantesVeiculo)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdModeloChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdModeloChanged()
    End Sub
    Partial Private Sub OnIdFabricanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFabricanteChanged()
    End Sub
    Partial Private Sub OnModeloChanging(value As String)
    End Sub
    Partial Private Sub OnModeloChanged()
    End Sub
    Partial Private Sub OnAnoModeloChanging(value As String)
    End Sub
    Partial Private Sub OnAnoModeloChanged()
    End Sub
    Partial Private Sub OnCombustivelChanging(value As String)
    End Sub
    Partial Private Sub OnCombustivelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Veiculos = New EntitySet(Of Veiculos)(AddressOf Me.attach_Veiculos, AddressOf Me.detach_Veiculos)
		Me._CorModelo = New EntitySet(Of CorModelo)(AddressOf Me.attach_CorModelo, AddressOf Me.detach_CorModelo)
		Me._VersaoModelos = New EntitySet(Of VersaoModelos)(AddressOf Me.attach_VersaoModelos, AddressOf Me.detach_VersaoModelos)
		Me._AssociaçãoPeçaModelo = New EntitySet(Of AssociaçãoPeçaModelo)(AddressOf Me.attach_AssociaçãoPeçaModelo, AddressOf Me.detach_AssociaçãoPeçaModelo)
		Me._VinculoProdutoModelo = New EntitySet(Of VinculoProdutoModelo)(AddressOf Me.attach_VinculoProdutoModelo, AddressOf Me.detach_VinculoProdutoModelo)
		Me._VinculoProdutoModelo1 = New EntitySet(Of VinculoProdutoModelo)(AddressOf Me.attach_VinculoProdutoModelo1, AddressOf Me.detach_VinculoProdutoModelo1)
		Me._FabricantesVeiculo = CType(Nothing, EntityRef(Of FabricantesVeiculo))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModelo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdModelo() As Integer
		Get
			Return Me._IdModelo
		End Get
		Set
			If ((Me._IdModelo = value)  _
						= false) Then
				Me.OnIdModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdModelo = value
				Me.SendPropertyChanged("IdModelo")
				Me.OnIdModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFabricante", DbType:="Int")>  _
	Public Property IdFabricante() As System.Nullable(Of Integer)
		Get
			Return Me._IdFabricante
		End Get
		Set
			If (Me._IdFabricante.Equals(value) = false) Then
				If Me._FabricantesVeiculo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdFabricanteChanging(value)
				Me.SendPropertyChanging
				Me._IdFabricante = value
				Me.SendPropertyChanged("IdFabricante")
				Me.OnIdFabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Modelo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Modelo() As String
		Get
			Return Me._Modelo
		End Get
		Set
			If (String.Equals(Me._Modelo, value) = false) Then
				Me.OnModeloChanging(value)
				Me.SendPropertyChanging
				Me._Modelo = value
				Me.SendPropertyChanged("Modelo")
				Me.OnModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoModelo", DbType:="Ntext", CanBeNull:=false)>  _
	Public Property AnoModelo() As String
		Get
			Return Me._AnoModelo
		End Get
		Set
			If (String.Equals(Me._AnoModelo, value) = false) Then
				Me.OnAnoModeloChanging(value)
				Me.SendPropertyChanging
				Me._AnoModelo = value
				Me.SendPropertyChanged("AnoModelo")
				Me.OnAnoModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Combustivel", DbType:="Ntext", CanBeNull:=false)>  _
	Public Property Combustivel() As String
		Get
			Return Me._Combustivel
		End Get
		Set
			If (String.Equals(Me._Combustivel, value) = false) Then
				Me.OnCombustivelChanging(value)
				Me.SendPropertyChanging
				Me._Combustivel = value
				Me.SendPropertyChanged("Combustivel")
				Me.OnCombustivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_Veiculos", Storage:="_Veiculos", ThisKey:="IdModelo", OtherKey:="IdModelo")>  _
	Public Property Veiculos() As EntitySet(Of Veiculos)
		Get
			Return Me._Veiculos
		End Get
		Set
			Me._Veiculos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_CorModelo", Storage:="_CorModelo", ThisKey:="IdModelo", OtherKey:="IdModelo")>  _
	Public Property CorModelo() As EntitySet(Of CorModelo)
		Get
			Return Me._CorModelo
		End Get
		Set
			Me._CorModelo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VersaoModelos", Storage:="_VersaoModelos", ThisKey:="IdModelo", OtherKey:="IdModelo")>  _
	Public Property VersaoModelos() As EntitySet(Of VersaoModelos)
		Get
			Return Me._VersaoModelos
		End Get
		Set
			Me._VersaoModelos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_AssociaçãoPeçaModelo", Storage:="_AssociaçãoPeçaModelo", ThisKey:="IdModelo", OtherKey:="IdModeloVeic")>  _
	Public Property AssociaçãoPeçaModelo() As EntitySet(Of AssociaçãoPeçaModelo)
		Get
			Return Me._AssociaçãoPeçaModelo
		End Get
		Set
			Me._AssociaçãoPeçaModelo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VinculoProdutoModelo", Storage:="_VinculoProdutoModelo", ThisKey:="IdModelo", OtherKey:="IdModeloVeic")>  _
	Public Property VinculoProdutoModelo() As EntitySet(Of VinculoProdutoModelo)
		Get
			Return Me._VinculoProdutoModelo
		End Get
		Set
			Me._VinculoProdutoModelo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VinculoProdutoModelo1", Storage:="_VinculoProdutoModelo1", ThisKey:="IdModelo", OtherKey:="IdModeloVeic")>  _
	Public Property VinculoProdutoModelo1() As EntitySet(Of VinculoProdutoModelo)
		Get
			Return Me._VinculoProdutoModelo1
		End Get
		Set
			Me._VinculoProdutoModelo1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FabricantesVeiculo_Modelos", Storage:="_FabricantesVeiculo", ThisKey:="IdFabricante", OtherKey:="Idfabricante", IsForeignKey:=true)>  _
	Public Property FabricantesVeiculo() As FabricantesVeiculo
		Get
			Return Me._FabricantesVeiculo.Entity
		End Get
		Set
			Dim previousValue As FabricantesVeiculo = Me._FabricantesVeiculo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FabricantesVeiculo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FabricantesVeiculo.Entity = Nothing
					previousValue.Modelos.Remove(Me)
				End If
				Me._FabricantesVeiculo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Modelos.Add(Me)
					Me._IdFabricante = value.Idfabricante
				Else
					Me._IdFabricante = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("FabricantesVeiculo")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.Modelos = Me
	End Sub
	
	Private Sub detach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.Modelos = Nothing
	End Sub
	
	Private Sub attach_CorModelo(ByVal entity As CorModelo)
		Me.SendPropertyChanging
		entity.Modelos = Me
	End Sub
	
	Private Sub detach_CorModelo(ByVal entity As CorModelo)
		Me.SendPropertyChanging
		entity.Modelos = Nothing
	End Sub
	
	Private Sub attach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.Modelos = Me
	End Sub
	
	Private Sub detach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.Modelos = Nothing
	End Sub
	
	Private Sub attach_AssociaçãoPeçaModelo(ByVal entity As AssociaçãoPeçaModelo)
		Me.SendPropertyChanging
		entity.Modelos = Me
	End Sub
	
	Private Sub detach_AssociaçãoPeçaModelo(ByVal entity As AssociaçãoPeçaModelo)
		Me.SendPropertyChanging
		entity.Modelos = Nothing
	End Sub
	
	Private Sub attach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.Modelos = Me
	End Sub
	
	Private Sub detach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.Modelos = Nothing
	End Sub
	
	Private Sub attach_VinculoProdutoModelo1(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.Modelos1 = Me
	End Sub
	
	Private Sub detach_VinculoProdutoModelo1(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.Modelos1 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CorModelo")>  _
Partial Public Class CorModelo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCor As Integer
	
	Private _IdModelo As System.Nullable(Of Integer)
	
	Private _Cor As String
	
	Private _Veiculos As EntitySet(Of Veiculos)
	
	Private _Modelos As EntityRef(Of Modelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdCorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCorChanged()
    End Sub
    Partial Private Sub OnIdModeloChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdModeloChanged()
    End Sub
    Partial Private Sub OnCorChanging(value As String)
    End Sub
    Partial Private Sub OnCorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Veiculos = New EntitySet(Of Veiculos)(AddressOf Me.attach_Veiculos, AddressOf Me.detach_Veiculos)
		Me._Modelos = CType(Nothing, EntityRef(Of Modelos))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCor", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdCor() As Integer
		Get
			Return Me._IdCor
		End Get
		Set
			If ((Me._IdCor = value)  _
						= false) Then
				Me.OnIdCorChanging(value)
				Me.SendPropertyChanging
				Me._IdCor = value
				Me.SendPropertyChanged("IdCor")
				Me.OnIdCorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModelo", DbType:="Int")>  _
	Public Property IdModelo() As System.Nullable(Of Integer)
		Get
			Return Me._IdModelo
		End Get
		Set
			If (Me._IdModelo.Equals(value) = false) Then
				If Me._Modelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdModelo = value
				Me.SendPropertyChanged("IdModelo")
				Me.OnIdModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cor", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cor() As String
		Get
			Return Me._Cor
		End Get
		Set
			If (String.Equals(Me._Cor, value) = false) Then
				Me.OnCorChanging(value)
				Me.SendPropertyChanging
				Me._Cor = value
				Me.SendPropertyChanged("Cor")
				Me.OnCorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CorModelo_Veiculos", Storage:="_Veiculos", ThisKey:="IdCor", OtherKey:="IdCor")>  _
	Public Property Veiculos() As EntitySet(Of Veiculos)
		Get
			Return Me._Veiculos
		End Get
		Set
			Me._Veiculos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_CorModelo", Storage:="_Modelos", ThisKey:="IdModelo", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos() As Modelos
		Get
			Return Me._Modelos.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos.Entity = Nothing
					previousValue.CorModelo.Remove(Me)
				End If
				Me._Modelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.CorModelo.Add(Me)
					Me._IdModelo = value.IdModelo
				Else
					Me._IdModelo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.CorModelo = Me
	End Sub
	
	Private Sub detach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.CorModelo = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FabricantesVeiculo")>  _
Partial Public Class FabricantesVeiculo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Idfabricante As Integer
	
	Private _Fabricante As String
	
	Private _Logomarca As System.Data.Linq.Binary
	
	Private _Veiculos As EntitySet(Of Veiculos)
	
	Private _Modelos As EntitySet(Of Modelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdfabricanteChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdfabricanteChanged()
    End Sub
    Partial Private Sub OnFabricanteChanging(value As String)
    End Sub
    Partial Private Sub OnFabricanteChanged()
    End Sub
    Partial Private Sub OnLogomarcaChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnLogomarcaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Veiculos = New EntitySet(Of Veiculos)(AddressOf Me.attach_Veiculos, AddressOf Me.detach_Veiculos)
		Me._Modelos = New EntitySet(Of Modelos)(AddressOf Me.attach_Modelos, AddressOf Me.detach_Modelos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idfabricante", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Idfabricante() As Integer
		Get
			Return Me._Idfabricante
		End Get
		Set
			If ((Me._Idfabricante = value)  _
						= false) Then
				Me.OnIdfabricanteChanging(value)
				Me.SendPropertyChanging
				Me._Idfabricante = value
				Me.SendPropertyChanged("Idfabricante")
				Me.OnIdfabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fabricante", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Fabricante() As String
		Get
			Return Me._Fabricante
		End Get
		Set
			If (String.Equals(Me._Fabricante, value) = false) Then
				Me.OnFabricanteChanging(value)
				Me.SendPropertyChanging
				Me._Fabricante = value
				Me.SendPropertyChanged("Fabricante")
				Me.OnFabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Logomarca", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Logomarca() As System.Data.Linq.Binary
		Get
			Return Me._Logomarca
		End Get
		Set
			If (Object.Equals(Me._Logomarca, value) = false) Then
				Me.OnLogomarcaChanging(value)
				Me.SendPropertyChanging
				Me._Logomarca = value
				Me.SendPropertyChanged("Logomarca")
				Me.OnLogomarcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FabricantesVeiculo_Veiculos", Storage:="_Veiculos", ThisKey:="Idfabricante", OtherKey:="IdFabricante")>  _
	Public Property Veiculos() As EntitySet(Of Veiculos)
		Get
			Return Me._Veiculos
		End Get
		Set
			Me._Veiculos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FabricantesVeiculo_Modelos", Storage:="_Modelos", ThisKey:="Idfabricante", OtherKey:="IdFabricante")>  _
	Public Property Modelos() As EntitySet(Of Modelos)
		Get
			Return Me._Modelos
		End Get
		Set
			Me._Modelos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.FabricantesVeiculo = Me
	End Sub
	
	Private Sub detach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.FabricantesVeiculo = Nothing
	End Sub
	
	Private Sub attach_Modelos(ByVal entity As Modelos)
		Me.SendPropertyChanging
		entity.FabricantesVeiculo = Me
	End Sub
	
	Private Sub detach_Modelos(ByVal entity As Modelos)
		Me.SendPropertyChanging
		entity.FabricantesVeiculo = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CombustivelVeiculo")>  _
Partial Public Class CombustivelVeiculo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCombustivel As Integer
	
	Private _Combustivel As String
	
	Private _VersaoModelos As EntitySet(Of VersaoModelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdCombustivelChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCombustivelChanged()
    End Sub
    Partial Private Sub OnCombustivelChanging(value As String)
    End Sub
    Partial Private Sub OnCombustivelChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._VersaoModelos = New EntitySet(Of VersaoModelos)(AddressOf Me.attach_VersaoModelos, AddressOf Me.detach_VersaoModelos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCombustivel", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdCombustivel() As Integer
		Get
			Return Me._IdCombustivel
		End Get
		Set
			If ((Me._IdCombustivel = value)  _
						= false) Then
				Me.OnIdCombustivelChanging(value)
				Me.SendPropertyChanging
				Me._IdCombustivel = value
				Me.SendPropertyChanged("IdCombustivel")
				Me.OnIdCombustivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Combustivel", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Combustivel() As String
		Get
			Return Me._Combustivel
		End Get
		Set
			If (String.Equals(Me._Combustivel, value) = false) Then
				Me.OnCombustivelChanging(value)
				Me.SendPropertyChanging
				Me._Combustivel = value
				Me.SendPropertyChanged("Combustivel")
				Me.OnCombustivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CombustivelVeiculo_VersaoModelos", Storage:="_VersaoModelos", ThisKey:="IdCombustivel", OtherKey:="IdCombustivel")>  _
	Public Property VersaoModelos() As EntitySet(Of VersaoModelos)
		Get
			Return Me._VersaoModelos
		End Get
		Set
			Me._VersaoModelos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.CombustivelVeiculo = Me
	End Sub
	
	Private Sub detach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.CombustivelVeiculo = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VersaoModelos")>  _
Partial Public Class VersaoModelos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Idversao As Integer
	
	Private _IdModelo As System.Nullable(Of Integer)
	
	Private _Versao As String
	
	Private _Potencia As System.Nullable(Of Decimal)
	
	Private _Cilindrada As System.Nullable(Of Integer)
	
	Private _IdCombustivel As System.Nullable(Of Integer)
	
	Private _Combustivel As String
	
	Private _AnoMod As System.Nullable(Of Integer)
	
	Private _AnoFab As System.Nullable(Of Integer)
	
	Private _IdCambio As System.Nullable(Of Integer)
	
	Private _Cambio As String
	
	Private _Veiculos As EntitySet(Of Veiculos)
	
	Private _VinculoProdutoModelo As EntitySet(Of VinculoProdutoModelo)
	
	Private _CombustivelVeiculo As EntityRef(Of CombustivelVeiculo)
	
	Private _Modelos As EntityRef(Of Modelos)
	
	Private _Cambio1 As EntityRef(Of Cambio)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdversaoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdversaoChanged()
    End Sub
    Partial Private Sub OnIdModeloChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdModeloChanged()
    End Sub
    Partial Private Sub OnVersaoChanging(value As String)
    End Sub
    Partial Private Sub OnVersaoChanged()
    End Sub
    Partial Private Sub OnPotenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPotenciaChanged()
    End Sub
    Partial Private Sub OnCilindradaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCilindradaChanged()
    End Sub
    Partial Private Sub OnIdCombustivelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCombustivelChanged()
    End Sub
    Partial Private Sub OnCombustivelChanging(value As String)
    End Sub
    Partial Private Sub OnCombustivelChanged()
    End Sub
    Partial Private Sub OnAnoModChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoModChanged()
    End Sub
    Partial Private Sub OnAnoFabChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoFabChanged()
    End Sub
    Partial Private Sub OnIdCambioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCambioChanged()
    End Sub
    Partial Private Sub OnCambioChanging(value As String)
    End Sub
    Partial Private Sub OnCambioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Veiculos = New EntitySet(Of Veiculos)(AddressOf Me.attach_Veiculos, AddressOf Me.detach_Veiculos)
		Me._VinculoProdutoModelo = New EntitySet(Of VinculoProdutoModelo)(AddressOf Me.attach_VinculoProdutoModelo, AddressOf Me.detach_VinculoProdutoModelo)
		Me._CombustivelVeiculo = CType(Nothing, EntityRef(Of CombustivelVeiculo))
		Me._Modelos = CType(Nothing, EntityRef(Of Modelos))
		Me._Cambio1 = CType(Nothing, EntityRef(Of Cambio))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idversao", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Idversao() As Integer
		Get
			Return Me._Idversao
		End Get
		Set
			If ((Me._Idversao = value)  _
						= false) Then
				Me.OnIdversaoChanging(value)
				Me.SendPropertyChanging
				Me._Idversao = value
				Me.SendPropertyChanged("Idversao")
				Me.OnIdversaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModelo", DbType:="Int")>  _
	Public Property IdModelo() As System.Nullable(Of Integer)
		Get
			Return Me._IdModelo
		End Get
		Set
			If (Me._IdModelo.Equals(value) = false) Then
				If Me._Modelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdModelo = value
				Me.SendPropertyChanged("IdModelo")
				Me.OnIdModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Versao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Versao() As String
		Get
			Return Me._Versao
		End Get
		Set
			If (String.Equals(Me._Versao, value) = false) Then
				Me.OnVersaoChanging(value)
				Me.SendPropertyChanging
				Me._Versao = value
				Me.SendPropertyChanged("Versao")
				Me.OnVersaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Potencia", DbType:="Money")>  _
	Public Property Potencia() As System.Nullable(Of Decimal)
		Get
			Return Me._Potencia
		End Get
		Set
			If (Me._Potencia.Equals(value) = false) Then
				Me.OnPotenciaChanging(value)
				Me.SendPropertyChanging
				Me._Potencia = value
				Me.SendPropertyChanged("Potencia")
				Me.OnPotenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cilindrada", DbType:="Int")>  _
	Public Property Cilindrada() As System.Nullable(Of Integer)
		Get
			Return Me._Cilindrada
		End Get
		Set
			If (Me._Cilindrada.Equals(value) = false) Then
				Me.OnCilindradaChanging(value)
				Me.SendPropertyChanging
				Me._Cilindrada = value
				Me.SendPropertyChanged("Cilindrada")
				Me.OnCilindradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCombustivel", DbType:="Int")>  _
	Public Property IdCombustivel() As System.Nullable(Of Integer)
		Get
			Return Me._IdCombustivel
		End Get
		Set
			If (Me._IdCombustivel.Equals(value) = false) Then
				If Me._CombustivelVeiculo.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdCombustivelChanging(value)
				Me.SendPropertyChanging
				Me._IdCombustivel = value
				Me.SendPropertyChanged("IdCombustivel")
				Me.OnIdCombustivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Combustivel", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Combustivel() As String
		Get
			Return Me._Combustivel
		End Get
		Set
			If (String.Equals(Me._Combustivel, value) = false) Then
				Me.OnCombustivelChanging(value)
				Me.SendPropertyChanging
				Me._Combustivel = value
				Me.SendPropertyChanged("Combustivel")
				Me.OnCombustivelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoMod", DbType:="Int")>  _
	Public Property AnoMod() As System.Nullable(Of Integer)
		Get
			Return Me._AnoMod
		End Get
		Set
			If (Me._AnoMod.Equals(value) = false) Then
				Me.OnAnoModChanging(value)
				Me.SendPropertyChanging
				Me._AnoMod = value
				Me.SendPropertyChanged("AnoMod")
				Me.OnAnoModChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoFab", DbType:="Int")>  _
	Public Property AnoFab() As System.Nullable(Of Integer)
		Get
			Return Me._AnoFab
		End Get
		Set
			If (Me._AnoFab.Equals(value) = false) Then
				Me.OnAnoFabChanging(value)
				Me.SendPropertyChanging
				Me._AnoFab = value
				Me.SendPropertyChanged("AnoFab")
				Me.OnAnoFabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCambio", DbType:="Int")>  _
	Public Property IdCambio() As System.Nullable(Of Integer)
		Get
			Return Me._IdCambio
		End Get
		Set
			If (Me._IdCambio.Equals(value) = false) Then
				If Me._Cambio1.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdCambioChanging(value)
				Me.SendPropertyChanging
				Me._IdCambio = value
				Me.SendPropertyChanged("IdCambio")
				Me.OnIdCambioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cambio", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cambio() As String
		Get
			Return Me._Cambio
		End Get
		Set
			If (String.Equals(Me._Cambio, value) = false) Then
				Me.OnCambioChanging(value)
				Me.SendPropertyChanging
				Me._Cambio = value
				Me.SendPropertyChanged("Cambio")
				Me.OnCambioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VersaoModelos_Veiculos", Storage:="_Veiculos", ThisKey:="Idversao", OtherKey:="IdVersao")>  _
	Public Property Veiculos() As EntitySet(Of Veiculos)
		Get
			Return Me._Veiculos
		End Get
		Set
			Me._Veiculos.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VersaoModelos_VinculoProdutoModelo", Storage:="_VinculoProdutoModelo", ThisKey:="Idversao", OtherKey:="IdVersaoVeiculo")>  _
	Public Property VinculoProdutoModelo() As EntitySet(Of VinculoProdutoModelo)
		Get
			Return Me._VinculoProdutoModelo
		End Get
		Set
			Me._VinculoProdutoModelo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CombustivelVeiculo_VersaoModelos", Storage:="_CombustivelVeiculo", ThisKey:="IdCombustivel", OtherKey:="IdCombustivel", IsForeignKey:=true)>  _
	Public Property CombustivelVeiculo() As CombustivelVeiculo
		Get
			Return Me._CombustivelVeiculo.Entity
		End Get
		Set
			Dim previousValue As CombustivelVeiculo = Me._CombustivelVeiculo.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CombustivelVeiculo.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CombustivelVeiculo.Entity = Nothing
					previousValue.VersaoModelos.Remove(Me)
				End If
				Me._CombustivelVeiculo.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VersaoModelos.Add(Me)
					Me._IdCombustivel = value.IdCombustivel
				Else
					Me._IdCombustivel = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("CombustivelVeiculo")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VersaoModelos", Storage:="_Modelos", ThisKey:="IdModelo", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos() As Modelos
		Get
			Return Me._Modelos.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos.Entity = Nothing
					previousValue.VersaoModelos.Remove(Me)
				End If
				Me._Modelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VersaoModelos.Add(Me)
					Me._IdModelo = value.IdModelo
				Else
					Me._IdModelo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cambio_VersaoModelos", Storage:="_Cambio1", ThisKey:="IdCambio", OtherKey:="IdCambio", IsForeignKey:=true)>  _
	Public Property Cambio1() As Cambio
		Get
			Return Me._Cambio1.Entity
		End Get
		Set
			Dim previousValue As Cambio = Me._Cambio1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cambio1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cambio1.Entity = Nothing
					previousValue.VersaoModelos.Remove(Me)
				End If
				Me._Cambio1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VersaoModelos.Add(Me)
					Me._IdCambio = value.IdCambio
				Else
					Me._IdCambio = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Cambio1")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.VersaoModelos = Me
	End Sub
	
	Private Sub detach_Veiculos(ByVal entity As Veiculos)
		Me.SendPropertyChanging
		entity.VersaoModelos = Nothing
	End Sub
	
	Private Sub attach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.VersaoModelos = Me
	End Sub
	
	Private Sub detach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.VersaoModelos = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cambio")>  _
Partial Public Class Cambio
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCambio As Integer
	
	Private _Cambio As String
	
	Private _VersaoModelos As EntitySet(Of VersaoModelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdCambioChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCambioChanged()
    End Sub
    Partial Private Sub OnCambioChanging(value As String)
    End Sub
    Partial Private Sub OnCambioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._VersaoModelos = New EntitySet(Of VersaoModelos)(AddressOf Me.attach_VersaoModelos, AddressOf Me.detach_VersaoModelos)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCambio", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdCambio() As Integer
		Get
			Return Me._IdCambio
		End Get
		Set
			If ((Me._IdCambio = value)  _
						= false) Then
				Me.OnIdCambioChanging(value)
				Me.SendPropertyChanging
				Me._IdCambio = value
				Me.SendPropertyChanged("IdCambio")
				Me.OnIdCambioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cambio", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Cambio() As String
		Get
			Return Me._Cambio
		End Get
		Set
			If (String.Equals(Me._Cambio, value) = false) Then
				Me.OnCambioChanging(value)
				Me.SendPropertyChanging
				Me._Cambio = value
				Me.SendPropertyChanged("Cambio")
				Me.OnCambioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cambio_VersaoModelos", Storage:="_VersaoModelos", ThisKey:="IdCambio", OtherKey:="IdCambio")>  _
	Public Property VersaoModelos() As EntitySet(Of VersaoModelos)
		Get
			Return Me._VersaoModelos
		End Get
		Set
			Me._VersaoModelos.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.Cambio1 = Me
	End Sub
	
	Private Sub detach_VersaoModelos(ByVal entity As VersaoModelos)
		Me.SendPropertyChanging
		entity.Cambio1 = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Vistorias")>  _
Partial Public Class Vistorias
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdVistoria As Integer
	
	Private _IdVeiculo As System.Nullable(Of Integer)
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _DataVistoria As System.Nullable(Of Date)
	
	Private _HoraVistoria As System.Nullable(Of System.TimeSpan)
	
	Private _IdTecnico As System.Nullable(Of Integer)
	
	Private _Recebida As System.Nullable(Of Boolean)
	
	Private _DataSolicitação As System.Nullable(Of Date)
	
	Private _HoraSolicitação As System.Nullable(Of System.TimeSpan)
	
	Private _IdSolicitante As System.Nullable(Of Integer)
	
	Private _Concluido As System.Nullable(Of Boolean)
	
	Private _NivelReq As System.Nullable(Of Integer)
	
	Private _HoraInicioVistoria As System.Nullable(Of System.TimeSpan)
	
	Private _DataInicioVistoria As System.Nullable(Of Date)
	
	Private _RespostasCheklistUsuario As EntitySet(Of RespostasCheklistUsuario)
	
	Private _EntradaVeiculo As EntitySet(Of EntradaVeiculo)
	
	Private _MarcasImagens As EntitySet(Of MarcasImagens)
	
	Private _SoluçõesVistoria As EntitySet(Of SoluçõesVistoria)
	
	Private _Veiculos As EntityRef(Of Veiculos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdVistoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVistoriaChanged()
    End Sub
    Partial Private Sub OnIdVeiculoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdVeiculoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnDataVistoriaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataVistoriaChanged()
    End Sub
    Partial Private Sub OnHoraVistoriaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraVistoriaChanged()
    End Sub
    Partial Private Sub OnIdTecnicoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdTecnicoChanged()
    End Sub
    Partial Private Sub OnRecebidaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRecebidaChanged()
    End Sub
    Partial Private Sub OnDataSolicitaçãoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSolicitaçãoChanged()
    End Sub
    Partial Private Sub OnHoraSolicitaçãoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraSolicitaçãoChanged()
    End Sub
    Partial Private Sub OnIdSolicitanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitanteChanged()
    End Sub
    Partial Private Sub OnConcluidoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnConcluidoChanged()
    End Sub
    Partial Private Sub OnNivelReqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNivelReqChanged()
    End Sub
    Partial Private Sub OnHoraInicioVistoriaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraInicioVistoriaChanged()
    End Sub
    Partial Private Sub OnDataInicioVistoriaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataInicioVistoriaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RespostasCheklistUsuario = New EntitySet(Of RespostasCheklistUsuario)(AddressOf Me.attach_RespostasCheklistUsuario, AddressOf Me.detach_RespostasCheklistUsuario)
		Me._EntradaVeiculo = New EntitySet(Of EntradaVeiculo)(AddressOf Me.attach_EntradaVeiculo, AddressOf Me.detach_EntradaVeiculo)
		Me._MarcasImagens = New EntitySet(Of MarcasImagens)(AddressOf Me.attach_MarcasImagens, AddressOf Me.detach_MarcasImagens)
		Me._SoluçõesVistoria = New EntitySet(Of SoluçõesVistoria)(AddressOf Me.attach_SoluçõesVistoria, AddressOf Me.detach_SoluçõesVistoria)
		Me._Veiculos = CType(Nothing, EntityRef(Of Veiculos))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVistoria", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdVistoria() As Integer
		Get
			Return Me._IdVistoria
		End Get
		Set
			If ((Me._IdVistoria = value)  _
						= false) Then
				Me.OnIdVistoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdVistoria = value
				Me.SendPropertyChanged("IdVistoria")
				Me.OnIdVistoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVeiculo", DbType:="Int")>  _
	Public Property IdVeiculo() As System.Nullable(Of Integer)
		Get
			Return Me._IdVeiculo
		End Get
		Set
			If (Me._IdVeiculo.Equals(value) = false) Then
				If Me._Veiculos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVeiculo = value
				Me.SendPropertyChanged("IdVeiculo")
				Me.OnIdVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataVistoria", DbType:="Date")>  _
	Public Property DataVistoria() As System.Nullable(Of Date)
		Get
			Return Me._DataVistoria
		End Get
		Set
			If (Me._DataVistoria.Equals(value) = false) Then
				Me.OnDataVistoriaChanging(value)
				Me.SendPropertyChanging
				Me._DataVistoria = value
				Me.SendPropertyChanged("DataVistoria")
				Me.OnDataVistoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraVistoria", DbType:="Time")>  _
	Public Property HoraVistoria() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraVistoria
		End Get
		Set
			If (Me._HoraVistoria.Equals(value) = false) Then
				Me.OnHoraVistoriaChanging(value)
				Me.SendPropertyChanging
				Me._HoraVistoria = value
				Me.SendPropertyChanged("HoraVistoria")
				Me.OnHoraVistoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdTecnico", DbType:="Int")>  _
	Public Property IdTecnico() As System.Nullable(Of Integer)
		Get
			Return Me._IdTecnico
		End Get
		Set
			If (Me._IdTecnico.Equals(value) = false) Then
				Me.OnIdTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._IdTecnico = value
				Me.SendPropertyChanged("IdTecnico")
				Me.OnIdTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Recebida", DbType:="Bit")>  _
	Public Property Recebida() As System.Nullable(Of Boolean)
		Get
			Return Me._Recebida
		End Get
		Set
			If (Me._Recebida.Equals(value) = false) Then
				Me.OnRecebidaChanging(value)
				Me.SendPropertyChanging
				Me._Recebida = value
				Me.SendPropertyChanged("Recebida")
				Me.OnRecebidaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="DataSolicitacao", Storage:="_DataSolicitação", DbType:="Date")>  _
	Public Property DataSolicitação() As System.Nullable(Of Date)
		Get
			Return Me._DataSolicitação
		End Get
		Set
			If (Me._DataSolicitação.Equals(value) = false) Then
				Me.OnDataSolicitaçãoChanging(value)
				Me.SendPropertyChanging
				Me._DataSolicitação = value
				Me.SendPropertyChanged("DataSolicitação")
				Me.OnDataSolicitaçãoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="HoraSolicitacao", Storage:="_HoraSolicitação", DbType:="Time")>  _
	Public Property HoraSolicitação() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraSolicitação
		End Get
		Set
			If (Me._HoraSolicitação.Equals(value) = false) Then
				Me.OnHoraSolicitaçãoChanging(value)
				Me.SendPropertyChanging
				Me._HoraSolicitação = value
				Me.SendPropertyChanged("HoraSolicitação")
				Me.OnHoraSolicitaçãoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitante", DbType:="Int")>  _
	Public Property IdSolicitante() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitante
		End Get
		Set
			If (Me._IdSolicitante.Equals(value) = false) Then
				Me.OnIdSolicitanteChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitante = value
				Me.SendPropertyChanged("IdSolicitante")
				Me.OnIdSolicitanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concluido", DbType:="Bit")>  _
	Public Property Concluido() As System.Nullable(Of Boolean)
		Get
			Return Me._Concluido
		End Get
		Set
			If (Me._Concluido.Equals(value) = false) Then
				Me.OnConcluidoChanging(value)
				Me.SendPropertyChanging
				Me._Concluido = value
				Me.SendPropertyChanged("Concluido")
				Me.OnConcluidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NivelReq", DbType:="Int")>  _
	Public Property NivelReq() As System.Nullable(Of Integer)
		Get
			Return Me._NivelReq
		End Get
		Set
			If (Me._NivelReq.Equals(value) = false) Then
				Me.OnNivelReqChanging(value)
				Me.SendPropertyChanging
				Me._NivelReq = value
				Me.SendPropertyChanged("NivelReq")
				Me.OnNivelReqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraInicioVistoria", DbType:="Time")>  _
	Public Property HoraInicioVistoria() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraInicioVistoria
		End Get
		Set
			If (Me._HoraInicioVistoria.Equals(value) = false) Then
				Me.OnHoraInicioVistoriaChanging(value)
				Me.SendPropertyChanging
				Me._HoraInicioVistoria = value
				Me.SendPropertyChanged("HoraInicioVistoria")
				Me.OnHoraInicioVistoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInicioVistoria", DbType:="Date")>  _
	Public Property DataInicioVistoria() As System.Nullable(Of Date)
		Get
			Return Me._DataInicioVistoria
		End Get
		Set
			If (Me._DataInicioVistoria.Equals(value) = false) Then
				Me.OnDataInicioVistoriaChanging(value)
				Me.SendPropertyChanging
				Me._DataInicioVistoria = value
				Me.SendPropertyChanged("DataInicioVistoria")
				Me.OnDataInicioVistoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_RespostasCheklistUsuario", Storage:="_RespostasCheklistUsuario", ThisKey:="IdVistoria", OtherKey:="IdProesso")>  _
	Public Property RespostasCheklistUsuario() As EntitySet(Of RespostasCheklistUsuario)
		Get
			Return Me._RespostasCheklistUsuario
		End Get
		Set
			Me._RespostasCheklistUsuario.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_EntradaVeiculo", Storage:="_EntradaVeiculo", ThisKey:="IdVistoria", OtherKey:="IdProcesso")>  _
	Public Property EntradaVeiculo() As EntitySet(Of EntradaVeiculo)
		Get
			Return Me._EntradaVeiculo
		End Get
		Set
			Me._EntradaVeiculo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_MarcasImagens", Storage:="_MarcasImagens", ThisKey:="IdVistoria", OtherKey:="IdProcesso")>  _
	Public Property MarcasImagens() As EntitySet(Of MarcasImagens)
		Get
			Return Me._MarcasImagens
		End Get
		Set
			Me._MarcasImagens.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_SoluçõesVistoria", Storage:="_SoluçõesVistoria", ThisKey:="IdVistoria", OtherKey:="IdProcesso")>  _
	Public Property SoluçõesVistoria() As EntitySet(Of SoluçõesVistoria)
		Get
			Return Me._SoluçõesVistoria
		End Get
		Set
			Me._SoluçõesVistoria.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Veiculos_Vistorias", Storage:="_Veiculos", ThisKey:="IdVeiculo", OtherKey:="IdVeiculo", IsForeignKey:=true)>  _
	Public Property Veiculos() As Veiculos
		Get
			Return Me._Veiculos.Entity
		End Get
		Set
			Dim previousValue As Veiculos = Me._Veiculos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Veiculos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Veiculos.Entity = Nothing
					previousValue.Vistorias.Remove(Me)
				End If
				Me._Veiculos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Vistorias.Add(Me)
					Me._IdVeiculo = value.IdVeiculo
				Else
					Me._IdVeiculo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Veiculos")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.Vistorias = Me
	End Sub
	
	Private Sub detach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.Vistorias = Nothing
	End Sub
	
	Private Sub attach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Vistorias = Me
	End Sub
	
	Private Sub detach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Vistorias = Nothing
	End Sub
	
	Private Sub attach_MarcasImagens(ByVal entity As MarcasImagens)
		Me.SendPropertyChanging
		entity.Vistorias = Me
	End Sub
	
	Private Sub detach_MarcasImagens(ByVal entity As MarcasImagens)
		Me.SendPropertyChanging
		entity.Vistorias = Nothing
	End Sub
	
	Private Sub attach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.Vistorias = Me
	End Sub
	
	Private Sub detach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.Vistorias = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cheklist")>  _
Partial Public Class Cheklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdChecklist As Integer
	
	Private _IdCriador As System.Nullable(Of Integer)
	
	Private _DataCriação As System.Nullable(Of Date)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _Nivel_req As System.Nullable(Of Integer)
	
	Private _Posição As System.Nullable(Of Integer)
	
	Private _Titulo As String
	
	Private _ItemCheklist As EntitySet(Of ItemCheklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChecklistChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChecklistChanged()
    End Sub
    Partial Private Sub OnIdCriadorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCriadorChanged()
    End Sub
    Partial Private Sub OnDataCriacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataCriacaoChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnNivel_reqChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNivel_reqChanged()
    End Sub
    Partial Private Sub OnPosicaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPosicaoChanged()
    End Sub
    Partial Private Sub OnTituloChanging(value As String)
    End Sub
    Partial Private Sub OnTituloChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ItemCheklist = New EntitySet(Of ItemCheklist)(AddressOf Me.attach_ItemCheklist, AddressOf Me.detach_ItemCheklist)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdChecklist", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdChecklist() As Integer
		Get
			Return Me._IdChecklist
		End Get
		Set
			If ((Me._IdChecklist = value)  _
						= false) Then
				Me.OnIdChecklistChanging(value)
				Me.SendPropertyChanging
				Me._IdChecklist = value
				Me.SendPropertyChanged("IdChecklist")
				Me.OnIdChecklistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCriador", DbType:="Int")>  _
	Public Property IdCriador() As System.Nullable(Of Integer)
		Get
			Return Me._IdCriador
		End Get
		Set
			If (Me._IdCriador.Equals(value) = false) Then
				Me.OnIdCriadorChanging(value)
				Me.SendPropertyChanging
				Me._IdCriador = value
				Me.SendPropertyChanged("IdCriador")
				Me.OnIdCriadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataCriação", DbType:="Date")>  _
	Public Property DataCriacao() As System.Nullable(Of Date)
		Get
			Return Me._DataCriação
		End Get
		Set
			If (Me._DataCriação.Equals(value) = false) Then
				Me.OnDataCriacaoChanging(value)
				Me.SendPropertyChanging
				Me._DataCriação = value
				Me.SendPropertyChanged("DataCriacao")
				Me.OnDataCriacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nivel_req", DbType:="Int")>  _
	Public Property Nivel_req() As System.Nullable(Of Integer)
		Get
			Return Me._Nivel_req
		End Get
		Set
			If (Me._Nivel_req.Equals(value) = false) Then
				Me.OnNivel_reqChanging(value)
				Me.SendPropertyChanging
				Me._Nivel_req = value
				Me.SendPropertyChanged("Nivel_req")
				Me.OnNivel_reqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posição", DbType:="Int")>  _
	Public Property Posicao() As System.Nullable(Of Integer)
		Get
			Return Me._Posição
		End Get
		Set
			If (Me._Posição.Equals(value) = false) Then
				Me.OnPosicaoChanging(value)
				Me.SendPropertyChanging
				Me._Posição = value
				Me.SendPropertyChanged("Posicao")
				Me.OnPosicaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titulo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Titulo() As String
		Get
			Return Me._Titulo
		End Get
		Set
			If (String.Equals(Me._Titulo, value) = false) Then
				Me.OnTituloChanging(value)
				Me.SendPropertyChanging
				Me._Titulo = value
				Me.SendPropertyChanged("Titulo")
				Me.OnTituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cheklist_ItemCheklist", Storage:="_ItemCheklist", ThisKey:="IdChecklist", OtherKey:="IdChecklist")>  _
	Public Property ItemCheklist() As EntitySet(Of ItemCheklist)
		Get
			Return Me._ItemCheklist
		End Get
		Set
			Me._ItemCheklist.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ItemCheklist(ByVal entity As ItemCheklist)
		Me.SendPropertyChanging
		entity.Cheklist = Me
	End Sub
	
	Private Sub detach_ItemCheklist(ByVal entity As ItemCheklist)
		Me.SendPropertyChanging
		entity.Cheklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ItemCheklist")>  _
Partial Public Class ItemCheklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdItem As Integer
	
	Private _Posição As System.Nullable(Of Integer)
	
	Private _IdChecklist As System.Nullable(Of Integer)
	
	Private _Descrição As String
	
	Private _ProcessosChecklist As EntitySet(Of ProcessosChecklist)
	
	Private _Cheklist As EntityRef(Of Cheklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdItemChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdItemChanged()
    End Sub
    Partial Private Sub OnPosicaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPosicaoChanged()
    End Sub
    Partial Private Sub OnIdChecklistChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdChecklistChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ProcessosChecklist = New EntitySet(Of ProcessosChecklist)(AddressOf Me.attach_ProcessosChecklist, AddressOf Me.detach_ProcessosChecklist)
		Me._Cheklist = CType(Nothing, EntityRef(Of Cheklist))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItem", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdItem() As Integer
		Get
			Return Me._IdItem
		End Get
		Set
			If ((Me._IdItem = value)  _
						= false) Then
				Me.OnIdItemChanging(value)
				Me.SendPropertyChanging
				Me._IdItem = value
				Me.SendPropertyChanged("IdItem")
				Me.OnIdItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posição", DbType:="Int")>  _
	Public Property Posicao() As System.Nullable(Of Integer)
		Get
			Return Me._Posição
		End Get
		Set
			If (Me._Posição.Equals(value) = false) Then
				Me.OnPosicaoChanging(value)
				Me.SendPropertyChanging
				Me._Posição = value
				Me.SendPropertyChanged("Posicao")
				Me.OnPosicaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdChecklist", DbType:="Int")>  _
	Public Property IdChecklist() As System.Nullable(Of Integer)
		Get
			Return Me._IdChecklist
		End Get
		Set
			If (Me._IdChecklist.Equals(value) = false) Then
				If Me._Cheklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdChecklistChanging(value)
				Me.SendPropertyChanging
				Me._IdChecklist = value
				Me.SendPropertyChanged("IdChecklist")
				Me.OnIdChecklistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ItemCheklist_ProcessosChecklist", Storage:="_ProcessosChecklist", ThisKey:="IdItem", OtherKey:="IdItem")>  _
	Public Property ProcessosChecklist() As EntitySet(Of ProcessosChecklist)
		Get
			Return Me._ProcessosChecklist
		End Get
		Set
			Me._ProcessosChecklist.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Cheklist_ItemCheklist", Storage:="_Cheklist", ThisKey:="IdChecklist", OtherKey:="IdChecklist", IsForeignKey:=true)>  _
	Public Property Cheklist() As Cheklist
		Get
			Return Me._Cheklist.Entity
		End Get
		Set
			Dim previousValue As Cheklist = Me._Cheklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cheklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cheklist.Entity = Nothing
					previousValue.ItemCheklist.Remove(Me)
				End If
				Me._Cheklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ItemCheklist.Add(Me)
					Me._IdChecklist = value.IdChecklist
				Else
					Me._IdChecklist = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Cheklist")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ProcessosChecklist(ByVal entity As ProcessosChecklist)
		Me.SendPropertyChanging
		entity.ItemCheklist = Me
	End Sub
	
	Private Sub detach_ProcessosChecklist(ByVal entity As ProcessosChecklist)
		Me.SendPropertyChanging
		entity.ItemCheklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ProcessosChecklist")>  _
Partial Public Class ProcessosChecklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdProcesso As Integer
	
	Private _IdItem As System.Nullable(Of Integer)
	
	Private _Posição As System.Nullable(Of Integer)
	
	Private _Descrição As String
	
	Private _EtapasChecklist As EntitySet(Of EtapasChecklist)
	
	Private _ItemCheklist As EntityRef(Of ItemCheklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    Partial Private Sub OnIdItemChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdItemChanged()
    End Sub
    Partial Private Sub OnPosicaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPosicaoChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._EtapasChecklist = New EntitySet(Of EtapasChecklist)(AddressOf Me.attach_EtapasChecklist, AddressOf Me.detach_EtapasChecklist)
		Me._ItemCheklist = CType(Nothing, EntityRef(Of ItemCheklist))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdProcesso() As Integer
		Get
			Return Me._IdProcesso
		End Get
		Set
			If ((Me._IdProcesso = value)  _
						= false) Then
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItem", DbType:="Int")>  _
	Public Property IdItem() As System.Nullable(Of Integer)
		Get
			Return Me._IdItem
		End Get
		Set
			If (Me._IdItem.Equals(value) = false) Then
				If Me._ItemCheklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdItemChanging(value)
				Me.SendPropertyChanging
				Me._IdItem = value
				Me.SendPropertyChanged("IdItem")
				Me.OnIdItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posição", DbType:="Int")>  _
	Public Property Posicao() As System.Nullable(Of Integer)
		Get
			Return Me._Posição
		End Get
		Set
			If (Me._Posição.Equals(value) = false) Then
				Me.OnPosicaoChanging(value)
				Me.SendPropertyChanging
				Me._Posição = value
				Me.SendPropertyChanged("Posicao")
				Me.OnPosicaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProcessosChecklist_EtapasChecklist", Storage:="_EtapasChecklist", ThisKey:="IdProcesso", OtherKey:="IdProcesso")>  _
	Public Property EtapasChecklist() As EntitySet(Of EtapasChecklist)
		Get
			Return Me._EtapasChecklist
		End Get
		Set
			Me._EtapasChecklist.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ItemCheklist_ProcessosChecklist", Storage:="_ItemCheklist", ThisKey:="IdItem", OtherKey:="IdItem", IsForeignKey:=true)>  _
	Public Property ItemCheklist() As ItemCheklist
		Get
			Return Me._ItemCheklist.Entity
		End Get
		Set
			Dim previousValue As ItemCheklist = Me._ItemCheklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ItemCheklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ItemCheklist.Entity = Nothing
					previousValue.ProcessosChecklist.Remove(Me)
				End If
				Me._ItemCheklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ProcessosChecklist.Add(Me)
					Me._IdItem = value.IdItem
				Else
					Me._IdItem = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ItemCheklist")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_EtapasChecklist(ByVal entity As EtapasChecklist)
		Me.SendPropertyChanging
		entity.ProcessosChecklist = Me
	End Sub
	
	Private Sub detach_EtapasChecklist(ByVal entity As EtapasChecklist)
		Me.SendPropertyChanging
		entity.ProcessosChecklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EtapasChecklist")>  _
Partial Public Class EtapasChecklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEtapaProcessoChecklist As Integer
	
	Private _IdProcesso As System.Nullable(Of Integer)
	
	Private _Titulo As String
	
	Private _Descrição As String
	
	Private _Tipo As System.Nullable(Of Integer)
	
	Private _Posição As System.Nullable(Of Integer)
	
	Private _PerguntasChecklist As EntitySet(Of PerguntasChecklist)
	
	Private _ProcessosChecklist As EntityRef(Of ProcessosChecklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEtapaProcessoChecklistChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEtapaProcessoChecklistChanged()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    Partial Private Sub OnTituloChanging(value As String)
    End Sub
    Partial Private Sub OnTituloChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnPosicaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPosicaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._PerguntasChecklist = New EntitySet(Of PerguntasChecklist)(AddressOf Me.attach_PerguntasChecklist, AddressOf Me.detach_PerguntasChecklist)
		Me._ProcessosChecklist = CType(Nothing, EntityRef(Of ProcessosChecklist))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEtapaProcessoChecklist", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEtapaProcessoChecklist() As Integer
		Get
			Return Me._IdEtapaProcessoChecklist
		End Get
		Set
			If ((Me._IdEtapaProcessoChecklist = value)  _
						= false) Then
				Me.OnIdEtapaProcessoChecklistChanging(value)
				Me.SendPropertyChanging
				Me._IdEtapaProcessoChecklist = value
				Me.SendPropertyChanged("IdEtapaProcessoChecklist")
				Me.OnIdEtapaProcessoChecklistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", DbType:="Int")>  _
	Public Property IdProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProcesso
		End Get
		Set
			If (Me._IdProcesso.Equals(value) = false) Then
				If Me._ProcessosChecklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titulo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Titulo() As String
		Get
			Return Me._Titulo
		End Get
		Set
			If (String.Equals(Me._Titulo, value) = false) Then
				Me.OnTituloChanging(value)
				Me.SendPropertyChanging
				Me._Titulo = value
				Me.SendPropertyChanged("Titulo")
				Me.OnTituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Int")>  _
	Public Property Tipo() As System.Nullable(Of Integer)
		Get
			Return Me._Tipo
		End Get
		Set
			If (Me._Tipo.Equals(value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posição", DbType:="Int")>  _
	Public Property Posicao() As System.Nullable(Of Integer)
		Get
			Return Me._Posição
		End Get
		Set
			If (Me._Posição.Equals(value) = false) Then
				Me.OnPosicaoChanging(value)
				Me.SendPropertyChanging
				Me._Posição = value
				Me.SendPropertyChanged("Posicao")
				Me.OnPosicaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="EtapasChecklist_PerguntasChecklist", Storage:="_PerguntasChecklist", ThisKey:="IdEtapaProcessoChecklist", OtherKey:="IdEtapaProcesso")>  _
	Public Property PerguntasChecklist() As EntitySet(Of PerguntasChecklist)
		Get
			Return Me._PerguntasChecklist
		End Get
		Set
			Me._PerguntasChecklist.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ProcessosChecklist_EtapasChecklist", Storage:="_ProcessosChecklist", ThisKey:="IdProcesso", OtherKey:="IdProcesso", IsForeignKey:=true)>  _
	Public Property ProcessosChecklist() As ProcessosChecklist
		Get
			Return Me._ProcessosChecklist.Entity
		End Get
		Set
			Dim previousValue As ProcessosChecklist = Me._ProcessosChecklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ProcessosChecklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ProcessosChecklist.Entity = Nothing
					previousValue.EtapasChecklist.Remove(Me)
				End If
				Me._ProcessosChecklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EtapasChecklist.Add(Me)
					Me._IdProcesso = value.IdProcesso
				Else
					Me._IdProcesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ProcessosChecklist")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_PerguntasChecklist(ByVal entity As PerguntasChecklist)
		Me.SendPropertyChanging
		entity.EtapasChecklist = Me
	End Sub
	
	Private Sub detach_PerguntasChecklist(ByVal entity As PerguntasChecklist)
		Me.SendPropertyChanging
		entity.EtapasChecklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PerguntasChecklist")>  _
Partial Public Class PerguntasChecklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdPerguntaChecklit As Integer
	
	Private _IdEtapaProcesso As System.Nullable(Of Integer)
	
	Private _Titulo As String
	
	Private _TipoResposta As System.Nullable(Of Integer)
	
	Private _Posição As System.Nullable(Of Integer)
	
	Private _ExigeImagem As System.Nullable(Of Boolean)
	
	Private _UsoResposta As System.Nullable(Of Boolean)
	
	Private _Tabela As String
	
	Private _Coluna As String
	
	Private _RespostasChecklist As EntitySet(Of RespostasChecklist)
	
	Private _RespostasCheklistUsuario As EntitySet(Of RespostasCheklistUsuario)
	
	Private _EtapasChecklist As EntityRef(Of EtapasChecklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdPerguntaChecklitChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPerguntaChecklitChanged()
    End Sub
    Partial Private Sub OnIdEtapaProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEtapaProcessoChanged()
    End Sub
    Partial Private Sub OnTituloChanging(value As String)
    End Sub
    Partial Private Sub OnTituloChanged()
    End Sub
    Partial Private Sub OnTipoRespostaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTipoRespostaChanged()
    End Sub
    Partial Private Sub OnPosicaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPosicaoChanged()
    End Sub
    Partial Private Sub OnExigeImagemChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExigeImagemChanged()
    End Sub
    Partial Private Sub OnUsoRespostaChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsoRespostaChanged()
    End Sub
    Partial Private Sub OnTabelaChanging(value As String)
    End Sub
    Partial Private Sub OnTabelaChanged()
    End Sub
    Partial Private Sub OnColunaChanging(value As String)
    End Sub
    Partial Private Sub OnColunaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RespostasChecklist = New EntitySet(Of RespostasChecklist)(AddressOf Me.attach_RespostasChecklist, AddressOf Me.detach_RespostasChecklist)
		Me._RespostasCheklistUsuario = New EntitySet(Of RespostasCheklistUsuario)(AddressOf Me.attach_RespostasCheklistUsuario, AddressOf Me.detach_RespostasCheklistUsuario)
		Me._EtapasChecklist = CType(Nothing, EntityRef(Of EtapasChecklist))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPerguntaChecklit", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdPerguntaChecklit() As Integer
		Get
			Return Me._IdPerguntaChecklit
		End Get
		Set
			If ((Me._IdPerguntaChecklit = value)  _
						= false) Then
				Me.OnIdPerguntaChecklitChanging(value)
				Me.SendPropertyChanging
				Me._IdPerguntaChecklit = value
				Me.SendPropertyChanged("IdPerguntaChecklit")
				Me.OnIdPerguntaChecklitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEtapaProcesso", DbType:="Int")>  _
	Public Property IdEtapaProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdEtapaProcesso
		End Get
		Set
			If (Me._IdEtapaProcesso.Equals(value) = false) Then
				If Me._EtapasChecklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdEtapaProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdEtapaProcesso = value
				Me.SendPropertyChanged("IdEtapaProcesso")
				Me.OnIdEtapaProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titulo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Titulo() As String
		Get
			Return Me._Titulo
		End Get
		Set
			If (String.Equals(Me._Titulo, value) = false) Then
				Me.OnTituloChanging(value)
				Me.SendPropertyChanging
				Me._Titulo = value
				Me.SendPropertyChanged("Titulo")
				Me.OnTituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoResposta", DbType:="Int")>  _
	Public Property TipoResposta() As System.Nullable(Of Integer)
		Get
			Return Me._TipoResposta
		End Get
		Set
			If (Me._TipoResposta.Equals(value) = false) Then
				Me.OnTipoRespostaChanging(value)
				Me.SendPropertyChanging
				Me._TipoResposta = value
				Me.SendPropertyChanged("TipoResposta")
				Me.OnTipoRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posição", DbType:="Int")>  _
	Public Property Posicao() As System.Nullable(Of Integer)
		Get
			Return Me._Posição
		End Get
		Set
			If (Me._Posição.Equals(value) = false) Then
				Me.OnPosicaoChanging(value)
				Me.SendPropertyChanging
				Me._Posição = value
				Me.SendPropertyChanged("Posicao")
				Me.OnPosicaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExigeImagem", DbType:="BIt")>  _
	Public Property ExigeImagem() As System.Nullable(Of Boolean)
		Get
			Return Me._ExigeImagem
		End Get
		Set
			If (Me._ExigeImagem.Equals(value) = false) Then
				Me.OnExigeImagemChanging(value)
				Me.SendPropertyChanging
				Me._ExigeImagem = value
				Me.SendPropertyChanged("ExigeImagem")
				Me.OnExigeImagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UsoResposta", DbType:="bit")>  _
	Public Property UsoResposta() As System.Nullable(Of Boolean)
		Get
			Return Me._UsoResposta
		End Get
		Set
			If (Me._UsoResposta.Equals(value) = false) Then
				Me.OnUsoRespostaChanging(value)
				Me.SendPropertyChanging
				Me._UsoResposta = value
				Me.SendPropertyChanged("UsoResposta")
				Me.OnUsoRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tabela", DbType:="ntext")>  _
	Public Property Tabela() As String
		Get
			Return Me._Tabela
		End Get
		Set
			If (String.Equals(Me._Tabela, value) = false) Then
				Me.OnTabelaChanging(value)
				Me.SendPropertyChanging
				Me._Tabela = value
				Me.SendPropertyChanged("Tabela")
				Me.OnTabelaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Coluna", DbType:="Ntext")>  _
	Public Property Coluna() As String
		Get
			Return Me._Coluna
		End Get
		Set
			If (String.Equals(Me._Coluna, value) = false) Then
				Me.OnColunaChanging(value)
				Me.SendPropertyChanging
				Me._Coluna = value
				Me.SendPropertyChanged("Coluna")
				Me.OnColunaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PerguntasChecklist_RespostasChecklist", Storage:="_RespostasChecklist", ThisKey:="IdPerguntaChecklit", OtherKey:="IdPerguntaEtapa")>  _
	Public Property RespostasChecklist() As EntitySet(Of RespostasChecklist)
		Get
			Return Me._RespostasChecklist
		End Get
		Set
			Me._RespostasChecklist.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PerguntasChecklist_RespostasCheklistUsuario", Storage:="_RespostasCheklistUsuario", ThisKey:="IdPerguntaChecklit", OtherKey:="IdPergunta")>  _
	Public Property RespostasCheklistUsuario() As EntitySet(Of RespostasCheklistUsuario)
		Get
			Return Me._RespostasCheklistUsuario
		End Get
		Set
			Me._RespostasCheklistUsuario.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="EtapasChecklist_PerguntasChecklist", Storage:="_EtapasChecklist", ThisKey:="IdEtapaProcesso", OtherKey:="IdEtapaProcessoChecklist", IsForeignKey:=true)>  _
	Public Property EtapasChecklist() As EtapasChecklist
		Get
			Return Me._EtapasChecklist.Entity
		End Get
		Set
			Dim previousValue As EtapasChecklist = Me._EtapasChecklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._EtapasChecklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._EtapasChecklist.Entity = Nothing
					previousValue.PerguntasChecklist.Remove(Me)
				End If
				Me._EtapasChecklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.PerguntasChecklist.Add(Me)
					Me._IdEtapaProcesso = value.IdEtapaProcessoChecklist
				Else
					Me._IdEtapaProcesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("EtapasChecklist")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RespostasChecklist(ByVal entity As RespostasChecklist)
		Me.SendPropertyChanging
		entity.PerguntasChecklist = Me
	End Sub
	
	Private Sub detach_RespostasChecklist(ByVal entity As RespostasChecklist)
		Me.SendPropertyChanging
		entity.PerguntasChecklist = Nothing
	End Sub
	
	Private Sub attach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.PerguntasChecklist = Me
	End Sub
	
	Private Sub detach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.PerguntasChecklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RespostasChecklist")>  _
Partial Public Class RespostasChecklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdRespostaProcesso As Integer
	
	Private _IdPerguntaEtapa As System.Nullable(Of Integer)
	
	Private _ExigeImagem As System.Nullable(Of Boolean)
	
	Private _Descrição As String
	
	Private _RespostasCheklistUsuario As EntitySet(Of RespostasCheklistUsuario)
	
	Private _PerguntasChecklist As EntityRef(Of PerguntasChecklist)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdRespostaProcessoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRespostaProcessoChanged()
    End Sub
    Partial Private Sub OnIdPerguntaEtapaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdPerguntaEtapaChanged()
    End Sub
    Partial Private Sub OnExigeImagemChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnExigeImagemChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RespostasCheklistUsuario = New EntitySet(Of RespostasCheklistUsuario)(AddressOf Me.attach_RespostasCheklistUsuario, AddressOf Me.detach_RespostasCheklistUsuario)
		Me._PerguntasChecklist = CType(Nothing, EntityRef(Of PerguntasChecklist))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRespostaProcesso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdRespostaProcesso() As Integer
		Get
			Return Me._IdRespostaProcesso
		End Get
		Set
			If ((Me._IdRespostaProcesso = value)  _
						= false) Then
				Me.OnIdRespostaProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdRespostaProcesso = value
				Me.SendPropertyChanged("IdRespostaProcesso")
				Me.OnIdRespostaProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPerguntaEtapa", DbType:="Int")>  _
	Public Property IdPerguntaEtapa() As System.Nullable(Of Integer)
		Get
			Return Me._IdPerguntaEtapa
		End Get
		Set
			If (Me._IdPerguntaEtapa.Equals(value) = false) Then
				If Me._PerguntasChecklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdPerguntaEtapaChanging(value)
				Me.SendPropertyChanging
				Me._IdPerguntaEtapa = value
				Me.SendPropertyChanged("IdPerguntaEtapa")
				Me.OnIdPerguntaEtapaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExigeImagem", DbType:="Bit")>  _
	Public Property ExigeImagem() As System.Nullable(Of Boolean)
		Get
			Return Me._ExigeImagem
		End Get
		Set
			If (Me._ExigeImagem.Equals(value) = false) Then
				Me.OnExigeImagemChanging(value)
				Me.SendPropertyChanging
				Me._ExigeImagem = value
				Me.SendPropertyChanged("ExigeImagem")
				Me.OnExigeImagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasChecklist_RespostasCheklistUsuario", Storage:="_RespostasCheklistUsuario", ThisKey:="IdRespostaProcesso", OtherKey:="IdResposta")>  _
	Public Property RespostasCheklistUsuario() As EntitySet(Of RespostasCheklistUsuario)
		Get
			Return Me._RespostasCheklistUsuario
		End Get
		Set
			Me._RespostasCheklistUsuario.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PerguntasChecklist_RespostasChecklist", Storage:="_PerguntasChecklist", ThisKey:="IdPerguntaEtapa", OtherKey:="IdPerguntaChecklit", IsForeignKey:=true)>  _
	Public Property PerguntasChecklist() As PerguntasChecklist
		Get
			Return Me._PerguntasChecklist.Entity
		End Get
		Set
			Dim previousValue As PerguntasChecklist = Me._PerguntasChecklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PerguntasChecklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PerguntasChecklist.Entity = Nothing
					previousValue.RespostasChecklist.Remove(Me)
				End If
				Me._PerguntasChecklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RespostasChecklist.Add(Me)
					Me._IdPerguntaEtapa = value.IdPerguntaChecklit
				Else
					Me._IdPerguntaEtapa = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("PerguntasChecklist")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.RespostasChecklist = Me
	End Sub
	
	Private Sub detach_RespostasCheklistUsuario(ByVal entity As RespostasCheklistUsuario)
		Me.SendPropertyChanging
		entity.RespostasChecklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RespostasCheklistUsuario")>  _
Partial Public Class RespostasCheklistUsuario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdRespostaChecklist As Integer
	
	Private _IdPergunta As System.Nullable(Of Integer)
	
	Private _IdResposta As System.Nullable(Of Integer)
	
	Private _Descrição As String
	
	Private _IdProesso As System.Nullable(Of Integer)
	
	Private _ImagemRespostaCklist As EntitySet(Of ImagemRespostaCklist)
	
	Private _SoluçõesVistoria As EntitySet(Of SoluçõesVistoria)
	
	Private _PerguntasChecklist As EntityRef(Of PerguntasChecklist)
	
	Private _RespostasChecklist As EntityRef(Of RespostasChecklist)
	
	Private _Vistorias As EntityRef(Of Vistorias)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdRespostaChecklistChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRespostaChecklistChanged()
    End Sub
    Partial Private Sub OnIdPerguntaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdPerguntaChanged()
    End Sub
    Partial Private Sub OnIdRespostaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRespostaChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnIdProessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProessoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ImagemRespostaCklist = New EntitySet(Of ImagemRespostaCklist)(AddressOf Me.attach_ImagemRespostaCklist, AddressOf Me.detach_ImagemRespostaCklist)
		Me._SoluçõesVistoria = New EntitySet(Of SoluçõesVistoria)(AddressOf Me.attach_SoluçõesVistoria, AddressOf Me.detach_SoluçõesVistoria)
		Me._PerguntasChecklist = CType(Nothing, EntityRef(Of PerguntasChecklist))
		Me._RespostasChecklist = CType(Nothing, EntityRef(Of RespostasChecklist))
		Me._Vistorias = CType(Nothing, EntityRef(Of Vistorias))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRespostaChecklist", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdRespostaChecklist() As Integer
		Get
			Return Me._IdRespostaChecklist
		End Get
		Set
			If ((Me._IdRespostaChecklist = value)  _
						= false) Then
				Me.OnIdRespostaChecklistChanging(value)
				Me.SendPropertyChanging
				Me._IdRespostaChecklist = value
				Me.SendPropertyChanged("IdRespostaChecklist")
				Me.OnIdRespostaChecklistChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPergunta", DbType:="Int")>  _
	Public Property IdPergunta() As System.Nullable(Of Integer)
		Get
			Return Me._IdPergunta
		End Get
		Set
			If (Me._IdPergunta.Equals(value) = false) Then
				If Me._PerguntasChecklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdPerguntaChanging(value)
				Me.SendPropertyChanging
				Me._IdPergunta = value
				Me.SendPropertyChanged("IdPergunta")
				Me.OnIdPerguntaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdResposta", DbType:="Int")>  _
	Public Property IdResposta() As System.Nullable(Of Integer)
		Get
			Return Me._IdResposta
		End Get
		Set
			If (Me._IdResposta.Equals(value) = false) Then
				If Me._RespostasChecklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdRespostaChanging(value)
				Me.SendPropertyChanging
				Me._IdResposta = value
				Me.SendPropertyChanged("IdResposta")
				Me.OnIdRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProesso", DbType:="Int")>  _
	Public Property IdProesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProesso
		End Get
		Set
			If (Me._IdProesso.Equals(value) = false) Then
				If Me._Vistorias.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdProessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProesso = value
				Me.SendPropertyChanged("IdProesso")
				Me.OnIdProessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasCheklistUsuario_ImagemRespostaCklist", Storage:="_ImagemRespostaCklist", ThisKey:="IdRespostaChecklist", OtherKey:="IdRespostaUsuario")>  _
	Public Property ImagemRespostaCklist() As EntitySet(Of ImagemRespostaCklist)
		Get
			Return Me._ImagemRespostaCklist
		End Get
		Set
			Me._ImagemRespostaCklist.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasCheklistUsuario_SoluçõesVistoria", Storage:="_SoluçõesVistoria", ThisKey:="IdRespostaChecklist", OtherKey:="IdResposta")>  _
	Public Property SoluçõesVistoria() As EntitySet(Of SoluçõesVistoria)
		Get
			Return Me._SoluçõesVistoria
		End Get
		Set
			Me._SoluçõesVistoria.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="PerguntasChecklist_RespostasCheklistUsuario", Storage:="_PerguntasChecklist", ThisKey:="IdPergunta", OtherKey:="IdPerguntaChecklit", IsForeignKey:=true)>  _
	Public Property PerguntasChecklist() As PerguntasChecklist
		Get
			Return Me._PerguntasChecklist.Entity
		End Get
		Set
			Dim previousValue As PerguntasChecklist = Me._PerguntasChecklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._PerguntasChecklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._PerguntasChecklist.Entity = Nothing
					previousValue.RespostasCheklistUsuario.Remove(Me)
				End If
				Me._PerguntasChecklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RespostasCheklistUsuario.Add(Me)
					Me._IdPergunta = value.IdPerguntaChecklit
				Else
					Me._IdPergunta = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("PerguntasChecklist")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasChecklist_RespostasCheklistUsuario", Storage:="_RespostasChecklist", ThisKey:="IdResposta", OtherKey:="IdRespostaProcesso", IsForeignKey:=true)>  _
	Public Property RespostasChecklist() As RespostasChecklist
		Get
			Return Me._RespostasChecklist.Entity
		End Get
		Set
			Dim previousValue As RespostasChecklist = Me._RespostasChecklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._RespostasChecklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._RespostasChecklist.Entity = Nothing
					previousValue.RespostasCheklistUsuario.Remove(Me)
				End If
				Me._RespostasChecklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RespostasCheklistUsuario.Add(Me)
					Me._IdResposta = value.IdRespostaProcesso
				Else
					Me._IdResposta = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("RespostasChecklist")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_RespostasCheklistUsuario", Storage:="_Vistorias", ThisKey:="IdProesso", OtherKey:="IdVistoria", IsForeignKey:=true)>  _
	Public Property Vistorias() As Vistorias
		Get
			Return Me._Vistorias.Entity
		End Get
		Set
			Dim previousValue As Vistorias = Me._Vistorias.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vistorias.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vistorias.Entity = Nothing
					previousValue.RespostasCheklistUsuario.Remove(Me)
				End If
				Me._Vistorias.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.RespostasCheklistUsuario.Add(Me)
					Me._IdProesso = value.IdVistoria
				Else
					Me._IdProesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Vistorias")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ImagemRespostaCklist(ByVal entity As ImagemRespostaCklist)
		Me.SendPropertyChanging
		entity.RespostasCheklistUsuario = Me
	End Sub
	
	Private Sub detach_ImagemRespostaCklist(ByVal entity As ImagemRespostaCklist)
		Me.SendPropertyChanging
		entity.RespostasCheklistUsuario = Nothing
	End Sub
	
	Private Sub attach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.RespostasCheklistUsuario = Me
	End Sub
	
	Private Sub detach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.RespostasCheklistUsuario = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ImagemRespostaCklist")>  _
Partial Public Class ImagemRespostaCklist
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdImagemProcesso As Integer
	
	Private _IdRespostaUsuario As System.Nullable(Of Integer)
	
	Private _Imagem As System.Data.Linq.Binary
	
	Private _Titulo As String
	
	Private _IdProcesso As System.Nullable(Of Integer)
	
	Private _IdCategoria As Integer
	
	Private _IdSubCategoria As Integer
	
	Private _Miniatura As System.Data.Linq.Binary
	
	Private _MarcasImagens As EntitySet(Of MarcasImagens)
	
	Private _RespostasCheklistUsuario As EntityRef(Of RespostasCheklistUsuario)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdImagemProcessoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdImagemProcessoChanged()
    End Sub
    Partial Private Sub OnIdRespostaUsuarioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRespostaUsuarioChanged()
    End Sub
    Partial Private Sub OnImagemChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagemChanged()
    End Sub
    Partial Private Sub OnTituloChanging(value As String)
    End Sub
    Partial Private Sub OnTituloChanged()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    Partial Private Sub OnIdCategoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCategoriaChanged()
    End Sub
    Partial Private Sub OnIdSubCategoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSubCategoriaChanged()
    End Sub
    Partial Private Sub OnMiniaturaChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnMiniaturaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._MarcasImagens = New EntitySet(Of MarcasImagens)(AddressOf Me.attach_MarcasImagens, AddressOf Me.detach_MarcasImagens)
		Me._RespostasCheklistUsuario = CType(Nothing, EntityRef(Of RespostasCheklistUsuario))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdImagemProcesso", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdImagemProcesso() As Integer
		Get
			Return Me._IdImagemProcesso
		End Get
		Set
			If ((Me._IdImagemProcesso = value)  _
						= false) Then
				Me.OnIdImagemProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdImagemProcesso = value
				Me.SendPropertyChanged("IdImagemProcesso")
				Me.OnIdImagemProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRespostaUsuario", DbType:="Int")>  _
	Public Property IdRespostaUsuario() As System.Nullable(Of Integer)
		Get
			Return Me._IdRespostaUsuario
		End Get
		Set
			If (Me._IdRespostaUsuario.Equals(value) = false) Then
				If Me._RespostasCheklistUsuario.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdRespostaUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._IdRespostaUsuario = value
				Me.SendPropertyChanged("IdRespostaUsuario")
				Me.OnIdRespostaUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imagem", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Imagem() As System.Data.Linq.Binary
		Get
			Return Me._Imagem
		End Get
		Set
			If (Object.Equals(Me._Imagem, value) = false) Then
				Me.OnImagemChanging(value)
				Me.SendPropertyChanging
				Me._Imagem = value
				Me.SendPropertyChanged("Imagem")
				Me.OnImagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Titulo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Titulo() As String
		Get
			Return Me._Titulo
		End Get
		Set
			If (String.Equals(Me._Titulo, value) = false) Then
				Me.OnTituloChanging(value)
				Me.SendPropertyChanging
				Me._Titulo = value
				Me.SendPropertyChanged("Titulo")
				Me.OnTituloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", DbType:="Int")>  _
	Public Property IdProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProcesso
		End Get
		Set
			If (Me._IdProcesso.Equals(value) = false) Then
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int")>  _
	Public Property IdCategoria() As Integer
		Get
			Return Me._IdCategoria
		End Get
		Set
			If ((Me._IdCategoria = value)  _
						= false) Then
				Me.OnIdCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdCategoria = value
				Me.SendPropertyChanged("IdCategoria")
				Me.OnIdCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSubCategoria", DbType:="Int")>  _
	Public Property IdSubCategoria() As Integer
		Get
			Return Me._IdSubCategoria
		End Get
		Set
			If ((Me._IdSubCategoria = value)  _
						= false) Then
				Me.OnIdSubCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdSubCategoria = value
				Me.SendPropertyChanged("IdSubCategoria")
				Me.OnIdSubCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Miniatura", DbType:="Image", CanBeNull:=false)>  _
	Public Property Miniatura() As System.Data.Linq.Binary
		Get
			Return Me._Miniatura
		End Get
		Set
			If (Object.Equals(Me._Miniatura, value) = false) Then
				Me.OnMiniaturaChanging(value)
				Me.SendPropertyChanging
				Me._Miniatura = value
				Me.SendPropertyChanged("Miniatura")
				Me.OnMiniaturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ImagemRespostaCklist_MarcasImagens", Storage:="_MarcasImagens", ThisKey:="IdImagemProcesso", OtherKey:="IdImagem")>  _
	Public Property MarcasImagens() As EntitySet(Of MarcasImagens)
		Get
			Return Me._MarcasImagens
		End Get
		Set
			Me._MarcasImagens.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasCheklistUsuario_ImagemRespostaCklist", Storage:="_RespostasCheklistUsuario", ThisKey:="IdRespostaUsuario", OtherKey:="IdRespostaChecklist", IsForeignKey:=true)>  _
	Public Property RespostasCheklistUsuario() As RespostasCheklistUsuario
		Get
			Return Me._RespostasCheklistUsuario.Entity
		End Get
		Set
			Dim previousValue As RespostasCheklistUsuario = Me._RespostasCheklistUsuario.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._RespostasCheklistUsuario.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._RespostasCheklistUsuario.Entity = Nothing
					previousValue.ImagemRespostaCklist.Remove(Me)
				End If
				Me._RespostasCheklistUsuario.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ImagemRespostaCklist.Add(Me)
					Me._IdRespostaUsuario = value.IdRespostaChecklist
				Else
					Me._IdRespostaUsuario = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("RespostasCheklistUsuario")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_MarcasImagens(ByVal entity As MarcasImagens)
		Me.SendPropertyChanging
		entity.ImagemRespostaCklist = Me
	End Sub
	
	Private Sub detach_MarcasImagens(ByVal entity As MarcasImagens)
		Me.SendPropertyChanging
		entity.ImagemRespostaCklist = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EntradaVeiculo")>  _
Partial Public Class EntradaVeiculo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEntradaVeiculo As Integer
	
	Private _IdVeiculo As System.Nullable(Of Integer)
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _Placa As String
	
	Private _DataEntrada As System.Nullable(Of Date)
	
	Private _HoraEntrada As System.Nullable(Of System.TimeSpan)
	
	Private _IdTecnicoEntrada As System.Nullable(Of Integer)
	
	Private _TipoEntrada As System.Nullable(Of Integer)
	
	Private _IdPrestador As System.Nullable(Of Integer)
	
	Private _IdProcesso As System.Nullable(Of Integer)
	
	Private _Veiculos As EntityRef(Of Veiculos)
	
	Private _Vistorias As EntityRef(Of Vistorias)
	
	Private _Prestadores_Entrega As EntityRef(Of Prestadores_Entrega)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEntradaVeiculoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEntradaVeiculoChanged()
    End Sub
    Partial Private Sub OnIdVeiculoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdVeiculoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnPlacaChanging(value As String)
    End Sub
    Partial Private Sub OnPlacaChanged()
    End Sub
    Partial Private Sub OnDataEntradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataEntradaChanged()
    End Sub
    Partial Private Sub OnHoraEntradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraEntradaChanged()
    End Sub
    Partial Private Sub OnIdTecnicoEntradaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdTecnicoEntradaChanged()
    End Sub
    Partial Private Sub OnTipoEntradaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTipoEntradaChanged()
    End Sub
    Partial Private Sub OnIdPrestadorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdPrestadorChanged()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Veiculos = CType(Nothing, EntityRef(Of Veiculos))
		Me._Vistorias = CType(Nothing, EntityRef(Of Vistorias))
		Me._Prestadores_Entrega = CType(Nothing, EntityRef(Of Prestadores_Entrega))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEntradaVeiculo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEntradaVeiculo() As Integer
		Get
			Return Me._IdEntradaVeiculo
		End Get
		Set
			If ((Me._IdEntradaVeiculo = value)  _
						= false) Then
				Me.OnIdEntradaVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdEntradaVeiculo = value
				Me.SendPropertyChanged("IdEntradaVeiculo")
				Me.OnIdEntradaVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVeiculo", DbType:="Int")>  _
	Public Property IdVeiculo() As System.Nullable(Of Integer)
		Get
			Return Me._IdVeiculo
		End Get
		Set
			If (Me._IdVeiculo.Equals(value) = false) Then
				If Me._Veiculos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVeiculo = value
				Me.SendPropertyChanged("IdVeiculo")
				Me.OnIdVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Placa", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Placa() As String
		Get
			Return Me._Placa
		End Get
		Set
			If (String.Equals(Me._Placa, value) = false) Then
				Me.OnPlacaChanging(value)
				Me.SendPropertyChanging
				Me._Placa = value
				Me.SendPropertyChanged("Placa")
				Me.OnPlacaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataEntrada", DbType:="Date")>  _
	Public Property DataEntrada() As System.Nullable(Of Date)
		Get
			Return Me._DataEntrada
		End Get
		Set
			If (Me._DataEntrada.Equals(value) = false) Then
				Me.OnDataEntradaChanging(value)
				Me.SendPropertyChanging
				Me._DataEntrada = value
				Me.SendPropertyChanged("DataEntrada")
				Me.OnDataEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraEntrada", DbType:="Time")>  _
	Public Property HoraEntrada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraEntrada
		End Get
		Set
			If (Me._HoraEntrada.Equals(value) = false) Then
				Me.OnHoraEntradaChanging(value)
				Me.SendPropertyChanging
				Me._HoraEntrada = value
				Me.SendPropertyChanged("HoraEntrada")
				Me.OnHoraEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdTecnicoEntrada", DbType:="Int")>  _
	Public Property IdTecnicoEntrada() As System.Nullable(Of Integer)
		Get
			Return Me._IdTecnicoEntrada
		End Get
		Set
			If (Me._IdTecnicoEntrada.Equals(value) = false) Then
				Me.OnIdTecnicoEntradaChanging(value)
				Me.SendPropertyChanging
				Me._IdTecnicoEntrada = value
				Me.SendPropertyChanged("IdTecnicoEntrada")
				Me.OnIdTecnicoEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoEntrada", DbType:="Int")>  _
	Public Property TipoEntrada() As System.Nullable(Of Integer)
		Get
			Return Me._TipoEntrada
		End Get
		Set
			If (Me._TipoEntrada.Equals(value) = false) Then
				Me.OnTipoEntradaChanging(value)
				Me.SendPropertyChanging
				Me._TipoEntrada = value
				Me.SendPropertyChanged("TipoEntrada")
				Me.OnTipoEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestador", DbType:="Int")>  _
	Public Property IdPrestador() As System.Nullable(Of Integer)
		Get
			Return Me._IdPrestador
		End Get
		Set
			If (Me._IdPrestador.Equals(value) = false) Then
				If Me._Prestadores_Entrega.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdPrestadorChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestador = value
				Me.SendPropertyChanged("IdPrestador")
				Me.OnIdPrestadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", DbType:="Int")>  _
	Public Property IdProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProcesso
		End Get
		Set
			If (Me._IdProcesso.Equals(value) = false) Then
				If Me._Vistorias.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Veiculos_EntradaVeiculo", Storage:="_Veiculos", ThisKey:="IdVeiculo", OtherKey:="IdVeiculo", IsForeignKey:=true)>  _
	Public Property Veiculos() As Veiculos
		Get
			Return Me._Veiculos.Entity
		End Get
		Set
			Dim previousValue As Veiculos = Me._Veiculos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Veiculos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Veiculos.Entity = Nothing
					previousValue.EntradaVeiculo.Remove(Me)
				End If
				Me._Veiculos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EntradaVeiculo.Add(Me)
					Me._IdVeiculo = value.IdVeiculo
				Else
					Me._IdVeiculo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Veiculos")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_EntradaVeiculo", Storage:="_Vistorias", ThisKey:="IdProcesso", OtherKey:="IdVistoria", IsForeignKey:=true)>  _
	Public Property Vistorias() As Vistorias
		Get
			Return Me._Vistorias.Entity
		End Get
		Set
			Dim previousValue As Vistorias = Me._Vistorias.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vistorias.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vistorias.Entity = Nothing
					previousValue.EntradaVeiculo.Remove(Me)
				End If
				Me._Vistorias.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EntradaVeiculo.Add(Me)
					Me._IdProcesso = value.IdVistoria
				Else
					Me._IdProcesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Vistorias")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Prestadores_Entrega_EntradaVeiculo", Storage:="_Prestadores_Entrega", ThisKey:="IdPrestador", OtherKey:="IdPrestador", IsForeignKey:=true)>  _
	Public Property Prestadores_Entrega() As Prestadores_Entrega
		Get
			Return Me._Prestadores_Entrega.Entity
		End Get
		Set
			Dim previousValue As Prestadores_Entrega = Me._Prestadores_Entrega.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Prestadores_Entrega.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Prestadores_Entrega.Entity = Nothing
					previousValue.EntradaVeiculo.Remove(Me)
				End If
				Me._Prestadores_Entrega.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.EntradaVeiculo.Add(Me)
					Me._IdPrestador = value.IdPrestador
				Else
					Me._IdPrestador = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Prestadores_Entrega")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Prestadores_Entrega")>  _
Partial Public Class Prestadores_Entrega
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdPrestador As Integer
	
	Private _NomeCompleto As String
	
	Private _Placa As String
	
	Private _TipoEntregador As String
	
	Private _RG As String
	
	Private _IdPrestJv As System.Nullable(Of Integer)
	
	Private _Email As String
	
	Private _CelularN As String
	
	Private _EntradaVeiculo As EntitySet(Of EntradaVeiculo)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdPrestadorChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPrestadorChanged()
    End Sub
    Partial Private Sub OnNomeCompletoChanging(value As String)
    End Sub
    Partial Private Sub OnNomeCompletoChanged()
    End Sub
    Partial Private Sub OnPlacaChanging(value As String)
    End Sub
    Partial Private Sub OnPlacaChanged()
    End Sub
    Partial Private Sub OnTipoEntregadorChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEntregadorChanged()
    End Sub
    Partial Private Sub OnRGChanging(value As String)
    End Sub
    Partial Private Sub OnRGChanged()
    End Sub
    Partial Private Sub OnIdPrestJvChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdPrestJvChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    Partial Private Sub OnCelularNChanging(value As String)
    End Sub
    Partial Private Sub OnCelularNChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._EntradaVeiculo = New EntitySet(Of EntradaVeiculo)(AddressOf Me.attach_EntradaVeiculo, AddressOf Me.detach_EntradaVeiculo)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestador", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdPrestador() As Integer
		Get
			Return Me._IdPrestador
		End Get
		Set
			If ((Me._IdPrestador = value)  _
						= false) Then
				Me.OnIdPrestadorChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestador = value
				Me.SendPropertyChanged("IdPrestador")
				Me.OnIdPrestadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeCompleto", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeCompleto() As String
		Get
			Return Me._NomeCompleto
		End Get
		Set
			If (String.Equals(Me._NomeCompleto, value) = false) Then
				Me.OnNomeCompletoChanging(value)
				Me.SendPropertyChanging
				Me._NomeCompleto = value
				Me.SendPropertyChanged("NomeCompleto")
				Me.OnNomeCompletoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Placa", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Placa() As String
		Get
			Return Me._Placa
		End Get
		Set
			If (String.Equals(Me._Placa, value) = false) Then
				Me.OnPlacaChanging(value)
				Me.SendPropertyChanging
				Me._Placa = value
				Me.SendPropertyChanged("Placa")
				Me.OnPlacaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoEntregador", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoEntregador() As String
		Get
			Return Me._TipoEntregador
		End Get
		Set
			If (String.Equals(Me._TipoEntregador, value) = false) Then
				Me.OnTipoEntregadorChanging(value)
				Me.SendPropertyChanging
				Me._TipoEntregador = value
				Me.SendPropertyChanged("TipoEntregador")
				Me.OnTipoEntregadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RG", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RG() As String
		Get
			Return Me._RG
		End Get
		Set
			If (String.Equals(Me._RG, value) = false) Then
				Me.OnRGChanging(value)
				Me.SendPropertyChanging
				Me._RG = value
				Me.SendPropertyChanged("RG")
				Me.OnRGChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestJv", DbType:="Int")>  _
	Public Property IdPrestJv() As System.Nullable(Of Integer)
		Get
			Return Me._IdPrestJv
		End Get
		Set
			If (Me._IdPrestJv.Equals(value) = false) Then
				Me.OnIdPrestJvChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestJv = value
				Me.SendPropertyChanged("IdPrestJv")
				Me.OnIdPrestJvChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CelularN", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CelularN() As String
		Get
			Return Me._CelularN
		End Get
		Set
			If (String.Equals(Me._CelularN, value) = false) Then
				Me.OnCelularNChanging(value)
				Me.SendPropertyChanging
				Me._CelularN = value
				Me.SendPropertyChanged("CelularN")
				Me.OnCelularNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Prestadores_Entrega_EntradaVeiculo", Storage:="_EntradaVeiculo", ThisKey:="IdPrestador", OtherKey:="IdPrestador")>  _
	Public Property EntradaVeiculo() As EntitySet(Of EntradaVeiculo)
		Get
			Return Me._EntradaVeiculo
		End Get
		Set
			Me._EntradaVeiculo.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Prestadores_Entrega = Me
	End Sub
	
	Private Sub detach_EntradaVeiculo(ByVal entity As EntradaVeiculo)
		Me.SendPropertyChanging
		entity.Prestadores_Entrega = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MarcasImagens")>  _
Partial Public Class MarcasImagens
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdMarcaImagem As Integer
	
	Private _IdImagem As System.Nullable(Of Integer)
	
	Private _Descrição As String
	
	Private _X As System.Nullable(Of Decimal)
	
	Private _Y As System.Nullable(Of Decimal)
	
	Private _IdProcesso As System.Nullable(Of Integer)
	
	Private _Cor As String
	
	Private _SoluçõesVistoria As EntitySet(Of SoluçõesVistoria)
	
	Private _ImagemRespostaCklist As EntityRef(Of ImagemRespostaCklist)
	
	Private _Vistorias As EntityRef(Of Vistorias)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdMarcaImagemChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdMarcaImagemChanged()
    End Sub
    Partial Private Sub OnIdImagemChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdImagemChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnXChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnXChanged()
    End Sub
    Partial Private Sub OnYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnYChanged()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    Partial Private Sub OnCorChanging(value As String)
    End Sub
    Partial Private Sub OnCorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._SoluçõesVistoria = New EntitySet(Of SoluçõesVistoria)(AddressOf Me.attach_SoluçõesVistoria, AddressOf Me.detach_SoluçõesVistoria)
		Me._ImagemRespostaCklist = CType(Nothing, EntityRef(Of ImagemRespostaCklist))
		Me._Vistorias = CType(Nothing, EntityRef(Of Vistorias))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMarcaImagem", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdMarcaImagem() As Integer
		Get
			Return Me._IdMarcaImagem
		End Get
		Set
			If ((Me._IdMarcaImagem = value)  _
						= false) Then
				Me.OnIdMarcaImagemChanging(value)
				Me.SendPropertyChanging
				Me._IdMarcaImagem = value
				Me.SendPropertyChanged("IdMarcaImagem")
				Me.OnIdMarcaImagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdImagem", DbType:="Int")>  _
	Public Property IdImagem() As System.Nullable(Of Integer)
		Get
			Return Me._IdImagem
		End Get
		Set
			If (Me._IdImagem.Equals(value) = false) Then
				If Me._ImagemRespostaCklist.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdImagemChanging(value)
				Me.SendPropertyChanging
				Me._IdImagem = value
				Me.SendPropertyChanged("IdImagem")
				Me.OnIdImagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_X", DbType:="Money")>  _
	Public Property X() As System.Nullable(Of Decimal)
		Get
			Return Me._X
		End Get
		Set
			If (Me._X.Equals(value) = false) Then
				Me.OnXChanging(value)
				Me.SendPropertyChanging
				Me._X = value
				Me.SendPropertyChanged("X")
				Me.OnXChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Y", DbType:="Money")>  _
	Public Property Y() As System.Nullable(Of Decimal)
		Get
			Return Me._Y
		End Get
		Set
			If (Me._Y.Equals(value) = false) Then
				Me.OnYChanging(value)
				Me.SendPropertyChanging
				Me._Y = value
				Me.SendPropertyChanged("Y")
				Me.OnYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", DbType:="Int")>  _
	Public Property IdProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProcesso
		End Get
		Set
			If (Me._IdProcesso.Equals(value) = false) Then
				If Me._Vistorias.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="cor", Storage:="_Cor", DbType:="ntext")>  _
	Public Property Cor() As String
		Get
			Return Me._Cor
		End Get
		Set
			If (String.Equals(Me._Cor, value) = false) Then
				Me.OnCorChanging(value)
				Me.SendPropertyChanging
				Me._Cor = value
				Me.SendPropertyChanged("Cor")
				Me.OnCorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MarcasImagens_SoluçõesVistoria", Storage:="_SoluçõesVistoria", ThisKey:="IdMarcaImagem", OtherKey:="IdMarca")>  _
	Public Property SoluçõesVistoria() As EntitySet(Of SoluçõesVistoria)
		Get
			Return Me._SoluçõesVistoria
		End Get
		Set
			Me._SoluçõesVistoria.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ImagemRespostaCklist_MarcasImagens", Storage:="_ImagemRespostaCklist", ThisKey:="IdImagem", OtherKey:="IdImagemProcesso", IsForeignKey:=true)>  _
	Public Property ImagemRespostaCklist() As ImagemRespostaCklist
		Get
			Return Me._ImagemRespostaCklist.Entity
		End Get
		Set
			Dim previousValue As ImagemRespostaCklist = Me._ImagemRespostaCklist.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._ImagemRespostaCklist.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._ImagemRespostaCklist.Entity = Nothing
					previousValue.MarcasImagens.Remove(Me)
				End If
				Me._ImagemRespostaCklist.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.MarcasImagens.Add(Me)
					Me._IdImagem = value.IdImagemProcesso
				Else
					Me._IdImagem = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("ImagemRespostaCklist")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_MarcasImagens", Storage:="_Vistorias", ThisKey:="IdProcesso", OtherKey:="IdVistoria", IsForeignKey:=true)>  _
	Public Property Vistorias() As Vistorias
		Get
			Return Me._Vistorias.Entity
		End Get
		Set
			Dim previousValue As Vistorias = Me._Vistorias.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vistorias.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vistorias.Entity = Nothing
					previousValue.MarcasImagens.Remove(Me)
				End If
				Me._Vistorias.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.MarcasImagens.Add(Me)
					Me._IdProcesso = value.IdVistoria
				Else
					Me._IdProcesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Vistorias")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.MarcasImagens = Me
	End Sub
	
	Private Sub detach_SoluçõesVistoria(ByVal entity As SoluçõesVistoria)
		Me.SendPropertyChanging
		entity.MarcasImagens = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SolicitacaoCadastroPeca")>  _
Partial Public Class SolicitacaoCadastroPeca
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSolicitaçãoCadastro As Integer
	
	Private _PartNumber As String
	
	Private _Descrição As String
	
	Private _IdSolicitante As System.Nullable(Of Integer)
	
	Private _DataSol As System.Nullable(Of Date)
	
	Private _HoraSol As System.Nullable(Of System.TimeSpan)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _IdRespCadastro As System.Nullable(Of Integer)
	
	Private _DataCad As System.Nullable(Of Date)
	
	Private _HoraCad As System.Nullable(Of System.TimeSpan)
	
	Private _IdCodCad As System.Nullable(Of Integer)
	
	Private _IdCategoria As Integer
	
	Private _IdSubCategoria As Integer
	
	Private _Markup As System.Nullable(Of Decimal)
	
	Private _IdModelo As Integer
	
	Private _IdVersaoMod As Integer
	
	Private _IdCodExt As Integer
	
	Private _Fabricante As String
	
	Private _ItensSoluçãoN As EntitySet(Of ItensSoluçãoN)
	
	Private _AssociaçãoPeçaModelo As EntitySet(Of AssociaçãoPeçaModelo)
	
	Private _VinculoProdutoModelo As EntitySet(Of VinculoProdutoModelo)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSolicitacaoCadastroChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSolicitacaoCadastroChanged()
    End Sub
    Partial Private Sub OnPartNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPartNumberChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnIdSolicitanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitanteChanged()
    End Sub
    Partial Private Sub OnDataSolChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSolChanged()
    End Sub
    Partial Private Sub OnHoraSolChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraSolChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIdRespCadastroChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRespCadastroChanged()
    End Sub
    Partial Private Sub OnDataCadChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataCadChanged()
    End Sub
    Partial Private Sub OnHoraCadChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraCadChanged()
    End Sub
    Partial Private Sub OnIdCodCadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCodCadChanged()
    End Sub
    Partial Private Sub OnIdCategoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCategoriaChanged()
    End Sub
    Partial Private Sub OnIdSubCategoriaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSubCategoriaChanged()
    End Sub
    Partial Private Sub OnMarkupChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMarkupChanged()
    End Sub
    Partial Private Sub OnIdModeloChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdModeloChanged()
    End Sub
    Partial Private Sub OnIdVersaoModChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVersaoModChanged()
    End Sub
    Partial Private Sub OnIdCodExtChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCodExtChanged()
    End Sub
    Partial Private Sub OnFabricanteChanging(value As String)
    End Sub
    Partial Private Sub OnFabricanteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ItensSoluçãoN = New EntitySet(Of ItensSoluçãoN)(AddressOf Me.attach_ItensSoluçãoN, AddressOf Me.detach_ItensSoluçãoN)
		Me._AssociaçãoPeçaModelo = New EntitySet(Of AssociaçãoPeçaModelo)(AddressOf Me.attach_AssociaçãoPeçaModelo, AddressOf Me.detach_AssociaçãoPeçaModelo)
		Me._VinculoProdutoModelo = New EntitySet(Of VinculoProdutoModelo)(AddressOf Me.attach_VinculoProdutoModelo, AddressOf Me.detach_VinculoProdutoModelo)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitaçãoCadastro", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdSolicitacaoCadastro() As Integer
		Get
			Return Me._IdSolicitaçãoCadastro
		End Get
		Set
			If ((Me._IdSolicitaçãoCadastro = value)  _
						= false) Then
				Me.OnIdSolicitacaoCadastroChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitaçãoCadastro = value
				Me.SendPropertyChanged("IdSolicitacaoCadastro")
				Me.OnIdSolicitacaoCadastroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PartNumber", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PartNumber() As String
		Get
			Return Me._PartNumber
		End Get
		Set
			If (String.Equals(Me._PartNumber, value) = false) Then
				Me.OnPartNumberChanging(value)
				Me.SendPropertyChanging
				Me._PartNumber = value
				Me.SendPropertyChanged("PartNumber")
				Me.OnPartNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrição", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descrição
		End Get
		Set
			If (String.Equals(Me._Descrição, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descrição = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitante", DbType:="Int")>  _
	Public Property IdSolicitante() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitante
		End Get
		Set
			If (Me._IdSolicitante.Equals(value) = false) Then
				Me.OnIdSolicitanteChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitante = value
				Me.SendPropertyChanged("IdSolicitante")
				Me.OnIdSolicitanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSol", DbType:="Date")>  _
	Public Property DataSol() As System.Nullable(Of Date)
		Get
			Return Me._DataSol
		End Get
		Set
			If (Me._DataSol.Equals(value) = false) Then
				Me.OnDataSolChanging(value)
				Me.SendPropertyChanging
				Me._DataSol = value
				Me.SendPropertyChanged("DataSol")
				Me.OnDataSolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraSol", DbType:="Time")>  _
	Public Property HoraSol() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraSol
		End Get
		Set
			If (Me._HoraSol.Equals(value) = false) Then
				Me.OnHoraSolChanging(value)
				Me.SendPropertyChanging
				Me._HoraSol = value
				Me.SendPropertyChanged("HoraSol")
				Me.OnHoraSolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRespCadastro", DbType:="Int")>  _
	Public Property IdRespCadastro() As System.Nullable(Of Integer)
		Get
			Return Me._IdRespCadastro
		End Get
		Set
			If (Me._IdRespCadastro.Equals(value) = false) Then
				Me.OnIdRespCadastroChanging(value)
				Me.SendPropertyChanging
				Me._IdRespCadastro = value
				Me.SendPropertyChanged("IdRespCadastro")
				Me.OnIdRespCadastroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataCad", DbType:="Date")>  _
	Public Property DataCad() As System.Nullable(Of Date)
		Get
			Return Me._DataCad
		End Get
		Set
			If (Me._DataCad.Equals(value) = false) Then
				Me.OnDataCadChanging(value)
				Me.SendPropertyChanging
				Me._DataCad = value
				Me.SendPropertyChanged("DataCad")
				Me.OnDataCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraCad", DbType:="Time")>  _
	Public Property HoraCad() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraCad
		End Get
		Set
			If (Me._HoraCad.Equals(value) = false) Then
				Me.OnHoraCadChanging(value)
				Me.SendPropertyChanging
				Me._HoraCad = value
				Me.SendPropertyChanged("HoraCad")
				Me.OnHoraCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCodCad", DbType:="Int")>  _
	Public Property IdCodCad() As System.Nullable(Of Integer)
		Get
			Return Me._IdCodCad
		End Get
		Set
			If (Me._IdCodCad.Equals(value) = false) Then
				Me.OnIdCodCadChanging(value)
				Me.SendPropertyChanging
				Me._IdCodCad = value
				Me.SendPropertyChanged("IdCodCad")
				Me.OnIdCodCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="int")>  _
	Public Property IdCategoria() As Integer
		Get
			Return Me._IdCategoria
		End Get
		Set
			If ((Me._IdCategoria = value)  _
						= false) Then
				Me.OnIdCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdCategoria = value
				Me.SendPropertyChanged("IdCategoria")
				Me.OnIdCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSubCategoria", DbType:="int")>  _
	Public Property IdSubCategoria() As Integer
		Get
			Return Me._IdSubCategoria
		End Get
		Set
			If ((Me._IdSubCategoria = value)  _
						= false) Then
				Me.OnIdSubCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdSubCategoria = value
				Me.SendPropertyChanged("IdSubCategoria")
				Me.OnIdSubCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Markup", DbType:="money")>  _
	Public Property Markup() As System.Nullable(Of Decimal)
		Get
			Return Me._Markup
		End Get
		Set
			If (Me._Markup.Equals(value) = false) Then
				Me.OnMarkupChanging(value)
				Me.SendPropertyChanging
				Me._Markup = value
				Me.SendPropertyChanged("Markup")
				Me.OnMarkupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModelo", DbType:="Int")>  _
	Public Property IdModelo() As Integer
		Get
			Return Me._IdModelo
		End Get
		Set
			If ((Me._IdModelo = value)  _
						= false) Then
				Me.OnIdModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdModelo = value
				Me.SendPropertyChanged("IdModelo")
				Me.OnIdModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVersaoMod", DbType:="Int")>  _
	Public Property IdVersaoMod() As Integer
		Get
			Return Me._IdVersaoMod
		End Get
		Set
			If ((Me._IdVersaoMod = value)  _
						= false) Then
				Me.OnIdVersaoModChanging(value)
				Me.SendPropertyChanging
				Me._IdVersaoMod = value
				Me.SendPropertyChanged("IdVersaoMod")
				Me.OnIdVersaoModChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCodExt", DbType:="Int")>  _
	Public Property IdCodExt() As Integer
		Get
			Return Me._IdCodExt
		End Get
		Set
			If ((Me._IdCodExt = value)  _
						= false) Then
				Me.OnIdCodExtChanging(value)
				Me.SendPropertyChanging
				Me._IdCodExt = value
				Me.SendPropertyChanged("IdCodExt")
				Me.OnIdCodExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fabricante", DbType:="Ntext", CanBeNull:=false)>  _
	Public Property Fabricante() As String
		Get
			Return Me._Fabricante
		End Get
		Set
			If (String.Equals(Me._Fabricante, value) = false) Then
				Me.OnFabricanteChanging(value)
				Me.SendPropertyChanging
				Me._Fabricante = value
				Me.SendPropertyChanged("Fabricante")
				Me.OnFabricanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_ItensSoluçãoN", Storage:="_ItensSoluçãoN", ThisKey:="IdSolicitacaoCadastro", OtherKey:="IdSolicitacao")>  _
	Public Property ItensSoluçãoN() As EntitySet(Of ItensSoluçãoN)
		Get
			Return Me._ItensSoluçãoN
		End Get
		Set
			Me._ItensSoluçãoN.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_AssociaçãoPeçaModelo", Storage:="_AssociaçãoPeçaModelo", ThisKey:="IdSolicitacaoCadastro", OtherKey:="IdSolicitaçãoCad")>  _
	Public Property AssociaçãoPeçaModelo() As EntitySet(Of AssociaçãoPeçaModelo)
		Get
			Return Me._AssociaçãoPeçaModelo
		End Get
		Set
			Me._AssociaçãoPeçaModelo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_VinculoProdutoModelo", Storage:="_VinculoProdutoModelo", ThisKey:="IdSolicitacaoCadastro", OtherKey:="IdSolicitacaoCad")>  _
	Public Property VinculoProdutoModelo() As EntitySet(Of VinculoProdutoModelo)
		Get
			Return Me._VinculoProdutoModelo
		End Get
		Set
			Me._VinculoProdutoModelo.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ItensSoluçãoN(ByVal entity As ItensSoluçãoN)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Me
	End Sub
	
	Private Sub detach_ItensSoluçãoN(ByVal entity As ItensSoluçãoN)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Nothing
	End Sub
	
	Private Sub attach_AssociaçãoPeçaModelo(ByVal entity As AssociaçãoPeçaModelo)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Me
	End Sub
	
	Private Sub detach_AssociaçãoPeçaModelo(ByVal entity As AssociaçãoPeçaModelo)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Nothing
	End Sub
	
	Private Sub attach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Me
	End Sub
	
	Private Sub detach_VinculoProdutoModelo(ByVal entity As VinculoProdutoModelo)
		Me.SendPropertyChanging
		entity.SolicitacaoCadastroPeca = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SolucoesVistoria")>  _
Partial Public Class SoluçõesVistoria
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSoluções As Integer
	
	Private _IdResposta As System.Nullable(Of Integer)
	
	Private _Idtecnico As System.Nullable(Of Integer)
	
	Private _DataInicio As System.Nullable(Of Date)
	
	Private _HoraIniio As System.Nullable(Of System.TimeSpan)
	
	Private _DataFim As System.Nullable(Of Date)
	
	Private _HoraFim As System.Nullable(Of System.TimeSpan)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _IdProcesso As System.Nullable(Of Integer)
	
	Private _IdMarca As System.Nullable(Of Integer)
	
	Private _ItensSoluçãoN As EntitySet(Of ItensSoluçãoN)
	
	Private _ReparoVeiculo As EntitySet(Of ReparoVeiculo)
	
	Private _Vistorias As EntityRef(Of Vistorias)
	
	Private _RespostasCheklistUsuario As EntityRef(Of RespostasCheklistUsuario)
	
	Private _MarcasImagens As EntityRef(Of MarcasImagens)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSolucoesChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSolucoesChanged()
    End Sub
    Partial Private Sub OnIdRespostaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRespostaChanged()
    End Sub
    Partial Private Sub OnIdtecnicoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdtecnicoChanged()
    End Sub
    Partial Private Sub OnDataInicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataInicioChanged()
    End Sub
    Partial Private Sub OnHoraIniioChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraIniioChanged()
    End Sub
    Partial Private Sub OnDataFimChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataFimChanged()
    End Sub
    Partial Private Sub OnHoraFimChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraFimChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnIdProcessoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProcessoChanged()
    End Sub
    Partial Private Sub OnIdMarcaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdMarcaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ItensSoluçãoN = New EntitySet(Of ItensSoluçãoN)(AddressOf Me.attach_ItensSoluçãoN, AddressOf Me.detach_ItensSoluçãoN)
		Me._ReparoVeiculo = New EntitySet(Of ReparoVeiculo)(AddressOf Me.attach_ReparoVeiculo, AddressOf Me.detach_ReparoVeiculo)
		Me._Vistorias = CType(Nothing, EntityRef(Of Vistorias))
		Me._RespostasCheklistUsuario = CType(Nothing, EntityRef(Of RespostasCheklistUsuario))
		Me._MarcasImagens = CType(Nothing, EntityRef(Of MarcasImagens))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSoluções", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdSolucoes() As Integer
		Get
			Return Me._IdSoluções
		End Get
		Set
			If ((Me._IdSoluções = value)  _
						= false) Then
				Me.OnIdSolucoesChanging(value)
				Me.SendPropertyChanging
				Me._IdSoluções = value
				Me.SendPropertyChanged("IdSolucoes")
				Me.OnIdSolucoesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdResposta", DbType:="Int")>  _
	Public Property IdResposta() As System.Nullable(Of Integer)
		Get
			Return Me._IdResposta
		End Get
		Set
			If (Me._IdResposta.Equals(value) = false) Then
				If Me._RespostasCheklistUsuario.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdRespostaChanging(value)
				Me.SendPropertyChanging
				Me._IdResposta = value
				Me.SendPropertyChanged("IdResposta")
				Me.OnIdRespostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Idtecnico", DbType:="Int")>  _
	Public Property Idtecnico() As System.Nullable(Of Integer)
		Get
			Return Me._Idtecnico
		End Get
		Set
			If (Me._Idtecnico.Equals(value) = false) Then
				Me.OnIdtecnicoChanging(value)
				Me.SendPropertyChanging
				Me._Idtecnico = value
				Me.SendPropertyChanged("Idtecnico")
				Me.OnIdtecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInicio", DbType:="Date")>  _
	Public Property DataInicio() As System.Nullable(Of Date)
		Get
			Return Me._DataInicio
		End Get
		Set
			If (Me._DataInicio.Equals(value) = false) Then
				Me.OnDataInicioChanging(value)
				Me.SendPropertyChanging
				Me._DataInicio = value
				Me.SendPropertyChanged("DataInicio")
				Me.OnDataInicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraIniio", DbType:="Time")>  _
	Public Property HoraIniio() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraIniio
		End Get
		Set
			If (Me._HoraIniio.Equals(value) = false) Then
				Me.OnHoraIniioChanging(value)
				Me.SendPropertyChanging
				Me._HoraIniio = value
				Me.SendPropertyChanged("HoraIniio")
				Me.OnHoraIniioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFim", DbType:="Date")>  _
	Public Property DataFim() As System.Nullable(Of Date)
		Get
			Return Me._DataFim
		End Get
		Set
			If (Me._DataFim.Equals(value) = false) Then
				Me.OnDataFimChanging(value)
				Me.SendPropertyChanging
				Me._DataFim = value
				Me.SendPropertyChanged("DataFim")
				Me.OnDataFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraFim", DbType:="Time")>  _
	Public Property HoraFim() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraFim
		End Get
		Set
			If (Me._HoraFim.Equals(value) = false) Then
				Me.OnHoraFimChanging(value)
				Me.SendPropertyChanging
				Me._HoraFim = value
				Me.SendPropertyChanged("HoraFim")
				Me.OnHoraFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProcesso", DbType:="Int")>  _
	Public Property IdProcesso() As System.Nullable(Of Integer)
		Get
			Return Me._IdProcesso
		End Get
		Set
			If (Me._IdProcesso.Equals(value) = false) Then
				If Me._Vistorias.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdProcessoChanging(value)
				Me.SendPropertyChanging
				Me._IdProcesso = value
				Me.SendPropertyChanged("IdProcesso")
				Me.OnIdProcessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdMarca", DbType:="Int")>  _
	Public Property IdMarca() As System.Nullable(Of Integer)
		Get
			Return Me._IdMarca
		End Get
		Set
			If (Me._IdMarca.Equals(value) = false) Then
				If Me._MarcasImagens.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdMarcaChanging(value)
				Me.SendPropertyChanging
				Me._IdMarca = value
				Me.SendPropertyChanged("IdMarca")
				Me.OnIdMarcaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SoluçõesVistoria_ItensSoluçãoN", Storage:="_ItensSoluçãoN", ThisKey:="IdSolucoes", OtherKey:="IdSolucao")>  _
	Public Property ItensSoluçãoN() As EntitySet(Of ItensSoluçãoN)
		Get
			Return Me._ItensSoluçãoN
		End Get
		Set
			Me._ItensSoluçãoN.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SoluçõesVistoria_ReparoVeiculo", Storage:="_ReparoVeiculo", ThisKey:="IdSolucoes", OtherKey:="IdSolucao")>  _
	Public Property ReparoVeiculo() As EntitySet(Of ReparoVeiculo)
		Get
			Return Me._ReparoVeiculo
		End Get
		Set
			Me._ReparoVeiculo.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Vistorias_SoluçõesVistoria", Storage:="_Vistorias", ThisKey:="IdProcesso", OtherKey:="IdVistoria", IsForeignKey:=true)>  _
	Public Property Vistorias() As Vistorias
		Get
			Return Me._Vistorias.Entity
		End Get
		Set
			Dim previousValue As Vistorias = Me._Vistorias.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Vistorias.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Vistorias.Entity = Nothing
					previousValue.SoluçõesVistoria.Remove(Me)
				End If
				Me._Vistorias.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SoluçõesVistoria.Add(Me)
					Me._IdProcesso = value.IdVistoria
				Else
					Me._IdProcesso = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Vistorias")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RespostasCheklistUsuario_SoluçõesVistoria", Storage:="_RespostasCheklistUsuario", ThisKey:="IdResposta", OtherKey:="IdRespostaChecklist", IsForeignKey:=true)>  _
	Public Property RespostasCheklistUsuario() As RespostasCheklistUsuario
		Get
			Return Me._RespostasCheklistUsuario.Entity
		End Get
		Set
			Dim previousValue As RespostasCheklistUsuario = Me._RespostasCheklistUsuario.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._RespostasCheklistUsuario.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._RespostasCheklistUsuario.Entity = Nothing
					previousValue.SoluçõesVistoria.Remove(Me)
				End If
				Me._RespostasCheklistUsuario.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SoluçõesVistoria.Add(Me)
					Me._IdResposta = value.IdRespostaChecklist
				Else
					Me._IdResposta = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("RespostasCheklistUsuario")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="MarcasImagens_SoluçõesVistoria", Storage:="_MarcasImagens", ThisKey:="IdMarca", OtherKey:="IdMarcaImagem", IsForeignKey:=true)>  _
	Public Property MarcasImagens() As MarcasImagens
		Get
			Return Me._MarcasImagens.Entity
		End Get
		Set
			Dim previousValue As MarcasImagens = Me._MarcasImagens.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._MarcasImagens.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._MarcasImagens.Entity = Nothing
					previousValue.SoluçõesVistoria.Remove(Me)
				End If
				Me._MarcasImagens.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.SoluçõesVistoria.Add(Me)
					Me._IdMarca = value.IdMarcaImagem
				Else
					Me._IdMarca = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("MarcasImagens")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ItensSoluçãoN(ByVal entity As ItensSoluçãoN)
		Me.SendPropertyChanging
		entity.SoluçõesVistoria = Me
	End Sub
	
	Private Sub detach_ItensSoluçãoN(ByVal entity As ItensSoluçãoN)
		Me.SendPropertyChanging
		entity.SoluçõesVistoria = Nothing
	End Sub
	
	Private Sub attach_ReparoVeiculo(ByVal entity As ReparoVeiculo)
		Me.SendPropertyChanging
		entity.SoluçõesVistoria = Me
	End Sub
	
	Private Sub detach_ReparoVeiculo(ByVal entity As ReparoVeiculo)
		Me.SendPropertyChanging
		entity.SoluçõesVistoria = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ItensSolucaoN")>  _
Partial Public Class ItensSoluçãoN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdItemSolução As Integer
	
	Private _IdProduto As System.Nullable(Of Integer)
	
	Private _Tipo As System.Nullable(Of Boolean)
	
	Private _IdSolicitação As System.Nullable(Of Integer)
	
	Private _Qt As System.Nullable(Of Integer)
	
	Private _NeessitaInicio As System.Nullable(Of Boolean)
	
	Private _IdSolução As System.Nullable(Of Integer)
	
	Private _SoluçõesVistoria As EntityRef(Of SoluçõesVistoria)
	
	Private _SolicitaçãoCadastroPeça As EntityRef(Of SolicitacaoCadastroPeca)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdItemSolucaoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdItemSolucaoChanged()
    End Sub
    Partial Private Sub OnIdProdutoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProdutoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoChanged()
    End Sub
    Partial Private Sub OnQtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtChanged()
    End Sub
    Partial Private Sub OnNeessitaInicioChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnNeessitaInicioChanged()
    End Sub
    Partial Private Sub OnIdSolucaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolucaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._SoluçõesVistoria = CType(Nothing, EntityRef(Of SoluçõesVistoria))
		Me._SolicitaçãoCadastroPeça = CType(Nothing, EntityRef(Of SolicitacaoCadastroPeca))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItemSolução", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdItemSolucao() As Integer
		Get
			Return Me._IdItemSolução
		End Get
		Set
			If ((Me._IdItemSolução = value)  _
						= false) Then
				Me.OnIdItemSolucaoChanging(value)
				Me.SendPropertyChanging
				Me._IdItemSolução = value
				Me.SendPropertyChanged("IdItemSolucao")
				Me.OnIdItemSolucaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProduto", DbType:="Int")>  _
	Public Property IdProduto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProduto
		End Get
		Set
			If (Me._IdProduto.Equals(value) = false) Then
				Me.OnIdProdutoChanging(value)
				Me.SendPropertyChanging
				Me._IdProduto = value
				Me.SendPropertyChanged("IdProduto")
				Me.OnIdProdutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Bit")>  _
	Public Property Tipo() As System.Nullable(Of Boolean)
		Get
			Return Me._Tipo
		End Get
		Set
			If (Me._Tipo.Equals(value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitação", DbType:="Int")>  _
	Public Property IdSolicitacao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitação
		End Get
		Set
			If (Me._IdSolicitação.Equals(value) = false) Then
				If Me._SolicitaçãoCadastroPeça.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitação = value
				Me.SendPropertyChanged("IdSolicitacao")
				Me.OnIdSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qt", DbType:="Int")>  _
	Public Property Qt() As System.Nullable(Of Integer)
		Get
			Return Me._Qt
		End Get
		Set
			If (Me._Qt.Equals(value) = false) Then
				Me.OnQtChanging(value)
				Me.SendPropertyChanging
				Me._Qt = value
				Me.SendPropertyChanged("Qt")
				Me.OnQtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="NecessitaInicio", Storage:="_NeessitaInicio", DbType:="Bit")>  _
	Public Property NeessitaInicio() As System.Nullable(Of Boolean)
		Get
			Return Me._NeessitaInicio
		End Get
		Set
			If (Me._NeessitaInicio.Equals(value) = false) Then
				Me.OnNeessitaInicioChanging(value)
				Me.SendPropertyChanging
				Me._NeessitaInicio = value
				Me.SendPropertyChanged("NeessitaInicio")
				Me.OnNeessitaInicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolução", DbType:="Int")>  _
	Public Property IdSolucao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolução
		End Get
		Set
			If (Me._IdSolução.Equals(value) = false) Then
				If Me._SoluçõesVistoria.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSolucaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolução = value
				Me.SendPropertyChanged("IdSolucao")
				Me.OnIdSolucaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SoluçõesVistoria_ItensSoluçãoN", Storage:="_SoluçõesVistoria", ThisKey:="IdSolucao", OtherKey:="IdSolucoes", IsForeignKey:=true)>  _
	Public Property SoluçõesVistoria() As SoluçõesVistoria
		Get
			Return Me._SoluçõesVistoria.Entity
		End Get
		Set
			Dim previousValue As SoluçõesVistoria = Me._SoluçõesVistoria.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SoluçõesVistoria.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SoluçõesVistoria.Entity = Nothing
					previousValue.ItensSoluçãoN.Remove(Me)
				End If
				Me._SoluçõesVistoria.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ItensSoluçãoN.Add(Me)
					Me._IdSolução = value.IdSolucoes
				Else
					Me._IdSolução = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SoluçõesVistoria")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_ItensSoluçãoN", Storage:="_SolicitaçãoCadastroPeça", ThisKey:="IdSolicitacao", OtherKey:="IdSolicitacaoCadastro", IsForeignKey:=true)>  _
	Public Property SolicitacaoCadastroPeca() As SolicitacaoCadastroPeca
		Get
			Return Me._SolicitaçãoCadastroPeça.Entity
		End Get
		Set
			Dim previousValue As SolicitacaoCadastroPeca = Me._SolicitaçãoCadastroPeça.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SolicitaçãoCadastroPeça.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SolicitaçãoCadastroPeça.Entity = Nothing
					previousValue.ItensSoluçãoN.Remove(Me)
				End If
				Me._SolicitaçãoCadastroPeça.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ItensSoluçãoN.Add(Me)
					Me._IdSolicitação = value.IdSolicitacaoCadastro
				Else
					Me._IdSolicitação = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SolicitacaoCadastroPeca")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AssociacaoPecaModelo")>  _
Partial Public Class AssociaçãoPeçaModelo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdAssociaçãoPeçaModelo As Integer
	
	Private _IdCodProd As System.Nullable(Of Integer)
	
	Private _IdSolicitaçãoCad As System.Nullable(Of Integer)
	
	Private _IdModeloVeic As System.Nullable(Of Integer)
	
	Private _Modelos As EntityRef(Of Modelos)
	
	Private _SolicitaçãoCadastroPeça As EntityRef(Of SolicitacaoCadastroPeca)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAssociacaoPecaModeloChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAssociacaoPecaModeloChanged()
    End Sub
    Partial Private Sub OnIdCodProdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCodProdChanged()
    End Sub
    Partial Private Sub OnIdSolicitaçãoCadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitaçãoCadChanged()
    End Sub
    Partial Private Sub OnIdModeloVeicChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdModeloVeicChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Modelos = CType(Nothing, EntityRef(Of Modelos))
		Me._SolicitaçãoCadastroPeça = CType(Nothing, EntityRef(Of SolicitacaoCadastroPeca))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAssociaçãoPeçaModelo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdAssociacaoPecaModelo() As Integer
		Get
			Return Me._IdAssociaçãoPeçaModelo
		End Get
		Set
			If ((Me._IdAssociaçãoPeçaModelo = value)  _
						= false) Then
				Me.OnIdAssociacaoPecaModeloChanging(value)
				Me.SendPropertyChanging
				Me._IdAssociaçãoPeçaModelo = value
				Me.SendPropertyChanged("IdAssociacaoPecaModelo")
				Me.OnIdAssociacaoPecaModeloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCodProd", DbType:="Int")>  _
	Public Property IdCodProd() As System.Nullable(Of Integer)
		Get
			Return Me._IdCodProd
		End Get
		Set
			If (Me._IdCodProd.Equals(value) = false) Then
				Me.OnIdCodProdChanging(value)
				Me.SendPropertyChanging
				Me._IdCodProd = value
				Me.SendPropertyChanged("IdCodProd")
				Me.OnIdCodProdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="IdSolicitacaoCad", Storage:="_IdSolicitaçãoCad", DbType:="Int")>  _
	Public Property IdSolicitaçãoCad() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitaçãoCad
		End Get
		Set
			If (Me._IdSolicitaçãoCad.Equals(value) = false) Then
				Me.OnIdSolicitaçãoCadChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitaçãoCad = value
				Me.SendPropertyChanged("IdSolicitaçãoCad")
				Me.OnIdSolicitaçãoCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModeloVeic", DbType:="Int")>  _
	Public Property IdModeloVeic() As System.Nullable(Of Integer)
		Get
			Return Me._IdModeloVeic
		End Get
		Set
			If (Me._IdModeloVeic.Equals(value) = false) Then
				If Me._Modelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdModeloVeicChanging(value)
				Me.SendPropertyChanging
				Me._IdModeloVeic = value
				Me.SendPropertyChanged("IdModeloVeic")
				Me.OnIdModeloVeicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_AssociaçãoPeçaModelo", Storage:="_Modelos", ThisKey:="IdModeloVeic", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos() As Modelos
		Get
			Return Me._Modelos.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos.Entity = Nothing
					previousValue.AssociaçãoPeçaModelo.Remove(Me)
				End If
				Me._Modelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AssociaçãoPeçaModelo.Add(Me)
					Me._IdModeloVeic = value.IdModelo
				Else
					Me._IdModeloVeic = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_AssociaçãoPeçaModelo", Storage:="_SolicitaçãoCadastroPeça", ThisKey:="IdSolicitaçãoCad", OtherKey:="IdSolicitacaoCadastro", IsForeignKey:=true)>  _
	Public Property SolicitacaoCadastroPeca() As SolicitacaoCadastroPeca
		Get
			Return Me._SolicitaçãoCadastroPeça.Entity
		End Get
		Set
			Dim previousValue As SolicitacaoCadastroPeca = Me._SolicitaçãoCadastroPeça.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SolicitaçãoCadastroPeça.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SolicitaçãoCadastroPeça.Entity = Nothing
					previousValue.AssociaçãoPeçaModelo.Remove(Me)
				End If
				Me._SolicitaçãoCadastroPeça.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.AssociaçãoPeçaModelo.Add(Me)
					Me._IdSolicitaçãoCad = value.IdSolicitacaoCadastro
				Else
					Me._IdSolicitaçãoCad = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SolicitacaoCadastroPeca")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VinculoProdutoModelo")>  _
Partial Public Class VinculoProdutoModelo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdVinculoProdutoVeiculo As Integer
	
	Private _IdProduto As System.Nullable(Of Integer)
	
	Private _IdSolicitacaoCad As System.Nullable(Of Integer)
	
	Private _IdModeloVeic As System.Nullable(Of Integer)
	
	Private _IdVersaoVeiculo As System.Nullable(Of Integer)
	
	Private _AnoMod As System.Nullable(Of Integer)
	
	Private _AnoFab As System.Nullable(Of Integer)
	
	Private _Motor As System.Nullable(Of Decimal)
	
	Private _Potencia As System.Nullable(Of Integer)
	
	Private _SolicitaçãoCadastroPeça As EntityRef(Of SolicitacaoCadastroPeca)
	
	Private _Modelos As EntityRef(Of Modelos)
	
	Private _Modelos1 As EntityRef(Of Modelos)
	
	Private _VersaoModelos As EntityRef(Of VersaoModelos)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdVinculoProdutoVeiculoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVinculoProdutoVeiculoChanged()
    End Sub
    Partial Private Sub OnIdProdutoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProdutoChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoCadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoCadChanged()
    End Sub
    Partial Private Sub OnIdModeloVeicChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdModeloVeicChanged()
    End Sub
    Partial Private Sub OnIdVersaoVeiculoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdVersaoVeiculoChanged()
    End Sub
    Partial Private Sub OnAnoModChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoModChanged()
    End Sub
    Partial Private Sub OnAnoFabChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnAnoFabChanged()
    End Sub
    Partial Private Sub OnMotorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMotorChanged()
    End Sub
    Partial Private Sub OnPotenciaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPotenciaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._SolicitaçãoCadastroPeça = CType(Nothing, EntityRef(Of SolicitacaoCadastroPeca))
		Me._Modelos = CType(Nothing, EntityRef(Of Modelos))
		Me._Modelos1 = CType(Nothing, EntityRef(Of Modelos))
		Me._VersaoModelos = CType(Nothing, EntityRef(Of VersaoModelos))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVinculoProdutoVeiculo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdVinculoProdutoVeiculo() As Integer
		Get
			Return Me._IdVinculoProdutoVeiculo
		End Get
		Set
			If ((Me._IdVinculoProdutoVeiculo = value)  _
						= false) Then
				Me.OnIdVinculoProdutoVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVinculoProdutoVeiculo = value
				Me.SendPropertyChanged("IdVinculoProdutoVeiculo")
				Me.OnIdVinculoProdutoVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProduto", DbType:="Int")>  _
	Public Property IdProduto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProduto
		End Get
		Set
			If (Me._IdProduto.Equals(value) = false) Then
				Me.OnIdProdutoChanging(value)
				Me.SendPropertyChanging
				Me._IdProduto = value
				Me.SendPropertyChanged("IdProduto")
				Me.OnIdProdutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacaoCad", DbType:="Int")>  _
	Public Property IdSolicitacaoCad() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitacaoCad
		End Get
		Set
			If (Me._IdSolicitacaoCad.Equals(value) = false) Then
				If Me._SolicitaçãoCadastroPeça.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSolicitacaoCadChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacaoCad = value
				Me.SendPropertyChanged("IdSolicitacaoCad")
				Me.OnIdSolicitacaoCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdModeloVeic", DbType:="Int")>  _
	Public Property IdModeloVeic() As System.Nullable(Of Integer)
		Get
			Return Me._IdModeloVeic
		End Get
		Set
			If (Me._IdModeloVeic.Equals(value) = false) Then
				If (Me._Modelos.HasLoadedOrAssignedValue OrElse Me._Modelos1.HasLoadedOrAssignedValue) Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdModeloVeicChanging(value)
				Me.SendPropertyChanging
				Me._IdModeloVeic = value
				Me.SendPropertyChanged("IdModeloVeic")
				Me.OnIdModeloVeicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVersaoVeiculo", DbType:="Int")>  _
	Public Property IdVersaoVeiculo() As System.Nullable(Of Integer)
		Get
			Return Me._IdVersaoVeiculo
		End Get
		Set
			If (Me._IdVersaoVeiculo.Equals(value) = false) Then
				If Me._VersaoModelos.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdVersaoVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVersaoVeiculo = value
				Me.SendPropertyChanged("IdVersaoVeiculo")
				Me.OnIdVersaoVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoMod", DbType:="Int")>  _
	Public Property AnoMod() As System.Nullable(Of Integer)
		Get
			Return Me._AnoMod
		End Get
		Set
			If (Me._AnoMod.Equals(value) = false) Then
				Me.OnAnoModChanging(value)
				Me.SendPropertyChanging
				Me._AnoMod = value
				Me.SendPropertyChanged("AnoMod")
				Me.OnAnoModChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnoFab", DbType:="Int")>  _
	Public Property AnoFab() As System.Nullable(Of Integer)
		Get
			Return Me._AnoFab
		End Get
		Set
			If (Me._AnoFab.Equals(value) = false) Then
				Me.OnAnoFabChanging(value)
				Me.SendPropertyChanging
				Me._AnoFab = value
				Me.SendPropertyChanged("AnoFab")
				Me.OnAnoFabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Motor", DbType:="Money")>  _
	Public Property Motor() As System.Nullable(Of Decimal)
		Get
			Return Me._Motor
		End Get
		Set
			If (Me._Motor.Equals(value) = false) Then
				Me.OnMotorChanging(value)
				Me.SendPropertyChanging
				Me._Motor = value
				Me.SendPropertyChanged("Motor")
				Me.OnMotorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Potencia", DbType:="Int")>  _
	Public Property Potencia() As System.Nullable(Of Integer)
		Get
			Return Me._Potencia
		End Get
		Set
			If (Me._Potencia.Equals(value) = false) Then
				Me.OnPotenciaChanging(value)
				Me.SendPropertyChanging
				Me._Potencia = value
				Me.SendPropertyChanged("Potencia")
				Me.OnPotenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SolicitacaoCadastroPeca_VinculoProdutoModelo", Storage:="_SolicitaçãoCadastroPeça", ThisKey:="IdSolicitacaoCad", OtherKey:="IdSolicitacaoCadastro", IsForeignKey:=true)>  _
	Public Property SolicitacaoCadastroPeca() As SolicitacaoCadastroPeca
		Get
			Return Me._SolicitaçãoCadastroPeça.Entity
		End Get
		Set
			Dim previousValue As SolicitacaoCadastroPeca = Me._SolicitaçãoCadastroPeça.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SolicitaçãoCadastroPeça.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SolicitaçãoCadastroPeça.Entity = Nothing
					previousValue.VinculoProdutoModelo.Remove(Me)
				End If
				Me._SolicitaçãoCadastroPeça.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VinculoProdutoModelo.Add(Me)
					Me._IdSolicitacaoCad = value.IdSolicitacaoCadastro
				Else
					Me._IdSolicitacaoCad = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SolicitacaoCadastroPeca")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VinculoProdutoModelo", Storage:="_Modelos", ThisKey:="IdModeloVeic", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos() As Modelos
		Get
			Return Me._Modelos.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos.Entity = Nothing
					previousValue.VinculoProdutoModelo.Remove(Me)
				End If
				Me._Modelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VinculoProdutoModelo.Add(Me)
					Me._IdModeloVeic = value.IdModelo
				Else
					Me._IdModeloVeic = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Modelos_VinculoProdutoModelo1", Storage:="_Modelos1", ThisKey:="IdModeloVeic", OtherKey:="IdModelo", IsForeignKey:=true)>  _
	Public Property Modelos1() As Modelos
		Get
			Return Me._Modelos1.Entity
		End Get
		Set
			Dim previousValue As Modelos = Me._Modelos1.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Modelos1.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Modelos1.Entity = Nothing
					previousValue.VinculoProdutoModelo1.Remove(Me)
				End If
				Me._Modelos1.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VinculoProdutoModelo1.Add(Me)
					Me._IdModeloVeic = value.IdModelo
				Else
					Me._IdModeloVeic = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Modelos1")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="VersaoModelos_VinculoProdutoModelo", Storage:="_VersaoModelos", ThisKey:="IdVersaoVeiculo", OtherKey:="Idversao", IsForeignKey:=true)>  _
	Public Property VersaoModelos() As VersaoModelos
		Get
			Return Me._VersaoModelos.Entity
		End Get
		Set
			Dim previousValue As VersaoModelos = Me._VersaoModelos.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._VersaoModelos.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._VersaoModelos.Entity = Nothing
					previousValue.VinculoProdutoModelo.Remove(Me)
				End If
				Me._VersaoModelos.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.VinculoProdutoModelo.Add(Me)
					Me._IdVersaoVeiculo = value.Idversao
				Else
					Me._IdVersaoVeiculo = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("VersaoModelos")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Seguradoras")>  _
Partial Public Class Seguradoras
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdCadSeguradora As Integer
	
	Private _CNPJ As String
	
	Private _IE As String
	
	Private _RazaoSocial As String
	
	Private _NomeFantasia As String
	
	Private _IdEndereco As System.Nullable(Of Integer)
	
	Private _Numero As System.Nullable(Of Integer)
	
	Private _Clmp As String
	
	Private _Fechamento As System.Nullable(Of Integer)
	
	Private _Tipo As String
	
	Private _ItemObgSeguradora As EntitySet(Of ItemObgSeguradora)
	
	Private _Seguradora_Entrada As EntitySet(Of Seguradora_Entrada)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdCadSeguradoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdCadSeguradoraChanged()
    End Sub
    Partial Private Sub OnCNPJChanging(value As String)
    End Sub
    Partial Private Sub OnCNPJChanged()
    End Sub
    Partial Private Sub OnIEChanging(value As String)
    End Sub
    Partial Private Sub OnIEChanged()
    End Sub
    Partial Private Sub OnRazaoSocialChanging(value As String)
    End Sub
    Partial Private Sub OnRazaoSocialChanged()
    End Sub
    Partial Private Sub OnNomeFantasiaChanging(value As String)
    End Sub
    Partial Private Sub OnNomeFantasiaChanged()
    End Sub
    Partial Private Sub OnIdEnderecoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEnderecoChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnClmpChanging(value As String)
    End Sub
    Partial Private Sub OnClmpChanged()
    End Sub
    Partial Private Sub OnFechamentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnFechamentoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._ItemObgSeguradora = New EntitySet(Of ItemObgSeguradora)(AddressOf Me.attach_ItemObgSeguradora, AddressOf Me.detach_ItemObgSeguradora)
		Me._Seguradora_Entrada = New EntitySet(Of Seguradora_Entrada)(AddressOf Me.attach_Seguradora_Entrada, AddressOf Me.detach_Seguradora_Entrada)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCadSeguradora", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdCadSeguradora() As Integer
		Get
			Return Me._IdCadSeguradora
		End Get
		Set
			If ((Me._IdCadSeguradora = value)  _
						= false) Then
				Me.OnIdCadSeguradoraChanging(value)
				Me.SendPropertyChanging
				Me._IdCadSeguradora = value
				Me.SendPropertyChanged("IdCadSeguradora")
				Me.OnIdCadSeguradoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CNPJ", DbType:="NChar(14)")>  _
	Public Property CNPJ() As String
		Get
			Return Me._CNPJ
		End Get
		Set
			If (String.Equals(Me._CNPJ, value) = false) Then
				Me.OnCNPJChanging(value)
				Me.SendPropertyChanging
				Me._CNPJ = value
				Me.SendPropertyChanged("CNPJ")
				Me.OnCNPJChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IE", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IE() As String
		Get
			Return Me._IE
		End Get
		Set
			If (String.Equals(Me._IE, value) = false) Then
				Me.OnIEChanging(value)
				Me.SendPropertyChanging
				Me._IE = value
				Me.SendPropertyChanged("IE")
				Me.OnIEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RazaoSocial", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property RazaoSocial() As String
		Get
			Return Me._RazaoSocial
		End Get
		Set
			If (String.Equals(Me._RazaoSocial, value) = false) Then
				Me.OnRazaoSocialChanging(value)
				Me.SendPropertyChanging
				Me._RazaoSocial = value
				Me.SendPropertyChanged("RazaoSocial")
				Me.OnRazaoSocialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeFantasia", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeFantasia() As String
		Get
			Return Me._NomeFantasia
		End Get
		Set
			If (String.Equals(Me._NomeFantasia, value) = false) Then
				Me.OnNomeFantasiaChanging(value)
				Me.SendPropertyChanging
				Me._NomeFantasia = value
				Me.SendPropertyChanged("NomeFantasia")
				Me.OnNomeFantasiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEndereco", DbType:="Int")>  _
	Public Property IdEndereco() As System.Nullable(Of Integer)
		Get
			Return Me._IdEndereco
		End Get
		Set
			If (Me._IdEndereco.Equals(value) = false) Then
				Me.OnIdEnderecoChanging(value)
				Me.SendPropertyChanging
				Me._IdEndereco = value
				Me.SendPropertyChanged("IdEndereco")
				Me.OnIdEnderecoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Int")>  _
	Public Property Numero() As System.Nullable(Of Integer)
		Get
			Return Me._Numero
		End Get
		Set
			If (Me._Numero.Equals(value) = false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Clmp", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Clmp() As String
		Get
			Return Me._Clmp
		End Get
		Set
			If (String.Equals(Me._Clmp, value) = false) Then
				Me.OnClmpChanging(value)
				Me.SendPropertyChanging
				Me._Clmp = value
				Me.SendPropertyChanged("Clmp")
				Me.OnClmpChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fechamento", DbType:="Int")>  _
	Public Property Fechamento() As System.Nullable(Of Integer)
		Get
			Return Me._Fechamento
		End Get
		Set
			If (Me._Fechamento.Equals(value) = false) Then
				Me.OnFechamentoChanging(value)
				Me.SendPropertyChanging
				Me._Fechamento = value
				Me.SendPropertyChanged("Fechamento")
				Me.OnFechamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="ntext", CanBeNull:=false)>  _
	Public Property Tipo() As String
		Get
			Return Me._Tipo
		End Get
		Set
			If (String.Equals(Me._Tipo, value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Seguradoras_ItemObgSeguradora", Storage:="_ItemObgSeguradora", ThisKey:="IdCadSeguradora", OtherKey:="IdCadSeguradora")>  _
	Public Property ItemObgSeguradora() As EntitySet(Of ItemObgSeguradora)
		Get
			Return Me._ItemObgSeguradora
		End Get
		Set
			Me._ItemObgSeguradora.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Seguradoras_Seguradora_Entrada", Storage:="_Seguradora_Entrada", ThisKey:="IdCadSeguradora", OtherKey:="IdSeguradora")>  _
	Public Property Seguradora_Entrada() As EntitySet(Of Seguradora_Entrada)
		Get
			Return Me._Seguradora_Entrada
		End Get
		Set
			Me._Seguradora_Entrada.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_ItemObgSeguradora(ByVal entity As ItemObgSeguradora)
		Me.SendPropertyChanging
		entity.Seguradoras = Me
	End Sub
	
	Private Sub detach_ItemObgSeguradora(ByVal entity As ItemObgSeguradora)
		Me.SendPropertyChanging
		entity.Seguradoras = Nothing
	End Sub
	
	Private Sub attach_Seguradora_Entrada(ByVal entity As Seguradora_Entrada)
		Me.SendPropertyChanging
		entity.Seguradoras = Me
	End Sub
	
	Private Sub detach_Seguradora_Entrada(ByVal entity As Seguradora_Entrada)
		Me.SendPropertyChanging
		entity.Seguradoras = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ItemObgSeguradora")>  _
Partial Public Class ItemObgSeguradora
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdItemObgSeguradora As Integer
	
	Private _Descricao As String
	
	Private _tipo As System.Nullable(Of Integer)
	
	Private _IdCadSeguradora As System.Nullable(Of Integer)
	
	Private _Seguradoras As EntityRef(Of Seguradoras)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdItemObgSeguradoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdItemObgSeguradoraChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OntipoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OntipoChanged()
    End Sub
    Partial Private Sub OnIdCadSeguradoraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCadSeguradoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Seguradoras = CType(Nothing, EntityRef(Of Seguradoras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItemObgSeguradora", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdItemObgSeguradora() As Integer
		Get
			Return Me._IdItemObgSeguradora
		End Get
		Set
			If ((Me._IdItemObgSeguradora = value)  _
						= false) Then
				Me.OnIdItemObgSeguradoraChanging(value)
				Me.SendPropertyChanging
				Me._IdItemObgSeguradora = value
				Me.SendPropertyChanged("IdItemObgSeguradora")
				Me.OnIdItemObgSeguradoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tipo", DbType:="Int")>  _
	Public Property tipo() As System.Nullable(Of Integer)
		Get
			Return Me._tipo
		End Get
		Set
			If (Me._tipo.Equals(value) = false) Then
				Me.OntipoChanging(value)
				Me.SendPropertyChanging
				Me._tipo = value
				Me.SendPropertyChanged("tipo")
				Me.OntipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCadSeguradora", DbType:="Int")>  _
	Public Property IdCadSeguradora() As System.Nullable(Of Integer)
		Get
			Return Me._IdCadSeguradora
		End Get
		Set
			If (Me._IdCadSeguradora.Equals(value) = false) Then
				If Me._Seguradoras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdCadSeguradoraChanging(value)
				Me.SendPropertyChanging
				Me._IdCadSeguradora = value
				Me.SendPropertyChanged("IdCadSeguradora")
				Me.OnIdCadSeguradoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Seguradoras_ItemObgSeguradora", Storage:="_Seguradoras", ThisKey:="IdCadSeguradora", OtherKey:="IdCadSeguradora", IsForeignKey:=true)>  _
	Public Property Seguradoras() As Seguradoras
		Get
			Return Me._Seguradoras.Entity
		End Get
		Set
			Dim previousValue As Seguradoras = Me._Seguradoras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Seguradoras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Seguradoras.Entity = Nothing
					previousValue.ItemObgSeguradora.Remove(Me)
				End If
				Me._Seguradoras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ItemObgSeguradora.Add(Me)
					Me._IdCadSeguradora = value.IdCadSeguradora
				Else
					Me._IdCadSeguradora = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Seguradoras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Seguradora_Entrada")>  _
Partial Public Class Seguradora_Entrada
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEntSeguradora As Integer
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _IdSeguradora As System.Nullable(Of Integer)
	
	Private _DataEntrada As System.Nullable(Of Date)
	
	Private _HroaEntrada As System.Nullable(Of System.TimeSpan)
	
	Private _NumSinistro As String
	
	Private _VlrFranquia As System.Nullable(Of Decimal)
	
	Private _Seguradoras As EntityRef(Of Seguradoras)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEntSeguradoraChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEntSeguradoraChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnIdSeguradoraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSeguradoraChanged()
    End Sub
    Partial Private Sub OnDataEntradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataEntradaChanged()
    End Sub
    Partial Private Sub OnHroaEntradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHroaEntradaChanged()
    End Sub
    Partial Private Sub OnNumSinistroChanging(value As String)
    End Sub
    Partial Private Sub OnNumSinistroChanged()
    End Sub
    Partial Private Sub OnVlrFranquiaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnVlrFranquiaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Seguradoras = CType(Nothing, EntityRef(Of Seguradoras))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEntSeguradora", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEntSeguradora() As Integer
		Get
			Return Me._IdEntSeguradora
		End Get
		Set
			If ((Me._IdEntSeguradora = value)  _
						= false) Then
				Me.OnIdEntSeguradoraChanging(value)
				Me.SendPropertyChanging
				Me._IdEntSeguradora = value
				Me.SendPropertyChanged("IdEntSeguradora")
				Me.OnIdEntSeguradoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSeguradora", DbType:="Int")>  _
	Public Property IdSeguradora() As System.Nullable(Of Integer)
		Get
			Return Me._IdSeguradora
		End Get
		Set
			If (Me._IdSeguradora.Equals(value) = false) Then
				If Me._Seguradoras.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSeguradoraChanging(value)
				Me.SendPropertyChanging
				Me._IdSeguradora = value
				Me.SendPropertyChanged("IdSeguradora")
				Me.OnIdSeguradoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataEntrada", DbType:="Date")>  _
	Public Property DataEntrada() As System.Nullable(Of Date)
		Get
			Return Me._DataEntrada
		End Get
		Set
			If (Me._DataEntrada.Equals(value) = false) Then
				Me.OnDataEntradaChanging(value)
				Me.SendPropertyChanging
				Me._DataEntrada = value
				Me.SendPropertyChanged("DataEntrada")
				Me.OnDataEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HroaEntrada", DbType:="Time")>  _
	Public Property HroaEntrada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HroaEntrada
		End Get
		Set
			If (Me._HroaEntrada.Equals(value) = false) Then
				Me.OnHroaEntradaChanging(value)
				Me.SendPropertyChanging
				Me._HroaEntrada = value
				Me.SendPropertyChanged("HroaEntrada")
				Me.OnHroaEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumSinistro", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NumSinistro() As String
		Get
			Return Me._NumSinistro
		End Get
		Set
			If (String.Equals(Me._NumSinistro, value) = false) Then
				Me.OnNumSinistroChanging(value)
				Me.SendPropertyChanging
				Me._NumSinistro = value
				Me.SendPropertyChanged("NumSinistro")
				Me.OnNumSinistroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_VlrFranquia", DbType:="Money")>  _
	Public Property VlrFranquia() As System.Nullable(Of Decimal)
		Get
			Return Me._VlrFranquia
		End Get
		Set
			If (Me._VlrFranquia.Equals(value) = false) Then
				Me.OnVlrFranquiaChanging(value)
				Me.SendPropertyChanging
				Me._VlrFranquia = value
				Me.SendPropertyChanged("VlrFranquia")
				Me.OnVlrFranquiaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Seguradoras_Seguradora_Entrada", Storage:="_Seguradoras", ThisKey:="IdSeguradora", OtherKey:="IdCadSeguradora", IsForeignKey:=true)>  _
	Public Property Seguradoras() As Seguradoras
		Get
			Return Me._Seguradoras.Entity
		End Get
		Set
			Dim previousValue As Seguradoras = Me._Seguradoras.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Seguradoras.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Seguradoras.Entity = Nothing
					previousValue.Seguradora_Entrada.Remove(Me)
				End If
				Me._Seguradoras.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Seguradora_Entrada.Add(Me)
					Me._IdSeguradora = value.IdCadSeguradora
				Else
					Me._IdSeguradora = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("Seguradoras")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ReparoVeiculo")>  _
Partial Public Class ReparoVeiculo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdReparo As Integer
	
	Private _IdSolucao As System.Nullable(Of Integer)
	
	Private _IdItem As System.Nullable(Of Integer)
	
	Private _IdSolicitacao As System.Nullable(Of Integer)
	
	Private _Tipo As System.Nullable(Of Boolean)
	
	Private _DataInicio As System.Nullable(Of Date)
	
	Private _HoraInicio As System.Nullable(Of System.TimeSpan)
	
	Private _DataFim As System.Nullable(Of Date)
	
	Private _HoraFim As System.Nullable(Of System.TimeSpan)
	
	Private _IdTecnico As System.Nullable(Of Integer)
	
	Private _SoluçõesVistoria As EntityRef(Of SoluçõesVistoria)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdReparoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdReparoChanged()
    End Sub
    Partial Private Sub OnIdSolucaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolucaoChanged()
    End Sub
    Partial Private Sub OnIdItemChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdItemChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    Partial Private Sub OnDataInicioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataInicioChanged()
    End Sub
    Partial Private Sub OnHoraInicioChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraInicioChanged()
    End Sub
    Partial Private Sub OnDataFimChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataFimChanged()
    End Sub
    Partial Private Sub OnHoraFimChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraFimChanged()
    End Sub
    Partial Private Sub OnIdTecnicoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdTecnicoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._SoluçõesVistoria = CType(Nothing, EntityRef(Of SoluçõesVistoria))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdReparo", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdReparo() As Integer
		Get
			Return Me._IdReparo
		End Get
		Set
			If ((Me._IdReparo = value)  _
						= false) Then
				Me.OnIdReparoChanging(value)
				Me.SendPropertyChanging
				Me._IdReparo = value
				Me.SendPropertyChanged("IdReparo")
				Me.OnIdReparoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolucao", DbType:="Int")>  _
	Public Property IdSolucao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolucao
		End Get
		Set
			If (Me._IdSolucao.Equals(value) = false) Then
				If Me._SoluçõesVistoria.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIdSolucaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolucao = value
				Me.SendPropertyChanged("IdSolucao")
				Me.OnIdSolucaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItem", DbType:="Int")>  _
	Public Property IdItem() As System.Nullable(Of Integer)
		Get
			Return Me._IdItem
		End Get
		Set
			If (Me._IdItem.Equals(value) = false) Then
				Me.OnIdItemChanging(value)
				Me.SendPropertyChanging
				Me._IdItem = value
				Me.SendPropertyChanged("IdItem")
				Me.OnIdItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacao", DbType:="Int")>  _
	Public Property IdSolicitacao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitacao
		End Get
		Set
			If (Me._IdSolicitacao.Equals(value) = false) Then
				Me.OnIdSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacao = value
				Me.SendPropertyChanged("IdSolicitacao")
				Me.OnIdSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Bit")>  _
	Public Property Tipo() As System.Nullable(Of Boolean)
		Get
			Return Me._Tipo
		End Get
		Set
			If (Me._Tipo.Equals(value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInicio", DbType:="Date")>  _
	Public Property DataInicio() As System.Nullable(Of Date)
		Get
			Return Me._DataInicio
		End Get
		Set
			If (Me._DataInicio.Equals(value) = false) Then
				Me.OnDataInicioChanging(value)
				Me.SendPropertyChanging
				Me._DataInicio = value
				Me.SendPropertyChanged("DataInicio")
				Me.OnDataInicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraInicio", DbType:="Time")>  _
	Public Property HoraInicio() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraInicio
		End Get
		Set
			If (Me._HoraInicio.Equals(value) = false) Then
				Me.OnHoraInicioChanging(value)
				Me.SendPropertyChanging
				Me._HoraInicio = value
				Me.SendPropertyChanged("HoraInicio")
				Me.OnHoraInicioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFim", DbType:="Date")>  _
	Public Property DataFim() As System.Nullable(Of Date)
		Get
			Return Me._DataFim
		End Get
		Set
			If (Me._DataFim.Equals(value) = false) Then
				Me.OnDataFimChanging(value)
				Me.SendPropertyChanging
				Me._DataFim = value
				Me.SendPropertyChanged("DataFim")
				Me.OnDataFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraFim", DbType:="Time")>  _
	Public Property HoraFim() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraFim
		End Get
		Set
			If (Me._HoraFim.Equals(value) = false) Then
				Me.OnHoraFimChanging(value)
				Me.SendPropertyChanging
				Me._HoraFim = value
				Me.SendPropertyChanged("HoraFim")
				Me.OnHoraFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdTecnico", DbType:="Int")>  _
	Public Property IdTecnico() As System.Nullable(Of Integer)
		Get
			Return Me._IdTecnico
		End Get
		Set
			If (Me._IdTecnico.Equals(value) = false) Then
				Me.OnIdTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._IdTecnico = value
				Me.SendPropertyChanged("IdTecnico")
				Me.OnIdTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="SoluçõesVistoria_ReparoVeiculo", Storage:="_SoluçõesVistoria", ThisKey:="IdSolucao", OtherKey:="IdSolucoes", IsForeignKey:=true)>  _
	Public Property SoluçõesVistoria() As SoluçõesVistoria
		Get
			Return Me._SoluçõesVistoria.Entity
		End Get
		Set
			Dim previousValue As SoluçõesVistoria = Me._SoluçõesVistoria.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._SoluçõesVistoria.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._SoluçõesVistoria.Entity = Nothing
					previousValue.ReparoVeiculo.Remove(Me)
				End If
				Me._SoluçõesVistoria.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.ReparoVeiculo.Add(Me)
					Me._IdSolucao = value.IdSolucoes
				Else
					Me._IdSolucao = CType(Nothing, Nullable(Of Integer))
				End If
				Me.SendPropertyChanged("SoluçõesVistoria")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ItemsCatOficina")>  _
Partial Public Class ItemsCatOficina
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdItemCatOficina As Integer
	
	Private _IdCategoria As System.Nullable(Of Integer)
	
	Private _Categoria As String
	
	Private _IdSubCategoria As System.Nullable(Of Integer)
	
	Private _SubCategoria As String
	
	Private _Item As String
	
	Private _Tipo As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdItemCatOficinaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdItemCatOficinaChanged()
    End Sub
    Partial Private Sub OnIdCategoriaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCategoriaChanged()
    End Sub
    Partial Private Sub OnCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnCategoriaChanged()
    End Sub
    Partial Private Sub OnIdSubCategoriaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSubCategoriaChanged()
    End Sub
    Partial Private Sub OnSubCategoriaChanging(value As String)
    End Sub
    Partial Private Sub OnSubCategoriaChanged()
    End Sub
    Partial Private Sub OnItemChanging(value As String)
    End Sub
    Partial Private Sub OnItemChanged()
    End Sub
    Partial Private Sub OnTipoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnTipoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItemCatOficina", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdItemCatOficina() As Integer
		Get
			Return Me._IdItemCatOficina
		End Get
		Set
			If ((Me._IdItemCatOficina = value)  _
						= false) Then
				Me.OnIdItemCatOficinaChanging(value)
				Me.SendPropertyChanging
				Me._IdItemCatOficina = value
				Me.SendPropertyChanged("IdItemCatOficina")
				Me.OnIdItemCatOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCategoria", DbType:="Int")>  _
	Public Property IdCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdCategoria
		End Get
		Set
			If (Me._IdCategoria.Equals(value) = false) Then
				Me.OnIdCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdCategoria = value
				Me.SendPropertyChanged("IdCategoria")
				Me.OnIdCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Categoria", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Categoria() As String
		Get
			Return Me._Categoria
		End Get
		Set
			If (String.Equals(Me._Categoria, value) = false) Then
				Me.OnCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._Categoria = value
				Me.SendPropertyChanged("Categoria")
				Me.OnCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSubCategoria", DbType:="Int")>  _
	Public Property IdSubCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdSubCategoria
		End Get
		Set
			If (Me._IdSubCategoria.Equals(value) = false) Then
				Me.OnIdSubCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdSubCategoria = value
				Me.SendPropertyChanged("IdSubCategoria")
				Me.OnIdSubCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubCategoria", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SubCategoria() As String
		Get
			Return Me._SubCategoria
		End Get
		Set
			If (String.Equals(Me._SubCategoria, value) = false) Then
				Me.OnSubCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._SubCategoria = value
				Me.SendPropertyChanged("SubCategoria")
				Me.OnSubCategoriaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Item", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Item() As String
		Get
			Return Me._Item
		End Get
		Set
			If (String.Equals(Me._Item, value) = false) Then
				Me.OnItemChanging(value)
				Me.SendPropertyChanging
				Me._Item = value
				Me.SendPropertyChanged("Item")
				Me.OnItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo", DbType:="Bit")>  _
	Public Property Tipo() As System.Nullable(Of Boolean)
		Get
			Return Me._Tipo
		End Get
		Set
			If (Me._Tipo.Equals(value) = false) Then
				Me.OnTipoChanging(value)
				Me.SendPropertyChanging
				Me._Tipo = value
				Me.SendPropertyChanged("Tipo")
				Me.OnTipoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SubItemCat")>  _
Partial Public Class SubItemCat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSubItem As Integer
	
	Private _IdItem As System.Nullable(Of Integer)
	
	Private _Descricao As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSubItemChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSubItemChanged()
    End Sub
    Partial Private Sub OnIdItemChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdItemChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSubItem", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdSubItem() As Integer
		Get
			Return Me._IdSubItem
		End Get
		Set
			If ((Me._IdSubItem = value)  _
						= false) Then
				Me.OnIdSubItemChanging(value)
				Me.SendPropertyChanging
				Me._IdSubItem = value
				Me.SendPropertyChanged("IdSubItem")
				Me.OnIdSubItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItem", DbType:="Int")>  _
	Public Property IdItem() As System.Nullable(Of Integer)
		Get
			Return Me._IdItem
		End Get
		Set
			If (Me._IdItem.Equals(value) = false) Then
				Me.OnIdItemChanging(value)
				Me.SendPropertyChanging
				Me._IdItem = value
				Me.SendPropertyChanged("IdItem")
				Me.OnIdItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AvariasFerramentas")>  _
Partial Public Class AvariasFerramentas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdAvaria As Integer
	
	Private _Descricao As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAvariaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAvariaChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAvaria", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdAvaria() As Integer
		Get
			Return Me._IdAvaria
		End Get
		Set
			If ((Me._IdAvaria = value)  _
						= false) Then
				Me.OnIdAvariaChanging(value)
				Me.SendPropertyChanging
				Me._IdAvaria = value
				Me.SendPropertyChanged("IdAvaria")
				Me.OnIdAvariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.VinculoAvariaSubCat")>  _
Partial Public Class VinculoAvariaSubCat
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdVincuAva As Integer
	
	Private _IdAvaria As System.Nullable(Of Integer)
	
	Private _IdSubCategoria As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdVincuAvaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdVincuAvaChanged()
    End Sub
    Partial Private Sub OnIdAvariaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdAvariaChanged()
    End Sub
    Partial Private Sub OnIdSubCategoriaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSubCategoriaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVincuAva", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdVincuAva() As Integer
		Get
			Return Me._IdVincuAva
		End Get
		Set
			If ((Me._IdVincuAva = value)  _
						= false) Then
				Me.OnIdVincuAvaChanging(value)
				Me.SendPropertyChanging
				Me._IdVincuAva = value
				Me.SendPropertyChanged("IdVincuAva")
				Me.OnIdVincuAvaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAvaria", DbType:="Int")>  _
	Public Property IdAvaria() As System.Nullable(Of Integer)
		Get
			Return Me._IdAvaria
		End Get
		Set
			If (Me._IdAvaria.Equals(value) = false) Then
				Me.OnIdAvariaChanging(value)
				Me.SendPropertyChanging
				Me._IdAvaria = value
				Me.SendPropertyChanged("IdAvaria")
				Me.OnIdAvariaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSubCategoria", DbType:="Int")>  _
	Public Property IdSubCategoria() As System.Nullable(Of Integer)
		Get
			Return Me._IdSubCategoria
		End Get
		Set
			If (Me._IdSubCategoria.Equals(value) = false) Then
				Me.OnIdSubCategoriaChanging(value)
				Me.SendPropertyChanging
				Me._IdSubCategoria = value
				Me.SendPropertyChanged("IdSubCategoria")
				Me.OnIdSubCategoriaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ImagemVeiculosColetado")>  _
Partial Public Class ImagemVeiculosColetado
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdImagemColetada As Integer
	
	Private _Descricao As String
	
	Private _ImagemColetadoUrl As String
	
	Private _ImagemColetado As System.Data.Linq.Binary
	
	Private _ImagemColetadoUrlFim As String
	
	Private _ImagemColetadoFim As System.Data.Linq.Binary
	
	Private _IdVeiculo As System.Nullable(Of Integer)
	
	Private _IdSolicitacao As System.Nullable(Of Integer)
	
	Private _IdCliente As System.Nullable(Of Integer)
	
	Private _idImagemColetadaExt As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdImagemColetadaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdImagemColetadaChanged()
    End Sub
    Partial Private Sub OnDescricaoChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoChanged()
    End Sub
    Partial Private Sub OnImagemColetadoUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImagemColetadoUrlChanged()
    End Sub
    Partial Private Sub OnImagemColetadoChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagemColetadoChanged()
    End Sub
    Partial Private Sub OnImagemColetadoUrlFimChanging(value As String)
    End Sub
    Partial Private Sub OnImagemColetadoUrlFimChanged()
    End Sub
    Partial Private Sub OnImagemColetadoFimChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagemColetadoFimChanged()
    End Sub
    Partial Private Sub OnIdVeiculoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdVeiculoChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoChanged()
    End Sub
    Partial Private Sub OnIdClienteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdClienteChanged()
    End Sub
    Partial Private Sub OnidImagemColetadaExtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnidImagemColetadaExtChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdImagemColetada", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdImagemColetada() As Integer
		Get
			Return Me._IdImagemColetada
		End Get
		Set
			If ((Me._IdImagemColetada = value)  _
						= false) Then
				Me.OnIdImagemColetadaChanging(value)
				Me.SendPropertyChanging
				Me._IdImagemColetada = value
				Me.SendPropertyChanged("IdImagemColetada")
				Me.OnIdImagemColetadaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descricao", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Descricao() As String
		Get
			Return Me._Descricao
		End Get
		Set
			If (String.Equals(Me._Descricao, value) = false) Then
				Me.OnDescricaoChanging(value)
				Me.SendPropertyChanging
				Me._Descricao = value
				Me.SendPropertyChanged("Descricao")
				Me.OnDescricaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImagemColetadoUrl", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImagemColetadoUrl() As String
		Get
			Return Me._ImagemColetadoUrl
		End Get
		Set
			If (String.Equals(Me._ImagemColetadoUrl, value) = false) Then
				Me.OnImagemColetadoUrlChanging(value)
				Me.SendPropertyChanging
				Me._ImagemColetadoUrl = value
				Me.SendPropertyChanged("ImagemColetadoUrl")
				Me.OnImagemColetadoUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImagemColetado", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImagemColetado() As System.Data.Linq.Binary
		Get
			Return Me._ImagemColetado
		End Get
		Set
			If (Object.Equals(Me._ImagemColetado, value) = false) Then
				Me.OnImagemColetadoChanging(value)
				Me.SendPropertyChanging
				Me._ImagemColetado = value
				Me.SendPropertyChanged("ImagemColetado")
				Me.OnImagemColetadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImagemColetadoUrlFim", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImagemColetadoUrlFim() As String
		Get
			Return Me._ImagemColetadoUrlFim
		End Get
		Set
			If (String.Equals(Me._ImagemColetadoUrlFim, value) = false) Then
				Me.OnImagemColetadoUrlFimChanging(value)
				Me.SendPropertyChanging
				Me._ImagemColetadoUrlFim = value
				Me.SendPropertyChanged("ImagemColetadoUrlFim")
				Me.OnImagemColetadoUrlFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImagemColetadoFim", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImagemColetadoFim() As System.Data.Linq.Binary
		Get
			Return Me._ImagemColetadoFim
		End Get
		Set
			If (Object.Equals(Me._ImagemColetadoFim, value) = false) Then
				Me.OnImagemColetadoFimChanging(value)
				Me.SendPropertyChanging
				Me._ImagemColetadoFim = value
				Me.SendPropertyChanged("ImagemColetadoFim")
				Me.OnImagemColetadoFimChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdVeiculo", DbType:="Int")>  _
	Public Property IdVeiculo() As System.Nullable(Of Integer)
		Get
			Return Me._IdVeiculo
		End Get
		Set
			If (Me._IdVeiculo.Equals(value) = false) Then
				Me.OnIdVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._IdVeiculo = value
				Me.SendPropertyChanged("IdVeiculo")
				Me.OnIdVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacao", DbType:="Int")>  _
	Public Property IdSolicitacao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitacao
		End Get
		Set
			If (Me._IdSolicitacao.Equals(value) = false) Then
				Me.OnIdSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacao = value
				Me.SendPropertyChanged("IdSolicitacao")
				Me.OnIdSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCliente", DbType:="Int")>  _
	Public Property IdCliente() As System.Nullable(Of Integer)
		Get
			Return Me._IdCliente
		End Get
		Set
			If (Me._IdCliente.Equals(value) = false) Then
				Me.OnIdClienteChanging(value)
				Me.SendPropertyChanging
				Me._IdCliente = value
				Me.SendPropertyChanged("IdCliente")
				Me.OnIdClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_idImagemColetadaExt", DbType:="Int")>  _
	Public Property idImagemColetadaExt() As System.Nullable(Of Integer)
		Get
			Return Me._idImagemColetadaExt
		End Get
		Set
			If (Me._idImagemColetadaExt.Equals(value) = false) Then
				Me.OnidImagemColetadaExtChanging(value)
				Me.SendPropertyChanging
				Me._idImagemColetadaExt = value
				Me.SendPropertyChanged("idImagemColetadaExt")
				Me.OnidImagemColetadaExtChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.LaudosTecnicos")>  _
Partial Public Class LaudosTecnicos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdLaudoTecnico As Integer
	
	Private _ChaveOficina As String
	
	Private _NomeCompleto As String
	
	Private _CpfCnpj As String
	
	Private _DataSolicitacao As System.Nullable(Of Date)
	
	Private _HoraSolicitacao As System.Nullable(Of System.TimeSpan)
	
	Private _DataEntrada As System.Nullable(Of Date)
	
	Private _HoraEntrada As System.Nullable(Of System.TimeSpan)
	
	Private _DataEntrega As System.Nullable(Of Date)
	
	Private _HoraEntrega As System.Nullable(Of System.TimeSpan)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _Faturado As System.Nullable(Of Boolean)
	
	Private _IdFaturamento As System.Nullable(Of Integer)
	
	Private _IdLaudoExt As System.Nullable(Of Integer)
	
	Private _PlacaVeiculo As String
	
	Private _ModeloVeiculo As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdLaudoTecnicoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdLaudoTecnicoChanged()
    End Sub
    Partial Private Sub OnChaveOficinaChanging(value As String)
    End Sub
    Partial Private Sub OnChaveOficinaChanged()
    End Sub
    Partial Private Sub OnNomeCompletoChanging(value As String)
    End Sub
    Partial Private Sub OnNomeCompletoChanged()
    End Sub
    Partial Private Sub OnCpfCnpjChanging(value As String)
    End Sub
    Partial Private Sub OnCpfCnpjChanged()
    End Sub
    Partial Private Sub OnDataSolicitacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSolicitacaoChanged()
    End Sub
    Partial Private Sub OnHoraSolicitacaoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraSolicitacaoChanged()
    End Sub
    Partial Private Sub OnDataEntradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataEntradaChanged()
    End Sub
    Partial Private Sub OnHoraEntradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraEntradaChanged()
    End Sub
    Partial Private Sub OnDataEntregaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataEntregaChanged()
    End Sub
    Partial Private Sub OnHoraEntregaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraEntregaChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnFaturadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnFaturadoChanged()
    End Sub
    Partial Private Sub OnIdFaturamentoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFaturamentoChanged()
    End Sub
    Partial Private Sub OnIdLaudoExtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdLaudoExtChanged()
    End Sub
    Partial Private Sub OnPlacaVeiculoChanging(value As String)
    End Sub
    Partial Private Sub OnPlacaVeiculoChanged()
    End Sub
    Partial Private Sub OnModeloVeiculoChanging(value As String)
    End Sub
    Partial Private Sub OnModeloVeiculoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdLaudoTecnico", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdLaudoTecnico() As Integer
		Get
			Return Me._IdLaudoTecnico
		End Get
		Set
			If ((Me._IdLaudoTecnico = value)  _
						= false) Then
				Me.OnIdLaudoTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._IdLaudoTecnico = value
				Me.SendPropertyChanged("IdLaudoTecnico")
				Me.OnIdLaudoTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChaveOficina", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ChaveOficina() As String
		Get
			Return Me._ChaveOficina
		End Get
		Set
			If (String.Equals(Me._ChaveOficina, value) = false) Then
				Me.OnChaveOficinaChanging(value)
				Me.SendPropertyChanging
				Me._ChaveOficina = value
				Me.SendPropertyChanged("ChaveOficina")
				Me.OnChaveOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeCompleto", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeCompleto() As String
		Get
			Return Me._NomeCompleto
		End Get
		Set
			If (String.Equals(Me._NomeCompleto, value) = false) Then
				Me.OnNomeCompletoChanging(value)
				Me.SendPropertyChanging
				Me._NomeCompleto = value
				Me.SendPropertyChanged("NomeCompleto")
				Me.OnNomeCompletoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CpfCnpj", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property CpfCnpj() As String
		Get
			Return Me._CpfCnpj
		End Get
		Set
			If (String.Equals(Me._CpfCnpj, value) = false) Then
				Me.OnCpfCnpjChanging(value)
				Me.SendPropertyChanging
				Me._CpfCnpj = value
				Me.SendPropertyChanged("CpfCnpj")
				Me.OnCpfCnpjChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSolicitacao", DbType:="Date")>  _
	Public Property DataSolicitacao() As System.Nullable(Of Date)
		Get
			Return Me._DataSolicitacao
		End Get
		Set
			If (Me._DataSolicitacao.Equals(value) = false) Then
				Me.OnDataSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._DataSolicitacao = value
				Me.SendPropertyChanged("DataSolicitacao")
				Me.OnDataSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraSolicitacao", DbType:="Time")>  _
	Public Property HoraSolicitacao() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraSolicitacao
		End Get
		Set
			If (Me._HoraSolicitacao.Equals(value) = false) Then
				Me.OnHoraSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._HoraSolicitacao = value
				Me.SendPropertyChanged("HoraSolicitacao")
				Me.OnHoraSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataEntrada", DbType:="Date")>  _
	Public Property DataEntrada() As System.Nullable(Of Date)
		Get
			Return Me._DataEntrada
		End Get
		Set
			If (Me._DataEntrada.Equals(value) = false) Then
				Me.OnDataEntradaChanging(value)
				Me.SendPropertyChanging
				Me._DataEntrada = value
				Me.SendPropertyChanged("DataEntrada")
				Me.OnDataEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraEntrada", DbType:="Time")>  _
	Public Property HoraEntrada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraEntrada
		End Get
		Set
			If (Me._HoraEntrada.Equals(value) = false) Then
				Me.OnHoraEntradaChanging(value)
				Me.SendPropertyChanging
				Me._HoraEntrada = value
				Me.SendPropertyChanged("HoraEntrada")
				Me.OnHoraEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataEntrega", DbType:="Date")>  _
	Public Property DataEntrega() As System.Nullable(Of Date)
		Get
			Return Me._DataEntrega
		End Get
		Set
			If (Me._DataEntrega.Equals(value) = false) Then
				Me.OnDataEntregaChanging(value)
				Me.SendPropertyChanging
				Me._DataEntrega = value
				Me.SendPropertyChanged("DataEntrega")
				Me.OnDataEntregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraEntrega", DbType:="Time")>  _
	Public Property HoraEntrega() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraEntrega
		End Get
		Set
			If (Me._HoraEntrega.Equals(value) = false) Then
				Me.OnHoraEntregaChanging(value)
				Me.SendPropertyChanging
				Me._HoraEntrega = value
				Me.SendPropertyChanged("HoraEntrega")
				Me.OnHoraEntregaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Faturado", DbType:="Bit")>  _
	Public Property Faturado() As System.Nullable(Of Boolean)
		Get
			Return Me._Faturado
		End Get
		Set
			If (Me._Faturado.Equals(value) = false) Then
				Me.OnFaturadoChanging(value)
				Me.SendPropertyChanging
				Me._Faturado = value
				Me.SendPropertyChanged("Faturado")
				Me.OnFaturadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFaturamento", DbType:="Int")>  _
	Public Property IdFaturamento() As System.Nullable(Of Integer)
		Get
			Return Me._IdFaturamento
		End Get
		Set
			If (Me._IdFaturamento.Equals(value) = false) Then
				Me.OnIdFaturamentoChanging(value)
				Me.SendPropertyChanging
				Me._IdFaturamento = value
				Me.SendPropertyChanged("IdFaturamento")
				Me.OnIdFaturamentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdLaudoExt", DbType:="Int")>  _
	Public Property IdLaudoExt() As System.Nullable(Of Integer)
		Get
			Return Me._IdLaudoExt
		End Get
		Set
			If (Me._IdLaudoExt.Equals(value) = false) Then
				Me.OnIdLaudoExtChanging(value)
				Me.SendPropertyChanging
				Me._IdLaudoExt = value
				Me.SendPropertyChanged("IdLaudoExt")
				Me.OnIdLaudoExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PlacaVeiculo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PlacaVeiculo() As String
		Get
			Return Me._PlacaVeiculo
		End Get
		Set
			If (String.Equals(Me._PlacaVeiculo, value) = false) Then
				Me.OnPlacaVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._PlacaVeiculo = value
				Me.SendPropertyChanged("PlacaVeiculo")
				Me.OnPlacaVeiculoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModeloVeiculo", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ModeloVeiculo() As String
		Get
			Return Me._ModeloVeiculo
		End Get
		Set
			If (String.Equals(Me._ModeloVeiculo, value) = false) Then
				Me.OnModeloVeiculoChanging(value)
				Me.SendPropertyChanging
				Me._ModeloVeiculo = value
				Me.SendPropertyChanged("ModeloVeiculo")
				Me.OnModeloVeiculoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ItemLaudosTecnicos")>  _
Partial Public Class ItemLaudosTecnicos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdItemLaudoTecnico As Integer
	
	Private _IdLaudoTecnico As System.Nullable(Of Integer)
	
	Private _DescricaoItem As String
	
	Private _Status As System.Nullable(Of Integer)
	
	Private _ChaveOficina As String
	
	Private _ChavePrestador As String
	
	Private _ImgPcUsadaUrl As String
	
	Private _ImgPcNovaUrl As String
	
	Private _IdItemExt As System.Nullable(Of Integer)
	
	Private _NumNf As String
	
	Private _NumItemNF As System.Nullable(Of Integer)
	
	Private _IdFornecedor As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdItemLaudoTecnicoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdItemLaudoTecnicoChanged()
    End Sub
    Partial Private Sub OnIdLaudoTecnicoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdLaudoTecnicoChanged()
    End Sub
    Partial Private Sub OnDescricaoItemChanging(value As String)
    End Sub
    Partial Private Sub OnDescricaoItemChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnChaveOficinaChanging(value As String)
    End Sub
    Partial Private Sub OnChaveOficinaChanged()
    End Sub
    Partial Private Sub OnChavePrestadorChanging(value As String)
    End Sub
    Partial Private Sub OnChavePrestadorChanged()
    End Sub
    Partial Private Sub OnImgPcUsadaUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImgPcUsadaUrlChanged()
    End Sub
    Partial Private Sub OnImgPcNovaUrlChanging(value As String)
    End Sub
    Partial Private Sub OnImgPcNovaUrlChanged()
    End Sub
    Partial Private Sub OnIdItemExtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdItemExtChanged()
    End Sub
    Partial Private Sub OnNumNfChanging(value As String)
    End Sub
    Partial Private Sub OnNumNfChanged()
    End Sub
    Partial Private Sub OnNumItemNFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNumItemNFChanged()
    End Sub
    Partial Private Sub OnIdFornecedorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdFornecedorChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItemLaudoTecnico", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdItemLaudoTecnico() As Integer
		Get
			Return Me._IdItemLaudoTecnico
		End Get
		Set
			If ((Me._IdItemLaudoTecnico = value)  _
						= false) Then
				Me.OnIdItemLaudoTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._IdItemLaudoTecnico = value
				Me.SendPropertyChanged("IdItemLaudoTecnico")
				Me.OnIdItemLaudoTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdLaudoTecnico", DbType:="Int")>  _
	Public Property IdLaudoTecnico() As System.Nullable(Of Integer)
		Get
			Return Me._IdLaudoTecnico
		End Get
		Set
			If (Me._IdLaudoTecnico.Equals(value) = false) Then
				Me.OnIdLaudoTecnicoChanging(value)
				Me.SendPropertyChanging
				Me._IdLaudoTecnico = value
				Me.SendPropertyChanged("IdLaudoTecnico")
				Me.OnIdLaudoTecnicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescricaoItem", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DescricaoItem() As String
		Get
			Return Me._DescricaoItem
		End Get
		Set
			If (String.Equals(Me._DescricaoItem, value) = false) Then
				Me.OnDescricaoItemChanging(value)
				Me.SendPropertyChanging
				Me._DescricaoItem = value
				Me.SendPropertyChanged("DescricaoItem")
				Me.OnDescricaoItemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Int")>  _
	Public Property Status() As System.Nullable(Of Integer)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChaveOficina", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ChaveOficina() As String
		Get
			Return Me._ChaveOficina
		End Get
		Set
			If (String.Equals(Me._ChaveOficina, value) = false) Then
				Me.OnChaveOficinaChanging(value)
				Me.SendPropertyChanging
				Me._ChaveOficina = value
				Me.SendPropertyChanged("ChaveOficina")
				Me.OnChaveOficinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ChavePrestador", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ChavePrestador() As String
		Get
			Return Me._ChavePrestador
		End Get
		Set
			If (String.Equals(Me._ChavePrestador, value) = false) Then
				Me.OnChavePrestadorChanging(value)
				Me.SendPropertyChanging
				Me._ChavePrestador = value
				Me.SendPropertyChanged("ChavePrestador")
				Me.OnChavePrestadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImgPcUsadaUrl", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImgPcUsadaUrl() As String
		Get
			Return Me._ImgPcUsadaUrl
		End Get
		Set
			If (String.Equals(Me._ImgPcUsadaUrl, value) = false) Then
				Me.OnImgPcUsadaUrlChanging(value)
				Me.SendPropertyChanging
				Me._ImgPcUsadaUrl = value
				Me.SendPropertyChanged("ImgPcUsadaUrl")
				Me.OnImgPcUsadaUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ImgPcNovaUrl", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ImgPcNovaUrl() As String
		Get
			Return Me._ImgPcNovaUrl
		End Get
		Set
			If (String.Equals(Me._ImgPcNovaUrl, value) = false) Then
				Me.OnImgPcNovaUrlChanging(value)
				Me.SendPropertyChanging
				Me._ImgPcNovaUrl = value
				Me.SendPropertyChanged("ImgPcNovaUrl")
				Me.OnImgPcNovaUrlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdItemExt", DbType:="Int")>  _
	Public Property IdItemExt() As System.Nullable(Of Integer)
		Get
			Return Me._IdItemExt
		End Get
		Set
			If (Me._IdItemExt.Equals(value) = false) Then
				Me.OnIdItemExtChanging(value)
				Me.SendPropertyChanging
				Me._IdItemExt = value
				Me.SendPropertyChanged("IdItemExt")
				Me.OnIdItemExtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumNf", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NumNf() As String
		Get
			Return Me._NumNf
		End Get
		Set
			If (String.Equals(Me._NumNf, value) = false) Then
				Me.OnNumNfChanging(value)
				Me.SendPropertyChanging
				Me._NumNf = value
				Me.SendPropertyChanged("NumNf")
				Me.OnNumNfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumItemNF", DbType:="Int")>  _
	Public Property NumItemNF() As System.Nullable(Of Integer)
		Get
			Return Me._NumItemNF
		End Get
		Set
			If (Me._NumItemNF.Equals(value) = false) Then
				Me.OnNumItemNFChanging(value)
				Me.SendPropertyChanging
				Me._NumItemNF = value
				Me.SendPropertyChanged("NumItemNF")
				Me.OnNumItemNFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFornecedor", DbType:="Int")>  _
	Public Property IdFornecedor() As System.Nullable(Of Integer)
		Get
			Return Me._IdFornecedor
		End Get
		Set
			If (Me._IdFornecedor.Equals(value) = false) Then
				Me.OnIdFornecedorChanging(value)
				Me.SendPropertyChanging
				Me._IdFornecedor = value
				Me.SendPropertyChanged("IdFornecedor")
				Me.OnIdFornecedorChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
