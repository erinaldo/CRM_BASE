'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="EstoqueLocal")>  _
Partial Public Class LqEstoqueLocalDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAndarEstoqueLocal(instance As AndarEstoqueLocal)
    End Sub
  Partial Private Sub UpdateAndarEstoqueLocal(instance As AndarEstoqueLocal)
    End Sub
  Partial Private Sub DeleteAndarEstoqueLocal(instance As AndarEstoqueLocal)
    End Sub
  Partial Private Sub InsertQuadrasEstoqueLocal(instance As QuadrasEstoqueLocal)
    End Sub
  Partial Private Sub UpdateQuadrasEstoqueLocal(instance As QuadrasEstoqueLocal)
    End Sub
  Partial Private Sub DeleteQuadrasEstoqueLocal(instance As QuadrasEstoqueLocal)
    End Sub
  Partial Private Sub InsertPredioEstoqueLocal(instance As PredioEstoqueLocal)
    End Sub
  Partial Private Sub UpdatePredioEstoqueLocal(instance As PredioEstoqueLocal)
    End Sub
  Partial Private Sub DeletePredioEstoqueLocal(instance As PredioEstoqueLocal)
    End Sub
  Partial Private Sub InsertRuasEstoqueLocal(instance As RuasEstoqueLocal)
    End Sub
  Partial Private Sub UpdateRuasEstoqueLocal(instance As RuasEstoqueLocal)
    End Sub
  Partial Private Sub DeleteRuasEstoqueLocal(instance As RuasEstoqueLocal)
    End Sub
  Partial Private Sub InsertEstoquesLocais(instance As EstoquesLocais)
    End Sub
  Partial Private Sub UpdateEstoquesLocais(instance As EstoquesLocais)
    End Sub
  Partial Private Sub DeleteEstoquesLocais(instance As EstoquesLocais)
    End Sub
  Partial Private Sub InsertEnderecoEstoqueLocal(instance As EnderecoEstoqueLocal)
    End Sub
  Partial Private Sub UpdateEnderecoEstoqueLocal(instance As EnderecoEstoqueLocal)
    End Sub
  Partial Private Sub DeleteEnderecoEstoqueLocal(instance As EnderecoEstoqueLocal)
    End Sub
  Partial Private Sub InsertArmazenagem(instance As Armazenagem)
    End Sub
  Partial Private Sub UpdateArmazenagem(instance As Armazenagem)
    End Sub
  Partial Private Sub DeleteArmazenagem(instance As Armazenagem)
    End Sub
  Partial Private Sub InsertSolicitacaoProdutosEstoque(instance As SolicitacaoProdutosEstoque)
    End Sub
  Partial Private Sub UpdateSolicitacaoProdutosEstoque(instance As SolicitacaoProdutosEstoque)
    End Sub
  Partial Private Sub DeleteSolicitacaoProdutosEstoque(instance As SolicitacaoProdutosEstoque)
    End Sub
  Partial Private Sub InsertBaixaEndereco(instance As BaixaEndereco)
    End Sub
  Partial Private Sub UpdateBaixaEndereco(instance As BaixaEndereco)
    End Sub
  Partial Private Sub DeleteBaixaEndereco(instance As BaixaEndereco)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CRM_BASE.My.MySettings.Default.EstoqueLocalConnectionString2, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AndarEstoqueLocal() As System.Data.Linq.Table(Of AndarEstoqueLocal)
		Get
			Return Me.GetTable(Of AndarEstoqueLocal)
		End Get
	End Property
	
	Public ReadOnly Property QuadrasEstoqueLocal() As System.Data.Linq.Table(Of QuadrasEstoqueLocal)
		Get
			Return Me.GetTable(Of QuadrasEstoqueLocal)
		End Get
	End Property
	
	Public ReadOnly Property PredioEstoqueLocal() As System.Data.Linq.Table(Of PredioEstoqueLocal)
		Get
			Return Me.GetTable(Of PredioEstoqueLocal)
		End Get
	End Property
	
	Public ReadOnly Property RuasEstoqueLocal() As System.Data.Linq.Table(Of RuasEstoqueLocal)
		Get
			Return Me.GetTable(Of RuasEstoqueLocal)
		End Get
	End Property
	
	Public ReadOnly Property EstoquesLocais() As System.Data.Linq.Table(Of EstoquesLocais)
		Get
			Return Me.GetTable(Of EstoquesLocais)
		End Get
	End Property
	
	Public ReadOnly Property EnderecoEstoqueLocal() As System.Data.Linq.Table(Of EnderecoEstoqueLocal)
		Get
			Return Me.GetTable(Of EnderecoEstoqueLocal)
		End Get
	End Property
	
	Public ReadOnly Property Armazenagem() As System.Data.Linq.Table(Of Armazenagem)
		Get
			Return Me.GetTable(Of Armazenagem)
		End Get
	End Property
	
	Public ReadOnly Property SolicitacaoProdutosEstoque() As System.Data.Linq.Table(Of SolicitacaoProdutosEstoque)
		Get
			Return Me.GetTable(Of SolicitacaoProdutosEstoque)
		End Get
	End Property
	
	Public ReadOnly Property BaixaEndereco() As System.Data.Linq.Table(Of BaixaEndereco)
		Get
			Return Me.GetTable(Of BaixaEndereco)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoQuadraEstoqueLocal")>  _
	Public Function InsereNovoQuadraEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEstoque", DbType:="Int")> ByVal idEstoque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeQuadra", DbType:="NText")> ByVal nomeQuadra As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idEstoque, nomeQuadra)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoEstoqueLocal")>  _
	Public Function InsereNovoEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeEstoque", DbType:="NText")> ByVal nomeEstoque As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoArmazengaem", DbType:="NText")> ByVal tipoArmazengaem As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), nomeEstoque, status, tipoArmazengaem)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaRuaEstoqueLocal")>  _
	Public Function InsereNovaRuaEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdQuadra", DbType:="Int")> ByVal idQuadra As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEstoque", DbType:="Int")> ByVal idEstoque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeRua", DbType:="NText")> ByVal nomeRua As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idQuadra, idEstoque, nomeRua)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovoPredioEstoqueLocal")>  _
	Public Function InsereNovoPredioEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdRua", DbType:="Int")> ByVal idRua As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEstoque", DbType:="Int")> ByVal idEstoque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomePredio", DbType:="NText")> ByVal nomePredio As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idRua, idEstoque, nomePredio)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaAndarEstoqueLocal")>  _
	Public Function InsereNovaAndarEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdPredio", DbType:="Int")> ByVal idPredio As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEstoque", DbType:="Int")> ByVal idEstoque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeAndar", DbType:="NText")> ByVal nomeAndar As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idPredio, idEstoque, nomeAndar)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaEndereoEstoqueLocal")>  _
	Public Function InsereNovaEndereoEstoqueLocal(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdAndar", DbType:="Int")> ByVal idAndar As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEstoque", DbType:="Int")> ByVal idEstoque As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NomeEndereco", DbType:="NText")> ByVal nomeEndereco As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Usado", DbType:="Bit")> ByVal usado As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Altura", DbType:="Money")> ByVal altura As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Largura", DbType:="Money")> ByVal largura As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Profundidade", DbType:="Money")> ByVal profundidade As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Peso", DbType:="Money")> ByVal peso As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idAndar, idEstoque, nomeEndereco, usado, altura, largura, profundidade, peso)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSolicitacaoProdutosEstoque")>  _
	Public Function AtualizaSolicitacaoProdutosEstoque(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Idliberador", DbType:="Int")> ByVal idliberador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataLiberacao", DbType:="Date")> ByVal dataLiberacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraLiberacao", DbType:="Time")> ByVal horaLiberacao As System.Nullable(Of System.TimeSpan)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacao, status, idliberador, dataLiberacao, horaLiberacao)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaStatusEndereco")>  _
	Public Function AtualizaStatusEndereco(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEndereco", DbType:="Int")> ByVal idEndereco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Usado", DbType:="Bit")> ByVal usado As System.Nullable(Of Boolean)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idEndereco, usado)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaRetiradaProdutosEstoque")>  _
	Public Function AtualizaRetiradaProdutosEstoque(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qtdade", DbType:="Int")> ByVal qtdade As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Bit")> ByVal ret As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataRetirada", DbType:="Date")> ByVal dataRetirada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraRetirada", DbType:="Time")> ByVal horaRetirada As System.Nullable(Of System.TimeSpan)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacao, qtdade, ret, dataRetirada, horaRetirada)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaRetiradaarmazenagem")>  _
	Public Function AtualizaRetiradaarmazenagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdArmazenagem", DbType:="Int")> ByVal idArmazenagem As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataRetirada", DbType:="Date")> ByVal dataRetirada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraRetirada", DbType:="Time")> ByVal horaRetirada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qtdade", DbType:="Int")> ByVal qtdade As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdRetirador", DbType:="Int")> ByVal idRetirador As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idArmazenagem, dataRetirada, horaRetirada, qtdade, idRetirador)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovArmazenagem")>  _
	Public Function InsereNovArmazenagem(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Validade", DbType:="Date")> ByVal validade As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Endereco", DbType:="NText")> ByVal endereco As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Nf", DbType:="Int")> ByVal nf As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdFornecedor", DbType:="NText")> ByVal idFornecedor As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qt", DbType:="Int")> ByVal qt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataEntrada", DbType:="Date")> ByVal dataEntrada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraEntrada", DbType:="Time")> ByVal horaEntrada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ValorUnit", DbType:="Money")> ByVal valorUnit As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Markup", DbType:="Money")> ByVal markup As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ValorRevenda", DbType:="Money")> ByVal valorRevenda As System.Nullable(Of Decimal), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdArmazenador", DbType:="Int")> ByVal idArmazenador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataRetirada", DbType:="Date")> ByVal dataRetirada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraRetirada", DbType:="Time")> ByVal horaRetirada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="TipoProduto", DbType:="Int")> ByVal tipoProduto As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), validade, endereco, idProduto, nf, idFornecedor, qt, dataEntrada, horaEntrada, valorUnit, markup, valorRevenda, idArmazenador, dataRetirada, horaRetirada, tipoProduto)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizavalorRevendaArmaz")>  _
	Public Function AtualizavalorRevendaArmaz(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="ValorRevenda", DbType:="Money")> ByVal valorRevenda As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProduto, valorRevenda)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereNovaSolicitacaoProdutoEstoque")>  _
	Public Function InsereNovaSolicitacaoProdutoEstoque(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qtdade", DbType:="Int")> ByVal qtdade As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Destino", DbType:="NText")> ByVal destino As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataSol", DbType:="Date")> ByVal dataSol As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraSol", DbType:="Time")> ByVal horaSol As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitante", DbType:="Int")> ByVal idSolicitante As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataLiberacao", DbType:="Date")> ByVal dataLiberacao As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraLiberacao", DbType:="Time")> ByVal horaLiberacao As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdLiberador", DbType:="Int")> ByVal idLiberador As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Status", DbType:="Bit")> ByVal status As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Ret", DbType:="Bit")> ByVal ret As System.Nullable(Of Boolean), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataRetirada", DbType:="Date")> ByVal dataRetirada As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraRetirada", DbType:="Time")> ByVal horaRetirada As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdCodExterno", DbType:="Int")> ByVal idCodExterno As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idProduto, qtdade, destino, dataSol, horaSol, idSolicitante, dataLiberacao, horaLiberacao, idLiberador, status, ret, idSolicitacaoCad, dataRetirada, horaRetirada, idCodExterno)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.DeletaSolicitacoesEstoque")>  _
	Public Function DeletaSolicitacoesEstoque(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Destino", DbType:="NText")> ByVal destino As String) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), destino)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.InsereBaixaEstoque")>  _
	Public Function InsereBaixaEstoque(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdEndereco", DbType:="Int")> ByVal idEndereco As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="Qt", DbType:="Int")> ByVal qt As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacao", DbType:="Int")> ByVal idSolicitacao As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdUsuarioBaixa", DbType:="Int")> ByVal idUsuarioBaixa As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="DataBaixa", DbType:="Date")> ByVal dataBaixa As System.Nullable(Of Date), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="HoraBaixa", DbType:="Time")> ByVal horaBaixa As System.Nullable(Of System.TimeSpan), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="NumNf", DbType:="NText")> ByVal numNf As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idEndereco, qt, idSolicitacao, idUsuarioBaixa, dataBaixa, horaBaixa, numNf, idProduto)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.AtualizaSolicitacaoEstoque_cadProd")>  _
	Public Function AtualizaSolicitacaoEstoque_cadProd(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdSolicitacaoCad", DbType:="Int")> ByVal idSolicitacaoCad As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="IdProduto", DbType:="Int")> ByVal idProduto As System.Nullable(Of Integer)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), idSolicitacaoCad, idProduto)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AndarEstoqueLocal")>  _
Partial Public Class AndarEstoqueLocal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdAndar As Integer
	
	Private _IdPredio As System.Nullable(Of Integer)
	
	Private _IdEstoque As System.Nullable(Of Integer)
	
	Private _NomeAndar As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdAndarChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdAndarChanged()
    End Sub
    Partial Private Sub OnIdPredioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdPredioChanged()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomeAndarChanging(value As String)
    End Sub
    Partial Private Sub OnNomeAndarChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAndar", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdAndar() As Integer
		Get
			Return Me._IdAndar
		End Get
		Set
			If ((Me._IdAndar = value)  _
						= false) Then
				Me.OnIdAndarChanging(value)
				Me.SendPropertyChanging
				Me._IdAndar = value
				Me.SendPropertyChanged("IdAndar")
				Me.OnIdAndarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPredio", DbType:="Int")>  _
	Public Property IdPredio() As System.Nullable(Of Integer)
		Get
			Return Me._IdPredio
		End Get
		Set
			If (Me._IdPredio.Equals(value) = false) Then
				Me.OnIdPredioChanging(value)
				Me.SendPropertyChanging
				Me._IdPredio = value
				Me.SendPropertyChanged("IdPredio")
				Me.OnIdPredioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", DbType:="Int")>  _
	Public Property IdEstoque() As System.Nullable(Of Integer)
		Get
			Return Me._IdEstoque
		End Get
		Set
			If (Me._IdEstoque.Equals(value) = false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeAndar", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeAndar() As String
		Get
			Return Me._NomeAndar
		End Get
		Set
			If (String.Equals(Me._NomeAndar, value) = false) Then
				Me.OnNomeAndarChanging(value)
				Me.SendPropertyChanging
				Me._NomeAndar = value
				Me.SendPropertyChanged("NomeAndar")
				Me.OnNomeAndarChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.QuadrasEstoqueLocal")>  _
Partial Public Class QuadrasEstoqueLocal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdQuadra As Integer
	
	Private _IdEstoque As System.Nullable(Of Integer)
	
	Private _NomeQuadra As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdQuadraChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdQuadraChanged()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomeQuadraChanging(value As String)
    End Sub
    Partial Private Sub OnNomeQuadraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdQuadra", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdQuadra() As Integer
		Get
			Return Me._IdQuadra
		End Get
		Set
			If ((Me._IdQuadra = value)  _
						= false) Then
				Me.OnIdQuadraChanging(value)
				Me.SendPropertyChanging
				Me._IdQuadra = value
				Me.SendPropertyChanged("IdQuadra")
				Me.OnIdQuadraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", DbType:="Int")>  _
	Public Property IdEstoque() As System.Nullable(Of Integer)
		Get
			Return Me._IdEstoque
		End Get
		Set
			If (Me._IdEstoque.Equals(value) = false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeQuadra", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeQuadra() As String
		Get
			Return Me._NomeQuadra
		End Get
		Set
			If (String.Equals(Me._NomeQuadra, value) = false) Then
				Me.OnNomeQuadraChanging(value)
				Me.SendPropertyChanging
				Me._NomeQuadra = value
				Me.SendPropertyChanged("NomeQuadra")
				Me.OnNomeQuadraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PredioEstoqueLocal")>  _
Partial Public Class PredioEstoqueLocal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdPredio As Integer
	
	Private _IdRua As System.Nullable(Of Integer)
	
	Private _IdEstoque As System.Nullable(Of Integer)
	
	Private _NomePredio As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdPredioChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdPredioChanged()
    End Sub
    Partial Private Sub OnIdRuaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRuaChanged()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomePredioChanging(value As String)
    End Sub
    Partial Private Sub OnNomePredioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPredio", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdPredio() As Integer
		Get
			Return Me._IdPredio
		End Get
		Set
			If ((Me._IdPredio = value)  _
						= false) Then
				Me.OnIdPredioChanging(value)
				Me.SendPropertyChanging
				Me._IdPredio = value
				Me.SendPropertyChanged("IdPredio")
				Me.OnIdPredioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRua", DbType:="Int")>  _
	Public Property IdRua() As System.Nullable(Of Integer)
		Get
			Return Me._IdRua
		End Get
		Set
			If (Me._IdRua.Equals(value) = false) Then
				Me.OnIdRuaChanging(value)
				Me.SendPropertyChanging
				Me._IdRua = value
				Me.SendPropertyChanged("IdRua")
				Me.OnIdRuaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", DbType:="Int")>  _
	Public Property IdEstoque() As System.Nullable(Of Integer)
		Get
			Return Me._IdEstoque
		End Get
		Set
			If (Me._IdEstoque.Equals(value) = false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomePredio", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomePredio() As String
		Get
			Return Me._NomePredio
		End Get
		Set
			If (String.Equals(Me._NomePredio, value) = false) Then
				Me.OnNomePredioChanging(value)
				Me.SendPropertyChanging
				Me._NomePredio = value
				Me.SendPropertyChanged("NomePredio")
				Me.OnNomePredioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RuasEstoqueLocal")>  _
Partial Public Class RuasEstoqueLocal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdRua As Integer
	
	Private _IdQuadra As System.Nullable(Of Integer)
	
	Private _IdEstoque As System.Nullable(Of Integer)
	
	Private _NomeRua As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdRuaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdRuaChanged()
    End Sub
    Partial Private Sub OnIdQuadraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdQuadraChanged()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomeRuaChanging(value As String)
    End Sub
    Partial Private Sub OnNomeRuaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRua", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdRua() As Integer
		Get
			Return Me._IdRua
		End Get
		Set
			If ((Me._IdRua = value)  _
						= false) Then
				Me.OnIdRuaChanging(value)
				Me.SendPropertyChanging
				Me._IdRua = value
				Me.SendPropertyChanged("IdRua")
				Me.OnIdRuaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdQuadra", DbType:="Int")>  _
	Public Property IdQuadra() As System.Nullable(Of Integer)
		Get
			Return Me._IdQuadra
		End Get
		Set
			If (Me._IdQuadra.Equals(value) = false) Then
				Me.OnIdQuadraChanging(value)
				Me.SendPropertyChanging
				Me._IdQuadra = value
				Me.SendPropertyChanged("IdQuadra")
				Me.OnIdQuadraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", DbType:="Int")>  _
	Public Property IdEstoque() As System.Nullable(Of Integer)
		Get
			Return Me._IdEstoque
		End Get
		Set
			If (Me._IdEstoque.Equals(value) = false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeRua", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeRua() As String
		Get
			Return Me._NomeRua
		End Get
		Set
			If (String.Equals(Me._NomeRua, value) = false) Then
				Me.OnNomeRuaChanging(value)
				Me.SendPropertyChanging
				Me._NomeRua = value
				Me.SendPropertyChanged("NomeRua")
				Me.OnNomeRuaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EstoquesLocais")>  _
Partial Public Class EstoquesLocais
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEstoque As Integer
	
	Private _NomeEstoque As String
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _TipoEstoque As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomeEstoqueChanging(value As String)
    End Sub
    Partial Private Sub OnNomeEstoqueChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnTipoEstoqueChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEstoqueChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEstoque() As Integer
		Get
			Return Me._IdEstoque
		End Get
		Set
			If ((Me._IdEstoque = value)  _
						= false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeEstoque", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeEstoque() As String
		Get
			Return Me._NomeEstoque
		End Get
		Set
			If (String.Equals(Me._NomeEstoque, value) = false) Then
				Me.OnNomeEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._NomeEstoque = value
				Me.SendPropertyChanged("NomeEstoque")
				Me.OnNomeEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoEstoque", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoEstoque() As String
		Get
			Return Me._TipoEstoque
		End Get
		Set
			If (String.Equals(Me._TipoEstoque, value) = false) Then
				Me.OnTipoEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._TipoEstoque = value
				Me.SendPropertyChanged("TipoEstoque")
				Me.OnTipoEstoqueChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.EnderecoEstoqueLocal")>  _
Partial Public Class EnderecoEstoqueLocal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEndereco As Integer
	
	Private _IdAndar As System.Nullable(Of Integer)
	
	Private _IdEstoque As System.Nullable(Of Integer)
	
	Private _NomeEndereco As String
	
	Private _Usado As System.Nullable(Of Boolean)
	
	Private _Altura As System.Nullable(Of Decimal)
	
	Private _Largura As System.Nullable(Of Decimal)
	
	Private _Profundidade As System.Nullable(Of Decimal)
	
	Private _Peso As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEnderecoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEnderecoChanged()
    End Sub
    Partial Private Sub OnIdAndarChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdAndarChanged()
    End Sub
    Partial Private Sub OnIdEstoqueChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEstoqueChanged()
    End Sub
    Partial Private Sub OnNomeEnderecoChanging(value As String)
    End Sub
    Partial Private Sub OnNomeEnderecoChanged()
    End Sub
    Partial Private Sub OnUsadoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnUsadoChanged()
    End Sub
    Partial Private Sub OnAlturaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAlturaChanged()
    End Sub
    Partial Private Sub OnLarguraChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnLarguraChanged()
    End Sub
    Partial Private Sub OnProfundidadeChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnProfundidadeChanged()
    End Sub
    Partial Private Sub OnPesoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPesoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEndereco", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEndereco() As Integer
		Get
			Return Me._IdEndereco
		End Get
		Set
			If ((Me._IdEndereco = value)  _
						= false) Then
				Me.OnIdEnderecoChanging(value)
				Me.SendPropertyChanging
				Me._IdEndereco = value
				Me.SendPropertyChanged("IdEndereco")
				Me.OnIdEnderecoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdAndar", DbType:="Int")>  _
	Public Property IdAndar() As System.Nullable(Of Integer)
		Get
			Return Me._IdAndar
		End Get
		Set
			If (Me._IdAndar.Equals(value) = false) Then
				Me.OnIdAndarChanging(value)
				Me.SendPropertyChanging
				Me._IdAndar = value
				Me.SendPropertyChanged("IdAndar")
				Me.OnIdAndarChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEstoque", DbType:="Int")>  _
	Public Property IdEstoque() As System.Nullable(Of Integer)
		Get
			Return Me._IdEstoque
		End Get
		Set
			If (Me._IdEstoque.Equals(value) = false) Then
				Me.OnIdEstoqueChanging(value)
				Me.SendPropertyChanging
				Me._IdEstoque = value
				Me.SendPropertyChanged("IdEstoque")
				Me.OnIdEstoqueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NomeEndereco", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NomeEndereco() As String
		Get
			Return Me._NomeEndereco
		End Get
		Set
			If (String.Equals(Me._NomeEndereco, value) = false) Then
				Me.OnNomeEnderecoChanging(value)
				Me.SendPropertyChanging
				Me._NomeEndereco = value
				Me.SendPropertyChanged("NomeEndereco")
				Me.OnNomeEnderecoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usado", DbType:="Bit")>  _
	Public Property Usado() As System.Nullable(Of Boolean)
		Get
			Return Me._Usado
		End Get
		Set
			If (Me._Usado.Equals(value) = false) Then
				Me.OnUsadoChanging(value)
				Me.SendPropertyChanging
				Me._Usado = value
				Me.SendPropertyChanged("Usado")
				Me.OnUsadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Altura", DbType:="Money")>  _
	Public Property Altura() As System.Nullable(Of Decimal)
		Get
			Return Me._Altura
		End Get
		Set
			If (Me._Altura.Equals(value) = false) Then
				Me.OnAlturaChanging(value)
				Me.SendPropertyChanging
				Me._Altura = value
				Me.SendPropertyChanged("Altura")
				Me.OnAlturaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Largura", DbType:="Money")>  _
	Public Property Largura() As System.Nullable(Of Decimal)
		Get
			Return Me._Largura
		End Get
		Set
			If (Me._Largura.Equals(value) = false) Then
				Me.OnLarguraChanging(value)
				Me.SendPropertyChanging
				Me._Largura = value
				Me.SendPropertyChanged("Largura")
				Me.OnLarguraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Profundidade", DbType:="Money")>  _
	Public Property Profundidade() As System.Nullable(Of Decimal)
		Get
			Return Me._Profundidade
		End Get
		Set
			If (Me._Profundidade.Equals(value) = false) Then
				Me.OnProfundidadeChanging(value)
				Me.SendPropertyChanging
				Me._Profundidade = value
				Me.SendPropertyChanged("Profundidade")
				Me.OnProfundidadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Peso", DbType:="Money")>  _
	Public Property Peso() As System.Nullable(Of Decimal)
		Get
			Return Me._Peso
		End Get
		Set
			If (Me._Peso.Equals(value) = false) Then
				Me.OnPesoChanging(value)
				Me.SendPropertyChanging
				Me._Peso = value
				Me.SendPropertyChanged("Peso")
				Me.OnPesoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Armazenagem")>  _
Partial Public Class Armazenagem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdArmazenagem As Integer
	
	Private _Validade As System.Nullable(Of Date)
	
	Private _Endereco As String
	
	Private _IdProduto As System.Nullable(Of Integer)
	
	Private _NF As System.Nullable(Of Integer)
	
	Private _IdFornecedor As String
	
	Private _Qt As System.Nullable(Of Integer)
	
	Private _DataEntrada As System.Nullable(Of Date)
	
	Private _HoraEntrada As System.Nullable(Of System.TimeSpan)
	
	Private _ValorUnit As System.Nullable(Of Decimal)
	
	Private _Markup As System.Nullable(Of Decimal)
	
	Private _ValorRevenda As System.Nullable(Of Decimal)
	
	Private _IdArmazenador As System.Nullable(Of Integer)
	
	Private _DataRetirada As System.Nullable(Of Date)
	
	Private _HoraRetirada As System.Nullable(Of System.TimeSpan)
	
	Private _IdRetirador As System.Nullable(Of Integer)
	
	Private _TipoProduto As Integer
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdArmazenagemChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdArmazenagemChanged()
    End Sub
    Partial Private Sub OnValidadeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnValidadeChanged()
    End Sub
    Partial Private Sub OnEnderecoChanging(value As String)
    End Sub
    Partial Private Sub OnEnderecoChanged()
    End Sub
    Partial Private Sub OnIdProdutoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProdutoChanged()
    End Sub
    Partial Private Sub OnNFChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnNFChanged()
    End Sub
    Partial Private Sub OnIdFornecedorChanging(value As String)
    End Sub
    Partial Private Sub OnIdFornecedorChanged()
    End Sub
    Partial Private Sub OnQtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtChanged()
    End Sub
    Partial Private Sub OnDataEntradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataEntradaChanged()
    End Sub
    Partial Private Sub OnHoraEntradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraEntradaChanged()
    End Sub
    Partial Private Sub OnValorUnitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorUnitChanged()
    End Sub
    Partial Private Sub OnMarkupChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnMarkupChanged()
    End Sub
    Partial Private Sub OnValorRevendaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnValorRevendaChanged()
    End Sub
    Partial Private Sub OnIdArmazenadorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdArmazenadorChanged()
    End Sub
    Partial Private Sub OnDataRetiradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataRetiradaChanged()
    End Sub
    Partial Private Sub OnHoraRetiradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraRetiradaChanged()
    End Sub
    Partial Private Sub OnIdRetiradorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdRetiradorChanged()
    End Sub
    Partial Private Sub OnTipoProdutoChanging(value As Integer)
    End Sub
    Partial Private Sub OnTipoProdutoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArmazenagem", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdArmazenagem() As Integer
		Get
			Return Me._IdArmazenagem
		End Get
		Set
			If ((Me._IdArmazenagem = value)  _
						= false) Then
				Me.OnIdArmazenagemChanging(value)
				Me.SendPropertyChanging
				Me._IdArmazenagem = value
				Me.SendPropertyChanged("IdArmazenagem")
				Me.OnIdArmazenagemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Validade", DbType:="Date")>  _
	Public Property Validade() As System.Nullable(Of Date)
		Get
			Return Me._Validade
		End Get
		Set
			If (Me._Validade.Equals(value) = false) Then
				Me.OnValidadeChanging(value)
				Me.SendPropertyChanging
				Me._Validade = value
				Me.SendPropertyChanged("Validade")
				Me.OnValidadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Endereco", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Endereco() As String
		Get
			Return Me._Endereco
		End Get
		Set
			If (String.Equals(Me._Endereco, value) = false) Then
				Me.OnEnderecoChanging(value)
				Me.SendPropertyChanging
				Me._Endereco = value
				Me.SendPropertyChanged("Endereco")
				Me.OnEnderecoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProduto", DbType:="Int")>  _
	Public Property IdProduto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProduto
		End Get
		Set
			If (Me._IdProduto.Equals(value) = false) Then
				Me.OnIdProdutoChanging(value)
				Me.SendPropertyChanging
				Me._IdProduto = value
				Me.SendPropertyChanged("IdProduto")
				Me.OnIdProdutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NF", DbType:="Int")>  _
	Public Property NF() As System.Nullable(Of Integer)
		Get
			Return Me._NF
		End Get
		Set
			If (Me._NF.Equals(value) = false) Then
				Me.OnNFChanging(value)
				Me.SendPropertyChanging
				Me._NF = value
				Me.SendPropertyChanged("NF")
				Me.OnNFChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdFornecedor", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IdFornecedor() As String
		Get
			Return Me._IdFornecedor
		End Get
		Set
			If (String.Equals(Me._IdFornecedor, value) = false) Then
				Me.OnIdFornecedorChanging(value)
				Me.SendPropertyChanging
				Me._IdFornecedor = value
				Me.SendPropertyChanged("IdFornecedor")
				Me.OnIdFornecedorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qt", DbType:="Int")>  _
	Public Property Qt() As System.Nullable(Of Integer)
		Get
			Return Me._Qt
		End Get
		Set
			If (Me._Qt.Equals(value) = false) Then
				Me.OnQtChanging(value)
				Me.SendPropertyChanging
				Me._Qt = value
				Me.SendPropertyChanged("Qt")
				Me.OnQtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataEntrada", DbType:="Date")>  _
	Public Property DataEntrada() As System.Nullable(Of Date)
		Get
			Return Me._DataEntrada
		End Get
		Set
			If (Me._DataEntrada.Equals(value) = false) Then
				Me.OnDataEntradaChanging(value)
				Me.SendPropertyChanging
				Me._DataEntrada = value
				Me.SendPropertyChanged("DataEntrada")
				Me.OnDataEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraEntrada", DbType:="Time")>  _
	Public Property HoraEntrada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraEntrada
		End Get
		Set
			If (Me._HoraEntrada.Equals(value) = false) Then
				Me.OnHoraEntradaChanging(value)
				Me.SendPropertyChanging
				Me._HoraEntrada = value
				Me.SendPropertyChanged("HoraEntrada")
				Me.OnHoraEntradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorUnit", DbType:="Money")>  _
	Public Property ValorUnit() As System.Nullable(Of Decimal)
		Get
			Return Me._ValorUnit
		End Get
		Set
			If (Me._ValorUnit.Equals(value) = false) Then
				Me.OnValorUnitChanging(value)
				Me.SendPropertyChanging
				Me._ValorUnit = value
				Me.SendPropertyChanged("ValorUnit")
				Me.OnValorUnitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Markup", DbType:="Money")>  _
	Public Property Markup() As System.Nullable(Of Decimal)
		Get
			Return Me._Markup
		End Get
		Set
			If (Me._Markup.Equals(value) = false) Then
				Me.OnMarkupChanging(value)
				Me.SendPropertyChanging
				Me._Markup = value
				Me.SendPropertyChanged("Markup")
				Me.OnMarkupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValorRevenda", DbType:="Money")>  _
	Public Property ValorRevenda() As System.Nullable(Of Decimal)
		Get
			Return Me._ValorRevenda
		End Get
		Set
			If (Me._ValorRevenda.Equals(value) = false) Then
				Me.OnValorRevendaChanging(value)
				Me.SendPropertyChanging
				Me._ValorRevenda = value
				Me.SendPropertyChanged("ValorRevenda")
				Me.OnValorRevendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdArmazenador", DbType:="Int")>  _
	Public Property IdArmazenador() As System.Nullable(Of Integer)
		Get
			Return Me._IdArmazenador
		End Get
		Set
			If (Me._IdArmazenador.Equals(value) = false) Then
				Me.OnIdArmazenadorChanging(value)
				Me.SendPropertyChanging
				Me._IdArmazenador = value
				Me.SendPropertyChanged("IdArmazenador")
				Me.OnIdArmazenadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataRetirada", DbType:="Date")>  _
	Public Property DataRetirada() As System.Nullable(Of Date)
		Get
			Return Me._DataRetirada
		End Get
		Set
			If (Me._DataRetirada.Equals(value) = false) Then
				Me.OnDataRetiradaChanging(value)
				Me.SendPropertyChanging
				Me._DataRetirada = value
				Me.SendPropertyChanged("DataRetirada")
				Me.OnDataRetiradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraRetirada", DbType:="Time")>  _
	Public Property HoraRetirada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraRetirada
		End Get
		Set
			If (Me._HoraRetirada.Equals(value) = false) Then
				Me.OnHoraRetiradaChanging(value)
				Me.SendPropertyChanging
				Me._HoraRetirada = value
				Me.SendPropertyChanged("HoraRetirada")
				Me.OnHoraRetiradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdRetirador", DbType:="Int")>  _
	Public Property IdRetirador() As System.Nullable(Of Integer)
		Get
			Return Me._IdRetirador
		End Get
		Set
			If (Me._IdRetirador.Equals(value) = false) Then
				Me.OnIdRetiradorChanging(value)
				Me.SendPropertyChanging
				Me._IdRetirador = value
				Me.SendPropertyChanged("IdRetirador")
				Me.OnIdRetiradorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoProduto", DbType:="Int")>  _
	Public Property TipoProduto() As Integer
		Get
			Return Me._TipoProduto
		End Get
		Set
			If ((Me._TipoProduto = value)  _
						= false) Then
				Me.OnTipoProdutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoProduto = value
				Me.SendPropertyChanged("TipoProduto")
				Me.OnTipoProdutoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SolicitacaoProdutosEstoque")>  _
Partial Public Class SolicitacaoProdutosEstoque
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdSolicitacao As Integer
	
	Private _IdProduto As System.Nullable(Of Integer)
	
	Private _Qtdade As System.Nullable(Of Integer)
	
	Private _Destino As String
	
	Private _DataSol As System.Nullable(Of Date)
	
	Private _HoraSol As System.Nullable(Of System.TimeSpan)
	
	Private _IdSolicitante As System.Nullable(Of Integer)
	
	Private _DataLiberacao As System.Nullable(Of Date)
	
	Private _HoraLiberacao As System.Nullable(Of System.TimeSpan)
	
	Private _IdLiberador As System.Nullable(Of Integer)
	
	Private _Status As System.Nullable(Of Boolean)
	
	Private _Ret As System.Nullable(Of Boolean)
	
	Private _IdSolicitacaoCad As System.Nullable(Of Integer)
	
	Private _DataRetirada As System.Nullable(Of Date)
	
	Private _HoraRetirada As System.Nullable(Of System.TimeSpan)
	
	Private _IdCodExterno As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdSolicitacaoChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdSolicitacaoChanged()
    End Sub
    Partial Private Sub OnIdProdutoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProdutoChanged()
    End Sub
    Partial Private Sub OnQtdadeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtdadeChanged()
    End Sub
    Partial Private Sub OnDestinoChanging(value As String)
    End Sub
    Partial Private Sub OnDestinoChanged()
    End Sub
    Partial Private Sub OnDataSolChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSolChanged()
    End Sub
    Partial Private Sub OnHoraSolChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraSolChanged()
    End Sub
    Partial Private Sub OnIdSolicitanteChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitanteChanged()
    End Sub
    Partial Private Sub OnDataLiberacaoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataLiberacaoChanged()
    End Sub
    Partial Private Sub OnHoraLiberacaoChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraLiberacaoChanged()
    End Sub
    Partial Private Sub OnIdLiberadorChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdLiberadorChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnRetChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnRetChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoCadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoCadChanged()
    End Sub
    Partial Private Sub OnDataRetiradaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataRetiradaChanged()
    End Sub
    Partial Private Sub OnHoraRetiradaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraRetiradaChanged()
    End Sub
    Partial Private Sub OnIdCodExternoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdCodExternoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacao", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdSolicitacao() As Integer
		Get
			Return Me._IdSolicitacao
		End Get
		Set
			If ((Me._IdSolicitacao = value)  _
						= false) Then
				Me.OnIdSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacao = value
				Me.SendPropertyChanged("IdSolicitacao")
				Me.OnIdSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProduto", DbType:="Int")>  _
	Public Property IdProduto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProduto
		End Get
		Set
			If (Me._IdProduto.Equals(value) = false) Then
				Me.OnIdProdutoChanging(value)
				Me.SendPropertyChanging
				Me._IdProduto = value
				Me.SendPropertyChanged("IdProduto")
				Me.OnIdProdutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qtdade", DbType:="Int")>  _
	Public Property Qtdade() As System.Nullable(Of Integer)
		Get
			Return Me._Qtdade
		End Get
		Set
			If (Me._Qtdade.Equals(value) = false) Then
				Me.OnQtdadeChanging(value)
				Me.SendPropertyChanging
				Me._Qtdade = value
				Me.SendPropertyChanged("Qtdade")
				Me.OnQtdadeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Destino", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Destino() As String
		Get
			Return Me._Destino
		End Get
		Set
			If (String.Equals(Me._Destino, value) = false) Then
				Me.OnDestinoChanging(value)
				Me.SendPropertyChanging
				Me._Destino = value
				Me.SendPropertyChanged("Destino")
				Me.OnDestinoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSol", DbType:="Date")>  _
	Public Property DataSol() As System.Nullable(Of Date)
		Get
			Return Me._DataSol
		End Get
		Set
			If (Me._DataSol.Equals(value) = false) Then
				Me.OnDataSolChanging(value)
				Me.SendPropertyChanging
				Me._DataSol = value
				Me.SendPropertyChanged("DataSol")
				Me.OnDataSolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraSol", DbType:="Time")>  _
	Public Property HoraSol() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraSol
		End Get
		Set
			If (Me._HoraSol.Equals(value) = false) Then
				Me.OnHoraSolChanging(value)
				Me.SendPropertyChanging
				Me._HoraSol = value
				Me.SendPropertyChanged("HoraSol")
				Me.OnHoraSolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitante", DbType:="Int")>  _
	Public Property IdSolicitante() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitante
		End Get
		Set
			If (Me._IdSolicitante.Equals(value) = false) Then
				Me.OnIdSolicitanteChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitante = value
				Me.SendPropertyChanged("IdSolicitante")
				Me.OnIdSolicitanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataLiberacao", DbType:="Date")>  _
	Public Property DataLiberacao() As System.Nullable(Of Date)
		Get
			Return Me._DataLiberacao
		End Get
		Set
			If (Me._DataLiberacao.Equals(value) = false) Then
				Me.OnDataLiberacaoChanging(value)
				Me.SendPropertyChanging
				Me._DataLiberacao = value
				Me.SendPropertyChanged("DataLiberacao")
				Me.OnDataLiberacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraLiberacao", DbType:="Time")>  _
	Public Property HoraLiberacao() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraLiberacao
		End Get
		Set
			If (Me._HoraLiberacao.Equals(value) = false) Then
				Me.OnHoraLiberacaoChanging(value)
				Me.SendPropertyChanging
				Me._HoraLiberacao = value
				Me.SendPropertyChanged("HoraLiberacao")
				Me.OnHoraLiberacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdLiberador", DbType:="Int")>  _
	Public Property IdLiberador() As System.Nullable(Of Integer)
		Get
			Return Me._IdLiberador
		End Get
		Set
			If (Me._IdLiberador.Equals(value) = false) Then
				Me.OnIdLiberadorChanging(value)
				Me.SendPropertyChanging
				Me._IdLiberador = value
				Me.SendPropertyChanged("IdLiberador")
				Me.OnIdLiberadorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Status", DbType:="Bit")>  _
	Public Property Status() As System.Nullable(Of Boolean)
		Get
			Return Me._Status
		End Get
		Set
			If (Me._Status.Equals(value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ret", DbType:="Bit")>  _
	Public Property Ret() As System.Nullable(Of Boolean)
		Get
			Return Me._Ret
		End Get
		Set
			If (Me._Ret.Equals(value) = false) Then
				Me.OnRetChanging(value)
				Me.SendPropertyChanging
				Me._Ret = value
				Me.SendPropertyChanged("Ret")
				Me.OnRetChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacaoCad", DbType:="Int")>  _
	Public Property IdSolicitacaoCad() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitacaoCad
		End Get
		Set
			If (Me._IdSolicitacaoCad.Equals(value) = false) Then
				Me.OnIdSolicitacaoCadChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacaoCad = value
				Me.SendPropertyChanged("IdSolicitacaoCad")
				Me.OnIdSolicitacaoCadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataRetirada", DbType:="Date")>  _
	Public Property DataRetirada() As System.Nullable(Of Date)
		Get
			Return Me._DataRetirada
		End Get
		Set
			If (Me._DataRetirada.Equals(value) = false) Then
				Me.OnDataRetiradaChanging(value)
				Me.SendPropertyChanging
				Me._DataRetirada = value
				Me.SendPropertyChanged("DataRetirada")
				Me.OnDataRetiradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraRetirada", DbType:="Time")>  _
	Public Property HoraRetirada() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraRetirada
		End Get
		Set
			If (Me._HoraRetirada.Equals(value) = false) Then
				Me.OnHoraRetiradaChanging(value)
				Me.SendPropertyChanging
				Me._HoraRetirada = value
				Me.SendPropertyChanged("HoraRetirada")
				Me.OnHoraRetiradaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdCodExterno", DbType:="Int")>  _
	Public Property IdCodExterno() As System.Nullable(Of Integer)
		Get
			Return Me._IdCodExterno
		End Get
		Set
			If (Me._IdCodExterno.Equals(value) = false) Then
				Me.OnIdCodExternoChanging(value)
				Me.SendPropertyChanging
				Me._IdCodExterno = value
				Me.SendPropertyChanged("IdCodExterno")
				Me.OnIdCodExternoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BaixaEndereco")>  _
Partial Public Class BaixaEndereco
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _IdEnderecoBaixa As Integer
	
	Private _IdEndereco As System.Nullable(Of Integer)
	
	Private _Qt As System.Nullable(Of Integer)
	
	Private _IdSolicitacao As System.Nullable(Of Integer)
	
	Private _IdUsuarioBaixa As System.Nullable(Of Integer)
	
	Private _DataBaixa As System.Nullable(Of Date)
	
	Private _HoraBaixa As System.Nullable(Of System.TimeSpan)
	
	Private _NumNf As String
	
	Private _IdProduto As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdEnderecoBaixaChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdEnderecoBaixaChanged()
    End Sub
    Partial Private Sub OnIdEnderecoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdEnderecoChanged()
    End Sub
    Partial Private Sub OnQtChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQtChanged()
    End Sub
    Partial Private Sub OnIdSolicitacaoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdSolicitacaoChanged()
    End Sub
    Partial Private Sub OnIdUsuarioBaixaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdUsuarioBaixaChanged()
    End Sub
    Partial Private Sub OnDataBaixaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataBaixaChanged()
    End Sub
    Partial Private Sub OnHoraBaixaChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnHoraBaixaChanged()
    End Sub
    Partial Private Sub OnNumNfChanging(value As String)
    End Sub
    Partial Private Sub OnNumNfChanged()
    End Sub
    Partial Private Sub OnIdProdutoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnIdProdutoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEnderecoBaixa", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property IdEnderecoBaixa() As Integer
		Get
			Return Me._IdEnderecoBaixa
		End Get
		Set
			If ((Me._IdEnderecoBaixa = value)  _
						= false) Then
				Me.OnIdEnderecoBaixaChanging(value)
				Me.SendPropertyChanging
				Me._IdEnderecoBaixa = value
				Me.SendPropertyChanged("IdEnderecoBaixa")
				Me.OnIdEnderecoBaixaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdEndereco", DbType:="Int")>  _
	Public Property IdEndereco() As System.Nullable(Of Integer)
		Get
			Return Me._IdEndereco
		End Get
		Set
			If (Me._IdEndereco.Equals(value) = false) Then
				Me.OnIdEnderecoChanging(value)
				Me.SendPropertyChanging
				Me._IdEndereco = value
				Me.SendPropertyChanged("IdEndereco")
				Me.OnIdEnderecoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Qt", DbType:="Int")>  _
	Public Property Qt() As System.Nullable(Of Integer)
		Get
			Return Me._Qt
		End Get
		Set
			If (Me._Qt.Equals(value) = false) Then
				Me.OnQtChanging(value)
				Me.SendPropertyChanging
				Me._Qt = value
				Me.SendPropertyChanged("Qt")
				Me.OnQtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdSolicitacao", DbType:="Int")>  _
	Public Property IdSolicitacao() As System.Nullable(Of Integer)
		Get
			Return Me._IdSolicitacao
		End Get
		Set
			If (Me._IdSolicitacao.Equals(value) = false) Then
				Me.OnIdSolicitacaoChanging(value)
				Me.SendPropertyChanging
				Me._IdSolicitacao = value
				Me.SendPropertyChanged("IdSolicitacao")
				Me.OnIdSolicitacaoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdUsuarioBaixa", DbType:="Int")>  _
	Public Property IdUsuarioBaixa() As System.Nullable(Of Integer)
		Get
			Return Me._IdUsuarioBaixa
		End Get
		Set
			If (Me._IdUsuarioBaixa.Equals(value) = false) Then
				Me.OnIdUsuarioBaixaChanging(value)
				Me.SendPropertyChanging
				Me._IdUsuarioBaixa = value
				Me.SendPropertyChanged("IdUsuarioBaixa")
				Me.OnIdUsuarioBaixaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataBaixa", DbType:="Date")>  _
	Public Property DataBaixa() As System.Nullable(Of Date)
		Get
			Return Me._DataBaixa
		End Get
		Set
			If (Me._DataBaixa.Equals(value) = false) Then
				Me.OnDataBaixaChanging(value)
				Me.SendPropertyChanging
				Me._DataBaixa = value
				Me.SendPropertyChanged("DataBaixa")
				Me.OnDataBaixaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_HoraBaixa", DbType:="Time")>  _
	Public Property HoraBaixa() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._HoraBaixa
		End Get
		Set
			If (Me._HoraBaixa.Equals(value) = false) Then
				Me.OnHoraBaixaChanging(value)
				Me.SendPropertyChanging
				Me._HoraBaixa = value
				Me.SendPropertyChanged("HoraBaixa")
				Me.OnHoraBaixaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumNf", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NumNf() As String
		Get
			Return Me._NumNf
		End Get
		Set
			If (String.Equals(Me._NumNf, value) = false) Then
				Me.OnNumNfChanging(value)
				Me.SendPropertyChanging
				Me._NumNf = value
				Me.SendPropertyChanged("NumNf")
				Me.OnNumNfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdProduto", DbType:="Int")>  _
	Public Property IdProduto() As System.Nullable(Of Integer)
		Get
			Return Me._IdProduto
		End Get
		Set
			If (Me._IdProduto.Equals(value) = false) Then
				Me.OnIdProdutoChanging(value)
				Me.SendPropertyChanging
				Me._IdProduto = value
				Me.SendPropertyChanged("IdProduto")
				Me.OnIdProdutoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
